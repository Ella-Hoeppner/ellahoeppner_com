{"version":3,"sources":["shadow_eval/queue.cljs"],"mappings":";AAGA,AAAA;AAAA;;;AAAA,AAAaS;;AAAb,AAAAT,AAAA,AACgBU;AADhB,AAAA,AAAAT,AAAA,AAAA,AAAA,AAAA,AACgBS,AAAAA;AADhBR,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBQ,AAAAA;;AADhB,AAAAL,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBK,AAAAA;;AADhB,AAAA,AAAAJ,AAAA,AACgBI;;;;AADhB,AAAA,AAAA,AACGP,AAAaO;AADhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgBA,AAAAA;AADhB,AACgBA,AAAAA;;AADhB,AAAAV,AACgBU;;;;AADhB,AAAAH,AAAA,AAEUG,AAAKC;AAFf,AAAA,AAAAV,AAAA,AAAA,AAAA,AAAA,AAEUS,AAAAA;AAFVR,AAAA,AAAAM,AAAA,AAAAJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEUQ,AAAAA,AAAKC,AAAAA;;AAFf,AAAAN,AAAA,AAAAG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEUK,AAAAA,AAAKC,AAAAA;;AAFf,AAAA,AAAAL,AAAA,AAEUI;;;;AAFV,AAAA,AAAA,AAEGF,AAAOE,AAAKC;AAFf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEUD,AAAAA;AAFV,AAEUA,AAAAA,AAAKC;;AAFf,AAAAJ,AAEUG,AAAKC;;;;AAFf,AAOA,AAAA;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAASK;;AAAT,AAAA,AAAA,AAAA,AAASA,AAEOP;;AAFhB,AAAA,AAAA,AAEgBA;AAFhB,AAGI,AAAUU;AAAV;;AAAA,AACE,AAAAC,AAAa,AAACC,AAAKH;AAAnB,AAAA,AAAAE;AAAA,AAAA,AAAAA,AAAWV;AAAX,AACE,AAAA,AAAMS;;AACN,AAAMD,AAAM,AAACI,AAAIJ;;AACjB,AAAAK,AAAG;AAAA,AACE,AAAA,AAAMJ;;AACN,AAAaV;;AAFlB,AAAA,AAAAc,AAAAA,AAACb,AAAAA,AAAAA;;AAHH;;;;;AAJN,AAAA,AAAA,AAAA,AAASM,AAUCP,AAAKC;;AAVf,AAAA,AAAA,AAUUD;AAVV,AAWI,AAAMS,AAAM,AAACM,AAAKN,AAAMR;;AACxB,AAAaD;;;AAZjB,AAAA,AAAA,AAASO;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAJ,AAAAC,AAAAC,AAASE;AAAT,AAAA,AAAAD,AAAAF,AAAA;;;AAAA;;;AAAA,AAASI,AAAyBC,AAAgBC;AAAlD,AAAA,AAAAH,AAAkCE,AAAgBC;;;AAAzCH","names":["shadow-eval$queue$IQueue$maybe_eval_BANG_$dyn","x__4428__auto__","m__4429__auto__","shadow-eval.queue/maybe-eval!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","shadow-eval$queue$IQueue$conj_BANG_$dyn","shadow-eval.queue/conj!","shadow-eval.queue/IQueue","this","f","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","shadow-eval.queue/FunctionQueue","shadow-eval.queue/->FunctionQueue","queue","running?","temp__5753__auto__","cljs.core/peek","cljs.core/pop","G__63017","cljs.core.conj"],"sourcesContent":["(ns shadow-eval.queue\n  (:refer-clojure :exclude [conj!]))\n\n(defprotocol IQueue\n  (maybe-eval! [this])\n  (conj! [this f]))\n\n;; queue for evaluating async functions sequentially.\n;; conj! a function to the queue, it will receive a `done` callback\n;; which must be called for the queue to process a next item.\n(deftype FunctionQueue [^:mutable queue ^:mutable running?]\n  IQueue\n  (maybe-eval! [this]\n    (when-not running?\n      (when-let [f (peek queue)]\n        (set! running? true)\n        (set! queue (pop queue))\n        (f (fn []\n             (set! running? false)\n             (maybe-eval! this))))))\n  (conj! [this f]\n    (set! queue (conj queue f))\n    (maybe-eval! this)))\n"]}