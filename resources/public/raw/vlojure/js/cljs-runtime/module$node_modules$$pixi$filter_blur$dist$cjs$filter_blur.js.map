{
"version":3,
"file":"module$node_modules$$pixi$filter_blur$dist$cjs$filter_blur.js",
"lineCount":27,
"mappings":"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",
"sources":["node_modules/@pixi/filter-blur/dist/cjs/filter-blur.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$filter_blur$dist$cjs$filter_blur\"] = function(global,require,module,exports) {\n/*!\n * @pixi/filter-blur - v6.0.4\n * Compiled Tue, 11 May 2021 18:00:23 UTC\n *\n * @pixi/filter-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar core = require('@pixi/core');\nvar settings = require('@pixi/settings');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) { if (b.hasOwnProperty(p)) { d[p] = b[p]; } } };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar vertTemplate = \"\\n    attribute vec2 aVertexPosition;\\n\\n    uniform mat3 projectionMatrix;\\n\\n    uniform float strength;\\n\\n    varying vec2 vBlurTexCoords[%size%];\\n\\n    uniform vec4 inputSize;\\n    uniform vec4 outputFrame;\\n\\n    vec4 filterVertexPosition( void )\\n    {\\n        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\\n\\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\\n    }\\n\\n    vec2 filterTextureCoord( void )\\n    {\\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\\n    }\\n\\n    void main(void)\\n    {\\n        gl_Position = filterVertexPosition();\\n\\n        vec2 textureCoord = filterTextureCoord();\\n        %blur%\\n    }\";\nfunction generateBlurVertSource(kernelSize, x) {\n    var halfLength = Math.ceil(kernelSize / 2);\n    var vertSource = vertTemplate;\n    var blurLoop = '';\n    var template;\n    if (x) {\n        template = 'vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);';\n    }\n    else {\n        template = 'vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);';\n    }\n    for (var i = 0; i < kernelSize; i++) {\n        var blur = template.replace('%index%', i.toString());\n        blur = blur.replace('%sampleIndex%', i - (halfLength - 1) + \".0\");\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n    vertSource = vertSource.replace('%blur%', blurLoop);\n    vertSource = vertSource.replace('%size%', kernelSize.toString());\n    return vertSource;\n}\n\nvar GAUSSIAN_VALUES = {\n    5: [0.153388, 0.221461, 0.250301],\n    7: [0.071303, 0.131514, 0.189879, 0.214607],\n    9: [0.028532, 0.067234, 0.124009, 0.179044, 0.20236],\n    11: [0.0093, 0.028002, 0.065984, 0.121703, 0.175713, 0.198596],\n    13: [0.002406, 0.009255, 0.027867, 0.065666, 0.121117, 0.174868, 0.197641],\n    15: [0.000489, 0.002403, 0.009246, 0.02784, 0.065602, 0.120999, 0.174697, 0.197448],\n};\nvar fragTemplate = [\n    'varying vec2 vBlurTexCoords[%size%];',\n    'uniform sampler2D uSampler;',\n    'void main(void)',\n    '{',\n    '    gl_FragColor = vec4(0.0);',\n    '    %blur%',\n    '}' ].join('\\n');\nfunction generateBlurFragSource(kernelSize) {\n    var kernel = GAUSSIAN_VALUES[kernelSize];\n    var halfLength = kernel.length;\n    var fragSource = fragTemplate;\n    var blurLoop = '';\n    var template = 'gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;';\n    var value;\n    for (var i = 0; i < kernelSize; i++) {\n        var blur = template.replace('%index%', i.toString());\n        value = i;\n        if (i >= halfLength) {\n            value = kernelSize - i - 1;\n        }\n        blur = blur.replace('%value%', kernel[value].toString());\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n    fragSource = fragSource.replace('%blur%', blurLoop);\n    fragSource = fragSource.replace('%size%', kernelSize.toString());\n    return fragSource;\n}\n\n/**\n * Different types of environments for WebGL.\n *\n * @static\n * @memberof PIXI\n * @name ENV\n * @enum {number}\n * @property {number} WEBGL_LEGACY - Used for older v1 WebGL devices. PixiJS will aim to ensure compatibility\n *  with older / less advanced devices. If you experience unexplained flickering prefer this environment.\n * @property {number} WEBGL - Version 1 of WebGL\n * @property {number} WEBGL2 - Version 2 of WebGL\n */\nvar ENV;\n(function (ENV) {\n    ENV[ENV[\"WEBGL_LEGACY\"] = 0] = \"WEBGL_LEGACY\";\n    ENV[ENV[\"WEBGL\"] = 1] = \"WEBGL\";\n    ENV[ENV[\"WEBGL2\"] = 2] = \"WEBGL2\";\n})(ENV || (ENV = {}));\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @memberof PIXI\n * @name RENDERER_TYPE\n * @enum {number}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nvar RENDERER_TYPE;\n(function (RENDERER_TYPE) {\n    RENDERER_TYPE[RENDERER_TYPE[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    RENDERER_TYPE[RENDERER_TYPE[\"WEBGL\"] = 1] = \"WEBGL\";\n    RENDERER_TYPE[RENDERER_TYPE[\"CANVAS\"] = 2] = \"CANVAS\";\n})(RENDERER_TYPE || (RENDERER_TYPE = {}));\n/**\n * Bitwise OR of masks that indicate the buffers to be cleared.\n *\n * @static\n * @memberof PIXI\n * @name BUFFER_BITS\n * @enum {number}\n * @property {number} COLOR - Indicates the buffers currently enabled for color writing.\n * @property {number} DEPTH - Indicates the depth buffer.\n * @property {number} STENCIL - Indicates the stencil buffer.\n */\nvar BUFFER_BITS;\n(function (BUFFER_BITS) {\n    BUFFER_BITS[BUFFER_BITS[\"COLOR\"] = 16384] = \"COLOR\";\n    BUFFER_BITS[BUFFER_BITS[\"DEPTH\"] = 256] = \"DEPTH\";\n    BUFFER_BITS[BUFFER_BITS[\"STENCIL\"] = 1024] = \"STENCIL\";\n})(BUFFER_BITS || (BUFFER_BITS = {}));\n/**\n * Various blend modes supported by PIXI.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @memberof PIXI\n * @name BLEND_MODES\n * @enum {number}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n * @property {number} NORMAL_NPM\n * @property {number} ADD_NPM\n * @property {number} SCREEN_NPM\n * @property {number} NONE\n * @property {number} SRC_IN\n * @property {number} SRC_OUT\n * @property {number} SRC_ATOP\n * @property {number} DST_OVER\n * @property {number} DST_IN\n * @property {number} DST_OUT\n * @property {number} DST_ATOP\n * @property {number} SUBTRACT\n * @property {number} SRC_OVER\n * @property {number} ERASE\n * @property {number} XOR\n */\nvar BLEND_MODES;\n(function (BLEND_MODES) {\n    BLEND_MODES[BLEND_MODES[\"NORMAL\"] = 0] = \"NORMAL\";\n    BLEND_MODES[BLEND_MODES[\"ADD\"] = 1] = \"ADD\";\n    BLEND_MODES[BLEND_MODES[\"MULTIPLY\"] = 2] = \"MULTIPLY\";\n    BLEND_MODES[BLEND_MODES[\"SCREEN\"] = 3] = \"SCREEN\";\n    BLEND_MODES[BLEND_MODES[\"OVERLAY\"] = 4] = \"OVERLAY\";\n    BLEND_MODES[BLEND_MODES[\"DARKEN\"] = 5] = \"DARKEN\";\n    BLEND_MODES[BLEND_MODES[\"LIGHTEN\"] = 6] = \"LIGHTEN\";\n    BLEND_MODES[BLEND_MODES[\"COLOR_DODGE\"] = 7] = \"COLOR_DODGE\";\n    BLEND_MODES[BLEND_MODES[\"COLOR_BURN\"] = 8] = \"COLOR_BURN\";\n    BLEND_MODES[BLEND_MODES[\"HARD_LIGHT\"] = 9] = \"HARD_LIGHT\";\n    BLEND_MODES[BLEND_MODES[\"SOFT_LIGHT\"] = 10] = \"SOFT_LIGHT\";\n    BLEND_MODES[BLEND_MODES[\"DIFFERENCE\"] = 11] = \"DIFFERENCE\";\n    BLEND_MODES[BLEND_MODES[\"EXCLUSION\"] = 12] = \"EXCLUSION\";\n    BLEND_MODES[BLEND_MODES[\"HUE\"] = 13] = \"HUE\";\n    BLEND_MODES[BLEND_MODES[\"SATURATION\"] = 14] = \"SATURATION\";\n    BLEND_MODES[BLEND_MODES[\"COLOR\"] = 15] = \"COLOR\";\n    BLEND_MODES[BLEND_MODES[\"LUMINOSITY\"] = 16] = \"LUMINOSITY\";\n    BLEND_MODES[BLEND_MODES[\"NORMAL_NPM\"] = 17] = \"NORMAL_NPM\";\n    BLEND_MODES[BLEND_MODES[\"ADD_NPM\"] = 18] = \"ADD_NPM\";\n    BLEND_MODES[BLEND_MODES[\"SCREEN_NPM\"] = 19] = \"SCREEN_NPM\";\n    BLEND_MODES[BLEND_MODES[\"NONE\"] = 20] = \"NONE\";\n    BLEND_MODES[BLEND_MODES[\"SRC_OVER\"] = 0] = \"SRC_OVER\";\n    BLEND_MODES[BLEND_MODES[\"SRC_IN\"] = 21] = \"SRC_IN\";\n    BLEND_MODES[BLEND_MODES[\"SRC_OUT\"] = 22] = \"SRC_OUT\";\n    BLEND_MODES[BLEND_MODES[\"SRC_ATOP\"] = 23] = \"SRC_ATOP\";\n    BLEND_MODES[BLEND_MODES[\"DST_OVER\"] = 24] = \"DST_OVER\";\n    BLEND_MODES[BLEND_MODES[\"DST_IN\"] = 25] = \"DST_IN\";\n    BLEND_MODES[BLEND_MODES[\"DST_OUT\"] = 26] = \"DST_OUT\";\n    BLEND_MODES[BLEND_MODES[\"DST_ATOP\"] = 27] = \"DST_ATOP\";\n    BLEND_MODES[BLEND_MODES[\"ERASE\"] = 26] = \"ERASE\";\n    BLEND_MODES[BLEND_MODES[\"SUBTRACT\"] = 28] = \"SUBTRACT\";\n    BLEND_MODES[BLEND_MODES[\"XOR\"] = 29] = \"XOR\";\n})(BLEND_MODES || (BLEND_MODES = {}));\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @memberof PIXI\n * @static\n * @name DRAW_MODES\n * @enum {number}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nvar DRAW_MODES;\n(function (DRAW_MODES) {\n    DRAW_MODES[DRAW_MODES[\"POINTS\"] = 0] = \"POINTS\";\n    DRAW_MODES[DRAW_MODES[\"LINES\"] = 1] = \"LINES\";\n    DRAW_MODES[DRAW_MODES[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    DRAW_MODES[DRAW_MODES[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(DRAW_MODES || (DRAW_MODES = {}));\n/**\n * Various GL texture/resources formats.\n *\n * @memberof PIXI\n * @static\n * @name FORMATS\n * @enum {number}\n * @property {number} RGBA=6408\n * @property {number} RGB=6407\n * @property {number} RED=6403\n * @property {number} ALPHA=6406\n * @property {number} LUMINANCE=6409\n * @property {number} LUMINANCE_ALPHA=6410\n * @property {number} DEPTH_COMPONENT=6402\n * @property {number} DEPTH_STENCIL=34041\n */\nvar FORMATS;\n(function (FORMATS) {\n    FORMATS[FORMATS[\"RGBA\"] = 6408] = \"RGBA\";\n    FORMATS[FORMATS[\"RGB\"] = 6407] = \"RGB\";\n    FORMATS[FORMATS[\"ALPHA\"] = 6406] = \"ALPHA\";\n    FORMATS[FORMATS[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n    FORMATS[FORMATS[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n    FORMATS[FORMATS[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n    FORMATS[FORMATS[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n})(FORMATS || (FORMATS = {}));\n/**\n * Various GL target types.\n *\n * @memberof PIXI\n * @static\n * @name TARGETS\n * @enum {number}\n * @property {number} TEXTURE_2D=3553\n * @property {number} TEXTURE_CUBE_MAP=34067\n * @property {number} TEXTURE_2D_ARRAY=35866\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_X=34069\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_X=34070\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Y=34071\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Y=34072\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Z=34073\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Z=34074\n */\nvar TARGETS;\n(function (TARGETS) {\n    TARGETS[TARGETS[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n    TARGETS[TARGETS[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n})(TARGETS || (TARGETS = {}));\n/**\n * Various GL data format types.\n *\n * @memberof PIXI\n * @static\n * @name TYPES\n * @enum {number}\n * @property {number} UNSIGNED_BYTE=5121\n * @property {number} UNSIGNED_SHORT=5123\n * @property {number} UNSIGNED_SHORT_5_6_5=33635\n * @property {number} UNSIGNED_SHORT_4_4_4_4=32819\n * @property {number} UNSIGNED_SHORT_5_5_5_1=32820\n * @property {number} FLOAT=5126\n * @property {number} HALF_FLOAT=36193\n */\nvar TYPES;\n(function (TYPES) {\n    TYPES[TYPES[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    TYPES[TYPES[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n    TYPES[TYPES[\"FLOAT\"] = 5126] = \"FLOAT\";\n    TYPES[TYPES[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n})(TYPES || (TYPES = {}));\n/**\n * Various sampler types. Correspond to `sampler`, `isampler`, `usampler` GLSL types respectively.\n * WebGL1 works only with FLOAT.\n *\n * @memberof PIXI\n * @static\n * @name SAMPLER_TYPES\n * @enum {number}\n * @property {number} FLOAT=0\n * @property {number} INT=1\n * @property {number} UINT=2\n */\nvar SAMPLER_TYPES;\n(function (SAMPLER_TYPES) {\n    SAMPLER_TYPES[SAMPLER_TYPES[\"FLOAT\"] = 0] = \"FLOAT\";\n    SAMPLER_TYPES[SAMPLER_TYPES[\"INT\"] = 1] = \"INT\";\n    SAMPLER_TYPES[SAMPLER_TYPES[\"UINT\"] = 2] = \"UINT\";\n})(SAMPLER_TYPES || (SAMPLER_TYPES = {}));\n/**\n * The scale modes that are supported by pixi.\n *\n * The {@link PIXI.settings.SCALE_MODE} scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @memberof PIXI\n * @static\n * @name SCALE_MODES\n * @enum {number}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nvar SCALE_MODES;\n(function (SCALE_MODES) {\n    SCALE_MODES[SCALE_MODES[\"NEAREST\"] = 0] = \"NEAREST\";\n    SCALE_MODES[SCALE_MODES[\"LINEAR\"] = 1] = \"LINEAR\";\n})(SCALE_MODES || (SCALE_MODES = {}));\n/**\n * The wrap modes that are supported by pixi.\n *\n * The {@link PIXI.settings.WRAP_MODE} wrap mode affects the default wrapping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as WebGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @name WRAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nvar WRAP_MODES;\n(function (WRAP_MODES) {\n    WRAP_MODES[WRAP_MODES[\"CLAMP\"] = 33071] = \"CLAMP\";\n    WRAP_MODES[WRAP_MODES[\"REPEAT\"] = 10497] = \"REPEAT\";\n    WRAP_MODES[WRAP_MODES[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n})(WRAP_MODES || (WRAP_MODES = {}));\n/**\n * Mipmap filtering modes that are supported by pixi.\n *\n * The {@link PIXI.settings.MIPMAP_TEXTURES} affects default texture filtering.\n * Mipmaps are generated for a baseTexture if its `mipmap` field is `ON`,\n * or its `POW2` and texture dimensions are powers of 2.\n * Due to platform restriction, `ON` option will work like `POW2` for webgl-1.\n *\n * This property only affects WebGL.\n *\n * @name MIPMAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} OFF - No mipmaps\n * @property {number} POW2 - Generate mipmaps if texture dimensions are pow2\n * @property {number} ON - Always generate mipmaps\n * @property {number} ON_MANUAL - Use mipmaps, but do not auto-generate them; this is used with a resource\n *   that supports buffering each level-of-detail.\n */\nvar MIPMAP_MODES;\n(function (MIPMAP_MODES) {\n    MIPMAP_MODES[MIPMAP_MODES[\"OFF\"] = 0] = \"OFF\";\n    MIPMAP_MODES[MIPMAP_MODES[\"POW2\"] = 1] = \"POW2\";\n    MIPMAP_MODES[MIPMAP_MODES[\"ON\"] = 2] = \"ON\";\n    MIPMAP_MODES[MIPMAP_MODES[\"ON_MANUAL\"] = 3] = \"ON_MANUAL\";\n})(MIPMAP_MODES || (MIPMAP_MODES = {}));\n/**\n * How to treat textures with premultiplied alpha\n *\n * @name ALPHA_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NO_PREMULTIPLIED_ALPHA - Source is not premultiplied, leave it like that.\n *  Option for compressed and data textures that are created from typed arrays.\n * @property {number} PREMULTIPLY_ON_UPLOAD - Source is not premultiplied, premultiply on upload.\n *  Default option, used for all loaded images.\n * @property {number} PREMULTIPLIED_ALPHA - Source is already premultiplied\n *  Example: spine atlases with `_pma` suffix.\n * @property {number} NPM - Alias for NO_PREMULTIPLIED_ALPHA.\n * @property {number} UNPACK - Default option, alias for PREMULTIPLY_ON_UPLOAD.\n * @property {number} PMA - Alias for PREMULTIPLIED_ALPHA.\n */\nvar ALPHA_MODES;\n(function (ALPHA_MODES) {\n    ALPHA_MODES[ALPHA_MODES[\"NPM\"] = 0] = \"NPM\";\n    ALPHA_MODES[ALPHA_MODES[\"UNPACK\"] = 1] = \"UNPACK\";\n    ALPHA_MODES[ALPHA_MODES[\"PMA\"] = 2] = \"PMA\";\n    ALPHA_MODES[ALPHA_MODES[\"NO_PREMULTIPLIED_ALPHA\"] = 0] = \"NO_PREMULTIPLIED_ALPHA\";\n    ALPHA_MODES[ALPHA_MODES[\"PREMULTIPLY_ON_UPLOAD\"] = 1] = \"PREMULTIPLY_ON_UPLOAD\";\n    ALPHA_MODES[ALPHA_MODES[\"PREMULTIPLY_ALPHA\"] = 2] = \"PREMULTIPLY_ALPHA\";\n})(ALPHA_MODES || (ALPHA_MODES = {}));\n/**\n * Configure whether filter textures are cleared after binding.\n *\n * Filter textures need not be cleared if the filter does not use pixel blending. {@link CLEAR_MODES.BLIT} will detect\n * this and skip clearing as an optimization.\n *\n * @name CLEAR_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} BLEND - Do not clear the filter texture. The filter's output will blend on top of the output texture.\n * @property {number} CLEAR - Always clear the filter texture.\n * @property {number} BLIT - Clear only if {@link FilterSystem.forceClear} is set or if the filter uses pixel blending.\n * @property {number} NO - Alias for BLEND, same as `false` in earlier versions\n * @property {number} YES - Alias for CLEAR, same as `true` in earlier versions\n * @property {number} AUTO - Alias for BLIT\n */\nvar CLEAR_MODES;\n(function (CLEAR_MODES) {\n    CLEAR_MODES[CLEAR_MODES[\"NO\"] = 0] = \"NO\";\n    CLEAR_MODES[CLEAR_MODES[\"YES\"] = 1] = \"YES\";\n    CLEAR_MODES[CLEAR_MODES[\"AUTO\"] = 2] = \"AUTO\";\n    CLEAR_MODES[CLEAR_MODES[\"BLEND\"] = 0] = \"BLEND\";\n    CLEAR_MODES[CLEAR_MODES[\"CLEAR\"] = 1] = \"CLEAR\";\n    CLEAR_MODES[CLEAR_MODES[\"BLIT\"] = 2] = \"BLIT\";\n})(CLEAR_MODES || (CLEAR_MODES = {}));\n/**\n * The gc modes that are supported by pixi.\n *\n * The {@link PIXI.settings.GC_MODE} Garbage Collection mode for PixiJS textures is AUTO\n * If set to GC_MODE, the renderer will occasionally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @name GC_MODES\n * @enum {number}\n * @static\n * @memberof PIXI\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nvar GC_MODES;\n(function (GC_MODES) {\n    GC_MODES[GC_MODES[\"AUTO\"] = 0] = \"AUTO\";\n    GC_MODES[GC_MODES[\"MANUAL\"] = 1] = \"MANUAL\";\n})(GC_MODES || (GC_MODES = {}));\n/**\n * Constants that specify float precision in shaders.\n *\n * @name PRECISION\n * @memberof PIXI\n * @constant\n * @static\n * @enum {string}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nvar PRECISION;\n(function (PRECISION) {\n    PRECISION[\"LOW\"] = \"lowp\";\n    PRECISION[\"MEDIUM\"] = \"mediump\";\n    PRECISION[\"HIGH\"] = \"highp\";\n})(PRECISION || (PRECISION = {}));\n/**\n * Constants for mask implementations.\n * We use `type` suffix because it leads to very different behaviours\n *\n * @name MASK_TYPES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - Mask is ignored\n * @property {number} SCISSOR - Scissor mask, rectangle on screen, cheap\n * @property {number} STENCIL - Stencil mask, 1-bit, medium, works only if renderer supports stencil\n * @property {number} SPRITE - Mask that uses SpriteMaskFilter, uses temporary RenderTexture\n */\nvar MASK_TYPES;\n(function (MASK_TYPES) {\n    MASK_TYPES[MASK_TYPES[\"NONE\"] = 0] = \"NONE\";\n    MASK_TYPES[MASK_TYPES[\"SCISSOR\"] = 1] = \"SCISSOR\";\n    MASK_TYPES[MASK_TYPES[\"STENCIL\"] = 2] = \"STENCIL\";\n    MASK_TYPES[MASK_TYPES[\"SPRITE\"] = 3] = \"SPRITE\";\n})(MASK_TYPES || (MASK_TYPES = {}));\n/**\n * Constants for multi-sampling antialiasing.\n *\n * @see PIXI.Framebuffer#multisample\n *\n * @name MSAA_QUALITY\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - No multisampling for this renderTexture\n * @property {number} LOW - Try 2 samples\n * @property {number} MEDIUM - Try 4 samples\n * @property {number} HIGH - Try 8 samples\n */\nvar MSAA_QUALITY;\n(function (MSAA_QUALITY) {\n    MSAA_QUALITY[MSAA_QUALITY[\"NONE\"] = 0] = \"NONE\";\n    MSAA_QUALITY[MSAA_QUALITY[\"LOW\"] = 2] = \"LOW\";\n    MSAA_QUALITY[MSAA_QUALITY[\"MEDIUM\"] = 4] = \"MEDIUM\";\n    MSAA_QUALITY[MSAA_QUALITY[\"HIGH\"] = 8] = \"HIGH\";\n})(MSAA_QUALITY || (MSAA_QUALITY = {}));\n\n/**\n * The BlurFilterPass applies a horizontal or vertical Gaussian blur to an object.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurFilterPass = /** @class */ (function (_super) {\n    __extends(BlurFilterPass, _super);\n    /**\n     * @param {boolean} horizontal - Do pass along the x-axis (`true`) or y-axis (`false`).\n     * @param {number} [strength=8] - The strength of the blur filter.\n     * @param {number} [quality=4] - The quality of the blur filter.\n     * @param {number} [resolution=PIXI.settings.FILTER_RESOLUTION] - The resolution of the blur filter.\n     * @param {number} [kernelSize=5] - The kernelSize of the blur filter.Options: 5, 7, 9, 11, 13, 15.\n     */\n    function BlurFilterPass(horizontal, strength, quality, resolution, kernelSize) {\n        if (strength === void 0) { strength = 8; }\n        if (quality === void 0) { quality = 4; }\n        if (resolution === void 0) { resolution = settings.settings.FILTER_RESOLUTION; }\n        if (kernelSize === void 0) { kernelSize = 5; }\n        var _this = this;\n        var vertSrc = generateBlurVertSource(kernelSize, horizontal);\n        var fragSrc = generateBlurFragSource(kernelSize);\n        _this = _super.call(this, \n        // vertex shader\n        vertSrc, \n        // fragment shader\n        fragSrc) || this;\n        _this.horizontal = horizontal;\n        _this.resolution = resolution;\n        _this._quality = 0;\n        _this.quality = quality;\n        _this.blur = strength;\n        return _this;\n    }\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterSystem} filterManager - The manager.\n     * @param {PIXI.RenderTexture} input - The input target.\n     * @param {PIXI.RenderTexture} output - The output target.\n     * @param {PIXI.CLEAR_MODES} clearMode - How to clear\n     */\n    BlurFilterPass.prototype.apply = function (filterManager, input, output, clearMode) {\n        if (output) {\n            if (this.horizontal) {\n                this.uniforms.strength = (1 / output.width) * (output.width / input.width);\n            }\n            else {\n                this.uniforms.strength = (1 / output.height) * (output.height / input.height);\n            }\n        }\n        else {\n            if (this.horizontal) // eslint-disable-line\n             {\n                this.uniforms.strength = (1 / filterManager.renderer.width) * (filterManager.renderer.width / input.width);\n            }\n            else {\n                this.uniforms.strength = (1 / filterManager.renderer.height) * (filterManager.renderer.height / input.height); // eslint-disable-line\n            }\n        }\n        // screen space!\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes;\n        if (this.passes === 1) {\n            filterManager.applyFilter(this, input, output, clearMode);\n        }\n        else {\n            var renderTarget = filterManager.getFilterTexture();\n            var renderer = filterManager.renderer;\n            var flip = input;\n            var flop = renderTarget;\n            this.state.blend = false;\n            filterManager.applyFilter(this, flip, flop, CLEAR_MODES.CLEAR);\n            for (var i = 1; i < this.passes - 1; i++) {\n                filterManager.bindAndClear(flip, CLEAR_MODES.BLIT);\n                this.uniforms.uSampler = flop;\n                var temp = flop;\n                flop = flip;\n                flip = temp;\n                renderer.shader.bind(this);\n                renderer.geometry.draw(5);\n            }\n            this.state.blend = true;\n            filterManager.applyFilter(this, flop, output, clearMode);\n            filterManager.returnFilterTexture(renderTarget);\n        }\n    };\n    Object.defineProperty(BlurFilterPass.prototype, \"blur\", {\n        /**\n         * Sets the strength of both the blur.\n         *\n         * @member {number}\n         * @default 16\n         */\n        get: function () {\n            return this.strength;\n        },\n        set: function (value) {\n            this.padding = 1 + (Math.abs(value) * 2);\n            this.strength = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilterPass.prototype, \"quality\", {\n        /**\n         * Sets the quality of the blur by modifying the number of passes. More passes means higher\n         * quality bluring but the lower the performance.\n         *\n         * @member {number}\n         * @default 4\n         */\n        get: function () {\n            return this._quality;\n        },\n        set: function (value) {\n            this._quality = value;\n            this.passes = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BlurFilterPass;\n}(core.Filter));\n\n/**\n * The BlurFilter applies a Gaussian blur to an object.\n *\n * The strength of the blur can be set for the x-axis and y-axis separately.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurFilter = /** @class */ (function (_super) {\n    __extends(BlurFilter, _super);\n    /**\n     * @param {number} [strength=8] - The strength of the blur filter.\n     * @param {number} [quality=4] - The quality of the blur filter.\n     * @param {number} [resolution=PIXI.settings.FILTER_RESOLUTION] - The resolution of the blur filter.\n     * @param {number} [kernelSize=5] - The kernelSize of the blur filter.Options: 5, 7, 9, 11, 13, 15.\n     */\n    function BlurFilter(strength, quality, resolution, kernelSize) {\n        if (strength === void 0) { strength = 8; }\n        if (quality === void 0) { quality = 4; }\n        if (resolution === void 0) { resolution = settings.settings.FILTER_RESOLUTION; }\n        if (kernelSize === void 0) { kernelSize = 5; }\n        var _this = _super.call(this) || this;\n        _this.blurXFilter = new BlurFilterPass(true, strength, quality, resolution, kernelSize);\n        _this.blurYFilter = new BlurFilterPass(false, strength, quality, resolution, kernelSize);\n        _this.resolution = resolution;\n        _this.quality = quality;\n        _this.blur = strength;\n        _this.repeatEdgePixels = false;\n        return _this;\n    }\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterSystem} filterManager - The manager.\n     * @param {PIXI.RenderTexture} input - The input target.\n     * @param {PIXI.RenderTexture} output - The output target.\n     * @param {PIXI.CLEAR_MODES} clearMode - How to clear\n     */\n    BlurFilter.prototype.apply = function (filterManager, input, output, clearMode) {\n        var xStrength = Math.abs(this.blurXFilter.strength);\n        var yStrength = Math.abs(this.blurYFilter.strength);\n        if (xStrength && yStrength) {\n            var renderTarget = filterManager.getFilterTexture();\n            this.blurXFilter.apply(filterManager, input, renderTarget, CLEAR_MODES.CLEAR);\n            this.blurYFilter.apply(filterManager, renderTarget, output, clearMode);\n            filterManager.returnFilterTexture(renderTarget);\n        }\n        else if (yStrength) {\n            this.blurYFilter.apply(filterManager, input, output, clearMode);\n        }\n        else {\n            this.blurXFilter.apply(filterManager, input, output, clearMode);\n        }\n    };\n    BlurFilter.prototype.updatePadding = function () {\n        if (this._repeatEdgePixels) {\n            this.padding = 0;\n        }\n        else {\n            this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n        }\n    };\n    Object.defineProperty(BlurFilter.prototype, \"blur\", {\n        /**\n         * Sets the strength of both the blurX and blurY properties simultaneously\n         *\n         * @member {number}\n         * @default 2\n         */\n        get: function () {\n            return this.blurXFilter.blur;\n        },\n        set: function (value) {\n            this.blurXFilter.blur = this.blurYFilter.blur = value;\n            this.updatePadding();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter.prototype, \"quality\", {\n        /**\n         * Sets the number of passes for blur. More passes means higher quality bluring.\n         *\n         * @member {number}\n         * @default 1\n         */\n        get: function () {\n            return this.blurXFilter.quality;\n        },\n        set: function (value) {\n            this.blurXFilter.quality = this.blurYFilter.quality = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter.prototype, \"blurX\", {\n        /**\n         * Sets the strength of the blurX property\n         *\n         * @member {number}\n         * @default 2\n         */\n        get: function () {\n            return this.blurXFilter.blur;\n        },\n        set: function (value) {\n            this.blurXFilter.blur = value;\n            this.updatePadding();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter.prototype, \"blurY\", {\n        /**\n         * Sets the strength of the blurY property\n         *\n         * @member {number}\n         * @default 2\n         */\n        get: function () {\n            return this.blurYFilter.blur;\n        },\n        set: function (value) {\n            this.blurYFilter.blur = value;\n            this.updatePadding();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter.prototype, \"blendMode\", {\n        /**\n         * Sets the blendmode of the filter\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         */\n        get: function () {\n            return this.blurYFilter.blendMode;\n        },\n        set: function (value) {\n            this.blurYFilter.blendMode = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter.prototype, \"repeatEdgePixels\", {\n        /**\n         * If set to true the edge of the target will be clamped\n         *\n         * @member {boolean}\n         * @default false\n         */\n        get: function () {\n            return this._repeatEdgePixels;\n        },\n        set: function (value) {\n            this._repeatEdgePixels = value;\n            this.updatePadding();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BlurFilter;\n}(core.Filter));\n\nexports.BlurFilter = BlurFilter;\nexports.BlurFilterPass = BlurFilterPass;\n//# sourceMappingURL=filter-blur.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","defineProperty","value","core","settings","setPrototypeOf","__proto__","Array","p","hasOwnProperty","GAUSSIAN_VALUES","ENV","RENDERER_TYPE","BUFFER_BITS","BLEND_MODES","DRAW_MODES","FORMATS","TARGETS","TYPES","SAMPLER_TYPES","SCALE_MODES","WRAP_MODES","MIPMAP_MODES","ALPHA_MODES","CLEAR_MODES","GC_MODES","PRECISION","MASK_TYPES","MSAA_QUALITY","BlurFilterPass","_super","horizontal","strength","quality","resolution","kernelSize","FILTER_RESOLUTION","halfLength","Math","ceil","vertSource","vertTemplate","blurLoop","template","i","blur","replace","toString","kernel","length","fragSource","fragTemplate","_this","call","vertSrc","_quality","apply","BlurFilterPass.prototype.apply","filterManager","input","output","clearMode","uniforms","width","height","renderer","passes","applyFilter","renderTarget","getFilterTexture","flop","state","blend","flip","CLEAR","bindAndClear","BLIT","temp","uSampler","shader","bind","geometry","draw","returnFilterTexture","get","set","padding","abs","enumerable","configurable","Filter","BlurFilter","blurXFilter","blurYFilter","repeatEdgePixels","BlurFilter.prototype.apply","yStrength","xStrength","updatePadding","BlurFilter.prototype.updatePadding","_repeatEdgePixels","max","blendMode"]
}
