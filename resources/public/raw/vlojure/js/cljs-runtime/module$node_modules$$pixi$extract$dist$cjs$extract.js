shadow$provide.module$node_modules$$pixi$extract$dist$cjs$extract=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$pixi$utils$dist$cjs$utils");global=require("module$node_modules$$pixi$math$dist$cjs$math");var core=require("module$node_modules$$pixi$core$dist$cjs$core"),TEMP_RECT=new global.Rectangle;require=function(){function Extract(renderer){this.renderer=renderer}Extract.prototype.image=function(target,format,
quality){var image=new Image;image.src=this.base64(target,format,quality);return image};Extract.prototype.base64=function(target,format,quality){return this.canvas(target).toDataURL(format,quality)};Extract.prototype.canvas=function(target){var renderer=this.renderer,generated=!1;if(target)if(target instanceof core.RenderTexture)var renderTexture=target;else renderTexture=this.renderer.generateTexture(target),generated=!0;if(renderTexture){var resolution=renderTexture.baseTexture.resolution;var frame=
renderTexture.frame;var flipY=!1;renderer.renderTexture.bind(renderTexture)}else resolution=this.renderer.resolution,flipY=!0,frame=TEMP_RECT,frame.width=this.renderer.width,frame.height=this.renderer.height,renderer.renderTexture.bind(null);var width=Math.floor(frame.width*resolution+1E-4);target=Math.floor(frame.height*resolution+1E-4);var canvasBuffer=new utils.CanvasRenderTarget(width,target,1),webglPixels=new Uint8Array(4*width*target);renderer=renderer.gl;renderer.readPixels(frame.x*resolution,
frame.y*resolution,width,target,renderer.RGBA,renderer.UNSIGNED_BYTE,webglPixels);renderer=canvasBuffer.context.getImageData(0,0,width,target);Extract.arrayPostDivide(webglPixels,renderer.data);canvasBuffer.context.putImageData(renderer,0,0);flipY&&(flipY=new utils.CanvasRenderTarget(canvasBuffer.width,canvasBuffer.height,1),flipY.context.scale(1,-1),flipY.context.drawImage(canvasBuffer.canvas,0,-target),canvasBuffer.destroy(),canvasBuffer=flipY);generated&&renderTexture.destroy(!0);return canvasBuffer.canvas};
Extract.prototype.pixels=function(target){var renderer=this.renderer,generated=!1;if(target)if(target instanceof core.RenderTexture)var renderTexture=target;else renderTexture=this.renderer.generateTexture(target),generated=!0;if(renderTexture){target=renderTexture.baseTexture.resolution;var frame=renderTexture.frame;renderer.renderTexture.bind(renderTexture)}else target=renderer.resolution,frame=TEMP_RECT,frame.width=renderer.width,frame.height=renderer.height,renderer.renderTexture.bind(null);var width=
frame.width*target,height=frame.height*target,webglPixels=new Uint8Array(4*width*height);renderer=renderer.gl;renderer.readPixels(frame.x*target,frame.y*target,width,height,renderer.RGBA,renderer.UNSIGNED_BYTE,webglPixels);generated&&renderTexture.destroy(!0);Extract.arrayPostDivide(webglPixels,webglPixels);return webglPixels};Extract.prototype.destroy=function(){this.renderer=null};Extract.arrayPostDivide=function(pixels,out){for(var i=0;i<pixels.length;i+=4){var alpha=out[i+3]=pixels[i+3];0!==alpha?
(out[i]=Math.round(Math.min(255*pixels[i]/alpha,255)),out[i+1]=Math.round(Math.min(255*pixels[i+1]/alpha,255)),out[i+2]=Math.round(Math.min(255*pixels[i+2]/alpha,255))):(out[i]=pixels[i],out[i+1]=pixels[i+1],out[i+2]=pixels[i+2])}};return Extract}();exports.Extract=require}
//# sourceMappingURL=module$node_modules$$pixi$extract$dist$cjs$extract.js.map
