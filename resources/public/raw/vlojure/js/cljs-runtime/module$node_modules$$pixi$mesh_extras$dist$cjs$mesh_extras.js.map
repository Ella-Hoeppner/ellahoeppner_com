{
"version":3,
"file":"module$node_modules$$pixi$mesh_extras$dist$cjs$mesh_extras.js",
"lineCount":22,
"mappings":"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",
"sources":["node_modules/@pixi/mesh-extras/dist/cjs/mesh-extras.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$mesh_extras$dist$cjs$mesh_extras\"] = function(global,require,module,exports) {\n/*!\n * @pixi/mesh-extras - v6.0.4\n * Compiled Tue, 11 May 2021 18:00:23 UTC\n *\n * @pixi/mesh-extras is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar mesh = require('@pixi/mesh');\nvar constants = require('@pixi/constants');\nvar core = require('@pixi/core');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) { if (b.hasOwnProperty(p)) { d[p] = b[p]; } } };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar PlaneGeometry = /** @class */ (function (_super) {\n    __extends(PlaneGeometry, _super);\n    function PlaneGeometry(width, height, segWidth, segHeight) {\n        if (width === void 0) { width = 100; }\n        if (height === void 0) { height = 100; }\n        if (segWidth === void 0) { segWidth = 10; }\n        if (segHeight === void 0) { segHeight = 10; }\n        var _this = _super.call(this) || this;\n        _this.segWidth = segWidth;\n        _this.segHeight = segHeight;\n        _this.width = width;\n        _this.height = height;\n        _this.build();\n        return _this;\n    }\n    /**\n     * Refreshes plane coordinates\n     * @private\n     */\n    PlaneGeometry.prototype.build = function () {\n        var total = this.segWidth * this.segHeight;\n        var verts = [];\n        var uvs = [];\n        var indices = [];\n        var segmentsX = this.segWidth - 1;\n        var segmentsY = this.segHeight - 1;\n        var sizeX = (this.width) / segmentsX;\n        var sizeY = (this.height) / segmentsY;\n        for (var i = 0; i < total; i++) {\n            var x = (i % this.segWidth);\n            var y = ((i / this.segWidth) | 0);\n            verts.push(x * sizeX, y * sizeY);\n            uvs.push(x / segmentsX, y / segmentsY);\n        }\n        var totalSub = segmentsX * segmentsY;\n        for (var i = 0; i < totalSub; i++) {\n            var xpos = i % segmentsX;\n            var ypos = (i / segmentsX) | 0;\n            var value = (ypos * this.segWidth) + xpos;\n            var value2 = (ypos * this.segWidth) + xpos + 1;\n            var value3 = ((ypos + 1) * this.segWidth) + xpos;\n            var value4 = ((ypos + 1) * this.segWidth) + xpos + 1;\n            indices.push(value, value2, value3, value2, value4, value3);\n        }\n        this.buffers[0].data = new Float32Array(verts);\n        this.buffers[1].data = new Float32Array(uvs);\n        this.indexBuffer.data = new Uint16Array(indices);\n        // ensure that the changes are uploaded\n        this.buffers[0].update();\n        this.buffers[1].update();\n        this.indexBuffer.update();\n    };\n    return PlaneGeometry;\n}(mesh.MeshGeometry));\n\n/**\n * RopeGeometry allows you to draw a geometry across several points and then manipulate these points.\n *\n * ```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new PIXI.Point(i * 50, 0));\n * };\n * const rope = new PIXI.RopeGeometry(100, points);\n * ```\n *\n * @class\n * @extends PIXI.MeshGeometry\n * @memberof PIXI\n *\n */\nvar RopeGeometry = /** @class */ (function (_super) {\n    __extends(RopeGeometry, _super);\n    /**\n     * @param {number} [width=200] - The width (i.e., thickness) of the rope.\n     * @param {PIXI.Point[]} [points] - An array of {@link PIXI.Point} objects to construct this rope.\n     * @param {number} [textureScale=0] - By default the rope texture will be stretched to match\n     *     rope length. If textureScale is positive this value will be treated as a scaling\n     *     factor and the texture will preserve its aspect ratio instead. To create a tiling rope\n     *     set baseTexture.wrapMode to {@link PIXI.WRAP_MODES.REPEAT} and use a power of two texture,\n     *     then set textureScale=1 to keep the original texture pixel size.\n     *     In order to reduce alpha channel artifacts provide a larger texture and downsample -\n     *     i.e. set textureScale=0.5 to scale it down twice.\n     */\n    function RopeGeometry(width, points, textureScale) {\n        if (width === void 0) { width = 200; }\n        if (textureScale === void 0) { textureScale = 0; }\n        var _this = _super.call(this, new Float32Array(points.length * 4), new Float32Array(points.length * 4), new Uint16Array((points.length - 1) * 6)) || this;\n        /**\n         * An array of points that determine the rope\n         * @member {PIXI.Point[]}\n         */\n        _this.points = points;\n        /**\n         * The width (i.e., thickness) of the rope.\n         * @member {number}\n         * @readOnly\n         */\n        _this._width = width;\n        /**\n         * Rope texture scale, if zero then the rope texture is stretched.\n         * @member {number}\n         * @readOnly\n         */\n        _this.textureScale = textureScale;\n        _this.build();\n        return _this;\n    }\n    Object.defineProperty(RopeGeometry.prototype, \"width\", {\n        /**\n         * The width (i.e., thickness) of the rope.\n         * @member {number}\n         * @readOnly\n         */\n        get: function () {\n            return this._width;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Refreshes Rope indices and uvs\n     * @private\n     */\n    RopeGeometry.prototype.build = function () {\n        var points = this.points;\n        if (!points)\n            { return; }\n        var vertexBuffer = this.getBuffer('aVertexPosition');\n        var uvBuffer = this.getBuffer('aTextureCoord');\n        var indexBuffer = this.getIndex();\n        // if too little points, or texture hasn't got UVs set yet just move on.\n        if (points.length < 1) {\n            return;\n        }\n        // if the number of points has changed we will need to recreate the arraybuffers\n        if (vertexBuffer.data.length / 4 !== points.length) {\n            vertexBuffer.data = new Float32Array(points.length * 4);\n            uvBuffer.data = new Float32Array(points.length * 4);\n            indexBuffer.data = new Uint16Array((points.length - 1) * 6);\n        }\n        var uvs = uvBuffer.data;\n        var indices = indexBuffer.data;\n        uvs[0] = 0;\n        uvs[1] = 0;\n        uvs[2] = 0;\n        uvs[3] = 1;\n        var amount = 0;\n        var prev = points[0];\n        var textureWidth = this._width * this.textureScale;\n        var total = points.length; // - 1;\n        for (var i = 0; i < total; i++) {\n            // time to do some smart drawing!\n            var index = i * 4;\n            if (this.textureScale > 0) {\n                // calculate pixel distance from previous point\n                var dx = prev.x - points[i].x;\n                var dy = prev.y - points[i].y;\n                var distance = Math.sqrt((dx * dx) + (dy * dy));\n                prev = points[i];\n                amount += distance / textureWidth;\n            }\n            else {\n                // stretch texture\n                amount = i / (total - 1);\n            }\n            uvs[index] = amount;\n            uvs[index + 1] = 0;\n            uvs[index + 2] = amount;\n            uvs[index + 3] = 1;\n        }\n        var indexCount = 0;\n        for (var i = 0; i < total - 1; i++) {\n            var index = i * 2;\n            indices[indexCount++] = index;\n            indices[indexCount++] = index + 1;\n            indices[indexCount++] = index + 2;\n            indices[indexCount++] = index + 2;\n            indices[indexCount++] = index + 1;\n            indices[indexCount++] = index + 3;\n        }\n        // ensure that the changes are uploaded\n        uvBuffer.update();\n        indexBuffer.update();\n        this.updateVertices();\n    };\n    /**\n     * refreshes vertices of Rope mesh\n     */\n    RopeGeometry.prototype.updateVertices = function () {\n        var points = this.points;\n        if (points.length < 1) {\n            return;\n        }\n        var lastPoint = points[0];\n        var nextPoint;\n        var perpX = 0;\n        var perpY = 0;\n        var vertices = this.buffers[0].data;\n        var total = points.length;\n        for (var i = 0; i < total; i++) {\n            var point = points[i];\n            var index = i * 4;\n            if (i < points.length - 1) {\n                nextPoint = points[i + 1];\n            }\n            else {\n                nextPoint = point;\n            }\n            perpY = -(nextPoint.x - lastPoint.x);\n            perpX = nextPoint.y - lastPoint.y;\n            var perpLength = Math.sqrt((perpX * perpX) + (perpY * perpY));\n            var num = this.textureScale > 0 ? this.textureScale * this._width / 2 : this._width / 2;\n            perpX /= perpLength;\n            perpY /= perpLength;\n            perpX *= num;\n            perpY *= num;\n            vertices[index] = point.x + perpX;\n            vertices[index + 1] = point.y + perpY;\n            vertices[index + 2] = point.x - perpX;\n            vertices[index + 3] = point.y - perpY;\n            lastPoint = point;\n        }\n        this.buffers[0].update();\n    };\n    RopeGeometry.prototype.update = function () {\n        if (this.textureScale > 0) {\n            this.build(); // we need to update UVs\n        }\n        else {\n            this.updateVertices();\n        }\n    };\n    return RopeGeometry;\n}(mesh.MeshGeometry));\n\n/**\n * The rope allows you to draw a texture across several points and then manipulate these points\n *\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new PIXI.Point(i * 50, 0));\n * };\n * let rope = new PIXI.SimpleRope(PIXI.Texture.from(\"snake.png\"), points);\n *  ```\n *\n * @class\n * @extends PIXI.Mesh\n * @memberof PIXI\n *\n */\nvar SimpleRope = /** @class */ (function (_super) {\n    __extends(SimpleRope, _super);\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the rope.\n     * @param {PIXI.Point[]} points - An array of {@link PIXI.Point} objects to construct this rope.\n     * @param {number} [textureScale=0] - Optional. Positive values scale rope texture\n     * keeping its aspect ratio. You can reduce alpha channel artifacts by providing a larger texture\n     * and downsampling here. If set to zero, texture will be stretched instead.\n     */\n    function SimpleRope(texture, points, textureScale) {\n        if (textureScale === void 0) { textureScale = 0; }\n        var _this = this;\n        var ropeGeometry = new RopeGeometry(texture.height, points, textureScale);\n        var meshMaterial = new mesh.MeshMaterial(texture);\n        if (textureScale > 0) {\n            // attempt to set UV wrapping, will fail on non-power of two textures\n            texture.baseTexture.wrapMode = constants.WRAP_MODES.REPEAT;\n        }\n        _this = _super.call(this, ropeGeometry, meshMaterial) || this;\n        /**\n         * re-calculate vertices by rope points each frame\n         *\n         * @member {boolean}\n         */\n        _this.autoUpdate = true;\n        return _this;\n    }\n    SimpleRope.prototype._render = function (renderer) {\n        var geometry = this.geometry;\n        if (this.autoUpdate || geometry._width !== this.shader.texture.height) {\n            geometry._width = this.shader.texture.height;\n            geometry.update();\n        }\n        _super.prototype._render.call(this, renderer);\n    };\n    return SimpleRope;\n}(mesh.Mesh));\n\n/**\n * The SimplePlane allows you to draw a texture across several points and then manipulate these points\n *\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new PIXI.Point(i * 50, 0));\n * };\n * let SimplePlane = new PIXI.SimplePlane(PIXI.Texture.from(\"snake.png\"), points);\n *  ```\n *\n * @class\n * @extends PIXI.Mesh\n * @memberof PIXI\n *\n */\nvar SimplePlane = /** @class */ (function (_super) {\n    __extends(SimplePlane, _super);\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the SimplePlane.\n     * @param {number} verticesX - The number of vertices in the x-axis\n     * @param {number} verticesY - The number of vertices in the y-axis\n     */\n    function SimplePlane(texture, verticesX, verticesY) {\n        var _this = this;\n        var planeGeometry = new PlaneGeometry(texture.width, texture.height, verticesX, verticesY);\n        var meshMaterial = new mesh.MeshMaterial(core.Texture.WHITE);\n        _this = _super.call(this, planeGeometry, meshMaterial) || this;\n        // lets call the setter to ensure all necessary updates are performed\n        _this.texture = texture;\n        return _this;\n    }\n    /**\n     * Method used for overrides, to do something in case texture frame was changed.\n     * Meshes based on plane can override it and change more details based on texture.\n     */\n    SimplePlane.prototype.textureUpdated = function () {\n        this._textureID = this.shader.texture._updateID;\n        var geometry = this.geometry;\n        geometry.width = this.shader.texture.width;\n        geometry.height = this.shader.texture.height;\n        geometry.build();\n    };\n    Object.defineProperty(SimplePlane.prototype, \"texture\", {\n        get: function () {\n            return this.shader.texture;\n        },\n        set: function (value) {\n            // Track texture same way sprite does.\n            // For generated meshes like NineSlicePlane it can change the geometry.\n            // Unfortunately, this method might not work if you directly change texture in material.\n            if (this.shader.texture === value) {\n                return;\n            }\n            this.shader.texture = value;\n            this._textureID = -1;\n            if (value.baseTexture.valid) {\n                this.textureUpdated();\n            }\n            else {\n                value.once('update', this.textureUpdated, this);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SimplePlane.prototype._render = function (renderer) {\n        if (this._textureID !== this.shader.texture._updateID) {\n            this.textureUpdated();\n        }\n        _super.prototype._render.call(this, renderer);\n    };\n    SimplePlane.prototype.destroy = function (options) {\n        this.shader.texture.off('update', this.textureUpdated, this);\n        _super.prototype.destroy.call(this, options);\n    };\n    return SimplePlane;\n}(mesh.Mesh));\n\n/**\n * The Simple Mesh class mimics Mesh in PixiJS v4, providing easy-to-use constructor arguments.\n * For more robust customization, use {@link PIXI.Mesh}.\n *\n * @class\n * @extends PIXI.Mesh\n * @memberof PIXI\n */\nvar SimpleMesh = /** @class */ (function (_super) {\n    __extends(SimpleMesh, _super);\n    /**\n     * @param {PIXI.Texture} [texture=Texture.EMPTY] - The texture to use\n     * @param {Float32Array} [vertices] - if you want to specify the vertices\n     * @param {Float32Array} [uvs] - if you want to specify the uvs\n     * @param {Uint16Array} [indices] - if you want to specify the indices\n     * @param {number} [drawMode] - the drawMode, can be any of the Mesh.DRAW_MODES consts\n     */\n    function SimpleMesh(texture, vertices, uvs, indices, drawMode) {\n        if (texture === void 0) { texture = core.Texture.EMPTY; }\n        var _this = this;\n        var geometry = new mesh.MeshGeometry(vertices, uvs, indices);\n        geometry.getBuffer('aVertexPosition').static = false;\n        var meshMaterial = new mesh.MeshMaterial(texture);\n        _this = _super.call(this, geometry, meshMaterial, null, drawMode) || this;\n        /**\n         * upload vertices buffer each frame\n         * @member {boolean}\n         */\n        _this.autoUpdate = true;\n        return _this;\n    }\n    Object.defineProperty(SimpleMesh.prototype, \"vertices\", {\n        /**\n         * Collection of vertices data.\n         * @member {Float32Array}\n         */\n        get: function () {\n            return this.geometry.getBuffer('aVertexPosition').data;\n        },\n        set: function (value) {\n            this.geometry.getBuffer('aVertexPosition').data = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SimpleMesh.prototype._render = function (renderer) {\n        if (this.autoUpdate) {\n            this.geometry.getBuffer('aVertexPosition').update();\n        }\n        _super.prototype._render.call(this, renderer);\n    };\n    return SimpleMesh;\n}(mesh.Mesh));\n\nvar DEFAULT_BORDER_SIZE = 10;\n/**\n * The NineSlicePlane allows you to stretch a texture using 9-slice scaling. The corners will remain unscaled (useful\n * for buttons with rounded corners for example) and the other areas will be scaled horizontally and or vertically\n *\n *```js\n * let Plane9 = new PIXI.NineSlicePlane(PIXI.Texture.from('BoxWithRoundedCorners.png'), 15, 15, 15, 15);\n *  ```\n * <pre>\n *      A                          B\n *    +---+----------------------+---+\n *  C | 1 |          2           | 3 |\n *    +---+----------------------+---+\n *    |   |                      |   |\n *    | 4 |          5           | 6 |\n *    |   |                      |   |\n *    +---+----------------------+---+\n *  D | 7 |          8           | 9 |\n *    +---+----------------------+---+\n\n *  When changing this objects width and/or height:\n *     areas 1 3 7 and 9 will remain unscaled.\n *     areas 2 and 8 will be stretched horizontally\n *     areas 4 and 6 will be stretched vertically\n *     area 5 will be stretched both horizontally and vertically\n * </pre>\n *\n * @class\n * @extends PIXI.SimplePlane\n * @memberof PIXI\n *\n */\nvar NineSlicePlane = /** @class */ (function (_super) {\n    __extends(NineSlicePlane, _super);\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the NineSlicePlane.\n     * @param {number} [leftWidth=10] - size of the left vertical bar (A)\n     * @param {number} [topHeight=10] - size of the top horizontal bar (C)\n     * @param {number} [rightWidth=10] - size of the right vertical bar (B)\n     * @param {number} [bottomHeight=10] - size of the bottom horizontal bar (D)\n     */\n    function NineSlicePlane(texture, leftWidth, topHeight, rightWidth, bottomHeight) {\n        if (leftWidth === void 0) { leftWidth = DEFAULT_BORDER_SIZE; }\n        if (topHeight === void 0) { topHeight = DEFAULT_BORDER_SIZE; }\n        if (rightWidth === void 0) { rightWidth = DEFAULT_BORDER_SIZE; }\n        if (bottomHeight === void 0) { bottomHeight = DEFAULT_BORDER_SIZE; }\n        var _this = _super.call(this, core.Texture.WHITE, 4, 4) || this;\n        _this._origWidth = texture.orig.width;\n        _this._origHeight = texture.orig.height;\n        /**\n         * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @override\n         */\n        _this._width = _this._origWidth;\n        /**\n         * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @override\n         */\n        _this._height = _this._origHeight;\n        /**\n         * The width of the left column (a)\n         *\n         * @member {number}\n         * @private\n         */\n        _this._leftWidth = leftWidth;\n        /**\n         * The width of the right column (b)\n         *\n         * @member {number}\n         * @private\n         */\n        _this._rightWidth = rightWidth;\n        /**\n         * The height of the top row (c)\n         *\n         * @member {number}\n         * @private\n         */\n        _this._topHeight = topHeight;\n        /**\n         * The height of the bottom row (d)\n         *\n         * @member {number}\n         * @private\n         */\n        _this._bottomHeight = bottomHeight;\n        // lets call the setter to ensure all necessary updates are performed\n        _this.texture = texture;\n        return _this;\n    }\n    NineSlicePlane.prototype.textureUpdated = function () {\n        this._textureID = this.shader.texture._updateID;\n        this._refresh();\n    };\n    Object.defineProperty(NineSlicePlane.prototype, \"vertices\", {\n        get: function () {\n            return this.geometry.getBuffer('aVertexPosition').data;\n        },\n        set: function (value) {\n            this.geometry.getBuffer('aVertexPosition').data = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Updates the horizontal vertices.\n     *\n     */\n    NineSlicePlane.prototype.updateHorizontalVertices = function () {\n        var vertices = this.vertices;\n        var scale = this._getMinScale();\n        vertices[9] = vertices[11] = vertices[13] = vertices[15] = this._topHeight * scale;\n        vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - (this._bottomHeight * scale);\n        vertices[25] = vertices[27] = vertices[29] = vertices[31] = this._height;\n    };\n    /**\n     * Updates the vertical vertices.\n     *\n     */\n    NineSlicePlane.prototype.updateVerticalVertices = function () {\n        var vertices = this.vertices;\n        var scale = this._getMinScale();\n        vertices[2] = vertices[10] = vertices[18] = vertices[26] = this._leftWidth * scale;\n        vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - (this._rightWidth * scale);\n        vertices[6] = vertices[14] = vertices[22] = vertices[30] = this._width;\n    };\n    /**\n     * Returns the smaller of a set of vertical and horizontal scale of nine slice corners.\n     *\n     * @return {number} Smaller number of vertical and horizontal scale.\n     * @private\n     */\n    NineSlicePlane.prototype._getMinScale = function () {\n        var w = this._leftWidth + this._rightWidth;\n        var scaleW = this._width > w ? 1.0 : this._width / w;\n        var h = this._topHeight + this._bottomHeight;\n        var scaleH = this._height > h ? 1.0 : this._height / h;\n        var scale = Math.min(scaleW, scaleH);\n        return scale;\n    };\n    Object.defineProperty(NineSlicePlane.prototype, \"width\", {\n        /**\n         * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            this._refresh();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NineSlicePlane.prototype, \"height\", {\n        /**\n         * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._refresh();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NineSlicePlane.prototype, \"leftWidth\", {\n        /**\n         * The width of the left column\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._leftWidth;\n        },\n        set: function (value) {\n            this._leftWidth = value;\n            this._refresh();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NineSlicePlane.prototype, \"rightWidth\", {\n        /**\n         * The width of the right column\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._rightWidth;\n        },\n        set: function (value) {\n            this._rightWidth = value;\n            this._refresh();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NineSlicePlane.prototype, \"topHeight\", {\n        /**\n         * The height of the top row\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._topHeight;\n        },\n        set: function (value) {\n            this._topHeight = value;\n            this._refresh();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NineSlicePlane.prototype, \"bottomHeight\", {\n        /**\n         * The height of the bottom row\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._bottomHeight;\n        },\n        set: function (value) {\n            this._bottomHeight = value;\n            this._refresh();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Refreshes NineSlicePlane coords. All of them.\n     */\n    NineSlicePlane.prototype._refresh = function () {\n        var texture = this.texture;\n        var uvs = this.geometry.buffers[1].data;\n        this._origWidth = texture.orig.width;\n        this._origHeight = texture.orig.height;\n        var _uvw = 1.0 / this._origWidth;\n        var _uvh = 1.0 / this._origHeight;\n        uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n        uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n        uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n        uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n        uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n        uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - (_uvw * this._rightWidth);\n        uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n        uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - (_uvh * this._bottomHeight);\n        this.updateHorizontalVertices();\n        this.updateVerticalVertices();\n        this.geometry.buffers[0].update();\n        this.geometry.buffers[1].update();\n    };\n    return NineSlicePlane;\n}(SimplePlane));\n\nexports.NineSlicePlane = NineSlicePlane;\nexports.PlaneGeometry = PlaneGeometry;\nexports.RopeGeometry = RopeGeometry;\nexports.SimpleMesh = SimpleMesh;\nexports.SimplePlane = SimplePlane;\nexports.SimpleRope = SimpleRope;\n//# sourceMappingURL=mesh-extras.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","defineProperty","value","mesh","constants","core","setPrototypeOf","__proto__","Array","p","hasOwnProperty","PlaneGeometry","_super","width","height","segWidth","segHeight","_this","call","build","PlaneGeometry.prototype.build","total","verts","uvs","indices","segmentsX","segmentsY","sizeX","sizeY","i","x","y","push","totalSub","xpos","ypos","value2","value3","buffers","data","Float32Array","indexBuffer","Uint16Array","update","MeshGeometry","RopeGeometry","points","textureScale","length","_width","get","enumerable","configurable","RopeGeometry.prototype.build","vertexBuffer","getBuffer","uvBuffer","getIndex","amount","prev","textureWidth","index","dx","dy","distance","Math","sqrt","indexCount","updateVertices","RopeGeometry.prototype.updateVertices","lastPoint","nextPoint","perpY","vertices","point","perpX","perpLength","num","RopeGeometry.prototype.update","SimpleRope","texture","ropeGeometry","meshMaterial","MeshMaterial","baseTexture","wrapMode","WRAP_MODES","REPEAT","autoUpdate","_render","SimpleRope.prototype._render","renderer","geometry","shader","Mesh","SimplePlane","verticesX","verticesY","planeGeometry","Texture","WHITE","textureUpdated","SimplePlane.prototype.textureUpdated","_textureID","_updateID","set","valid","once","SimplePlane.prototype._render","destroy","SimplePlane.prototype.destroy","options","off","SimpleMesh","drawMode","EMPTY","static","SimpleMesh.prototype._render","NineSlicePlane","leftWidth","topHeight","rightWidth","bottomHeight","DEFAULT_BORDER_SIZE","_origWidth","orig","_origHeight","_height","_leftWidth","_rightWidth","_topHeight","_bottomHeight","NineSlicePlane.prototype.textureUpdated","_refresh","updateHorizontalVertices","NineSlicePlane.prototype.updateHorizontalVertices","scale","_getMinScale","updateVerticalVertices","NineSlicePlane.prototype.updateVerticalVertices","NineSlicePlane.prototype._getMinScale","w","h","min","scaleW","scaleH","NineSlicePlane.prototype._refresh","_uvw","_uvh"]
}
