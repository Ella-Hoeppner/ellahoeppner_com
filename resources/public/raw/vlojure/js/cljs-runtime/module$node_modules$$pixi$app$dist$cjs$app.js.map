{
"version":3,
"file":"module$node_modules$$pixi$app$dist$cjs$app.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@pixi/app/dist/cjs/app.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$app$dist$cjs$app\"] = function(global,require,module,exports) {\n/*!\n * @pixi/app - v6.1.1\n * Compiled Fri, 06 Aug 2021 03:30:25 UTC\n *\n * @pixi/app is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar display = require('@pixi/display');\nvar core = require('@pixi/core');\n\n/**\n * Convenience class to create a new PIXI application.\n *\n * This class automatically creates the renderer, ticker and root container.\n *\n * @example\n * // Create the application\n * const app = new PIXI.Application();\n *\n * // Add the view to the DOM\n * document.body.appendChild(app.view);\n *\n * // ex, add display objects\n * app.stage.addChild(PIXI.Sprite.from('something.png'));\n *\n * @class\n * @memberof PIXI\n */\nvar Application = /** @class */ (function () {\n    /**\n     * @param {object} [options] - The optional renderer parameters.\n     * @param {boolean} [options.autoStart=true] - Automatically starts the rendering after the construction.\n     *     **Note**: Setting this parameter to false does NOT stop the shared ticker even if you set\n     *     options.sharedTicker to true in case that it is already started. Stop it by your own.\n     * @param {number} [options.width=800] - The width of the renderers view.\n     * @param {number} [options.height=600] - The height of the renderers view.\n     * @param {HTMLCanvasElement} [options.view] - The canvas to use as a view, optional.\n     * @param {boolean} [options.useContextAlpha=true] - Pass-through value for canvas' context `alpha` property.\n     *   If you want to set transparency, please use `backgroundAlpha`. This option is for cases where the\n     *   canvas needs to be opaque, possibly for performance reasons on some older devices.\n     * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n     *   resolutions other than 1.\n     * @param {boolean} [options.antialias=false] - Sets antialias\n     * @param {boolean} [options.preserveDrawingBuffer=false] - Enables drawing buffer preservation, enable this if you\n     *  need to call toDataUrl on the WebGL context.\n     * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution / device pixel ratio of the renderer.\n     * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present, this\n     *   option only is available when using **pixi.js-legacy** or **@pixi/canvas-renderer** modules, otherwise\n     *   it is ignored.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {number} [options.backgroundAlpha=1] - Value from 0 (fully transparent) to 1 (fully opaque).\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n     *   not before the new render pass.\n     * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n     *  for devices with dual graphics card. **(WebGL only)**.\n     * @param {boolean} [options.sharedTicker=false] - `true` to use PIXI.Ticker.shared, `false` to create new ticker.\n     *  If set to false, you cannot register a handler to occur before anything that runs on the shared ticker.\n     *  The system ticker will always run before both the shared ticker and the app ticker.\n     * @param {boolean} [options.sharedLoader=false] - `true` to use PIXI.Loader.shared, `false` to create new Loader.\n     * @param {Window|HTMLElement} [options.resizeTo] - Element to automatically resize stage to.\n     */\n    function Application(options) {\n        var _this = this;\n        /**\n         * The root display container that's rendered.\n         * @member {PIXI.Container}\n         */\n        this.stage = new display.Container();\n        // The default options\n        options = Object.assign({\n            forceCanvas: false,\n        }, options);\n        this.renderer = core.autoDetectRenderer(options);\n        // install plugins here\n        Application._plugins.forEach(function (plugin) {\n            plugin.init.call(_this, options);\n        });\n    }\n    /**\n     * Register a middleware plugin for the application\n     * @static\n     * @param {PIXI.IApplicationPlugin} plugin - Plugin being installed\n     */\n    Application.registerPlugin = function (plugin) {\n        Application._plugins.push(plugin);\n    };\n    /**\n     * Render the current stage.\n     */\n    Application.prototype.render = function () {\n        this.renderer.render(this.stage);\n    };\n    Object.defineProperty(Application.prototype, \"view\", {\n        /**\n         * Reference to the renderer's canvas element.\n         * @member {HTMLCanvasElement}\n         * @readonly\n         */\n        get: function () {\n            return this.renderer.view;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Application.prototype, \"screen\", {\n        /**\n         * Reference to the renderer's screen rectangle. Its safe to use as `filterArea` or `hitArea` for the whole screen.\n         * @member {PIXI.Rectangle}\n         * @readonly\n         */\n        get: function () {\n            return this.renderer.screen;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Destroy and don't use after this.\n     * @param {Boolean} [removeView=false] - Automatically remove canvas from DOM.\n     * @param {object|boolean} [stageOptions] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [stageOptions.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'stageOptions' will be passed on to those calls.\n     * @param {boolean} [stageOptions.texture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the texture of the child sprite\n     * @param {boolean} [stageOptions.baseTexture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the base texture of the child sprite\n     */\n    Application.prototype.destroy = function (removeView, stageOptions) {\n        var _this = this;\n        // Destroy plugins in the opposite order\n        // which they were constructed\n        var plugins = Application._plugins.slice(0);\n        plugins.reverse();\n        plugins.forEach(function (plugin) {\n            plugin.destroy.call(_this);\n        });\n        this.stage.destroy(stageOptions);\n        this.stage = null;\n        this.renderer.destroy(removeView);\n        this.renderer = null;\n    };\n    /** Collection of installed plugins. */\n    Application._plugins = [];\n    return Application;\n}());\n\n/**\n * Middleware for for Application's resize functionality\n * @private\n * @class\n */\nvar ResizePlugin = /** @class */ (function () {\n    function ResizePlugin() {\n    }\n    /**\n     * Initialize the plugin with scope of application instance\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */\n    ResizePlugin.init = function (options) {\n        var _this = this;\n        Object.defineProperty(this, 'resizeTo', \n        /**\n         * The HTML element or window to automatically resize the\n         * renderer's view element to match width and height.\n         * @member {Window|HTMLElement}\n         * @name resizeTo\n         * @memberof PIXI.Application#\n         */\n        {\n            set: function (dom) {\n                self.removeEventListener('resize', this.queueResize);\n                this._resizeTo = dom;\n                if (dom) {\n                    self.addEventListener('resize', this.queueResize);\n                    this.resize();\n                }\n            },\n            get: function () {\n                return this._resizeTo;\n            },\n        });\n        /**\n         * Resize is throttled, so it's safe to call this multiple times per frame and it'll\n         * only be called once.\n         *\n         * @memberof PIXI.Application#\n         * @method queueResize\n         * @private\n         */\n        this.queueResize = function () {\n            if (!_this._resizeTo) {\n                return;\n            }\n            _this.cancelResize();\n            // // Throttle resize events per raf\n            _this._resizeId = requestAnimationFrame(function () { return _this.resize(); });\n        };\n        /**\n         * Cancel the resize queue.\n         *\n         * @memberof PIXI.Application#\n         * @method cancelResize\n         * @private\n         */\n        this.cancelResize = function () {\n            if (_this._resizeId) {\n                cancelAnimationFrame(_this._resizeId);\n                _this._resizeId = null;\n            }\n        };\n        /**\n         * Execute an immediate resize on the renderer, this is not\n         * throttled and can be expensive to call many times in a row.\n         * Will resize only if `resizeTo` property is set.\n         *\n         * @memberof PIXI.Application#\n         * @method resize\n         */\n        this.resize = function () {\n            if (!_this._resizeTo) {\n                return;\n            }\n            // clear queue resize\n            _this.cancelResize();\n            var width;\n            var height;\n            // Resize to the window\n            if (_this._resizeTo === self) {\n                width = self.innerWidth;\n                height = self.innerHeight;\n            }\n            // Resize to other HTML entities\n            else {\n                var _a = _this._resizeTo, clientWidth = _a.clientWidth, clientHeight = _a.clientHeight;\n                width = clientWidth;\n                height = clientHeight;\n            }\n            _this.renderer.resize(width, height);\n        };\n        // On resize\n        this._resizeId = null;\n        this._resizeTo = null;\n        this.resizeTo = options.resizeTo || null;\n    };\n    /**\n     * Clean up the ticker, scoped to application\n     *\n     * @static\n     * @private\n     */\n    ResizePlugin.destroy = function () {\n        self.removeEventListener('resize', this.queueResize);\n        this.cancelResize();\n        this.cancelResize = null;\n        this.queueResize = null;\n        this.resizeTo = null;\n        this.resize = null;\n    };\n    return ResizePlugin;\n}());\n\nApplication.registerPlugin(ResizePlugin);\n\nexports.Application = Application;\n//# sourceMappingURL=app.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","display","core","Application","options","_this","stage","Container","assign","forceCanvas","renderer","autoDetectRenderer","_plugins","forEach","plugin","init","call","registerPlugin","Application.registerPlugin","push","prototype","render","Application.prototype.render","get","view","enumerable","configurable","screen","destroy","Application.prototype.destroy","removeView","stageOptions","plugins","slice","reverse","ResizePlugin","ResizePlugin.init","set","dom","self","removeEventListener","queueResize","_resizeTo","addEventListener","resize","this.queueResize","cancelResize","_resizeId","requestAnimationFrame","this.cancelResize","cancelAnimationFrame","this.resize","width","innerWidth","height","innerHeight","_a","clientHeight","clientWidth","resizeTo","ResizePlugin.destroy"]
}
