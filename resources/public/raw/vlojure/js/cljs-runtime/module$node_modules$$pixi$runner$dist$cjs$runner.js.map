{
"version":3,
"file":"module$node_modules$$pixi$runner$dist$cjs$runner.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,gDAAf,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAU7GC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CA+CIC,OAAAA,CAAwB,QAAS,EAAG,CAIpCA,QAASA,OAAM,CAACC,IAAD,CAAO,CAClB,IAAA,CAAKC,KAAL,CAAa,EACb,KAAA,CAAKC,KAAL,CAAaF,IACb,KAAA,CAAKG,WAAL,CAAmB,CAHD,CAUtBJ,MAAA,CAAOK,SAAP,CAAiBC,IAAjB,CAAwBC,QAAS,CAACC,EAAD,CAAKC,EAAL,CAASC,EAAT,CAAaC,EAAb,CAAiBC,EAAjB,CAAqBC,EAArB,CAAyBC,EAAzB,CAA6BC,EAA7B,CAAiC,CAC9D,GAAuB,CAAvB,CAAIC,SAAJ,CAAcC,MAAd,CACI,KAAUC,MAAJ,CAAU,uBAAV,CAAN,CAF0D,IAI/CjB,KAANkB,IAAMlB,CAAUA,IAJqC,CAI/BC,MAAtBiB,IAAsBjB,CAAWA,KAC1C,KAAA,CAAKE,WAAL,EACA,KAN8D,IAMrDgB,EAAI,CANiD,CAM9CC,IAAMnB,KAANmB,CAAYJ,MAA5B,CAAoCG,CAApC,CAAwCC,GAAxC,CAA6CD,CAAA,EAA7C,CACIlB,KAAA,CAAMkB,CAAN,CAAA,CAASnB,IAAT,CAAA,CAAeO,EAAf,CAAmBC,EAAnB,CAAuBC,EAAvB,CAA2BC,EAA3B,CAA+BC,EAA/B,CAAmCC,EAAnC,CAAuCC,EAAvC,CAA2CC,EAA3C,CAEAb,MAAJ;AAAc,IAAd,CAAmBA,KAAnB,EACI,IAAA,CAAKE,WAAL,EAEJ,OAAO,KAZuD,CAclEJ,OAAA,CAAOK,SAAP,CAAiBiB,qBAAjB,CAAyCC,QAAS,EAAG,CAC1B,CAAvB,CAAI,IAAJ,CAASnB,WAAT,EAAgD,CAAhD,CAA4B,IAA5B,CAAiCF,KAAjC,CAAuCe,MAAvC,GACI,IACA,CADKb,WACL,CADmB,CACnB,CAAA,IAAA,CAAKF,KAAL,CAAa,IAAA,CAAKA,KAAL,CAAWsB,KAAX,CAAiB,CAAjB,CAFjB,CADiD,CA0BrDxB,OAAA,CAAOK,SAAP,CAAiBoB,GAAjB,CAAuBC,QAAS,CAACC,IAAD,CAAO,CAC/BA,IAAA,CAAK,IAAL,CAAUxB,KAAV,CAAJ,GACI,IAAA,CAAKmB,qBAAL,EAEA,CADA,IAAA,CAAKM,MAAL,CAAYD,IAAZ,CACA,CAAA,IAAA,CAAKzB,KAAL,CAAW2B,IAAX,CAAgBF,IAAhB,CAHJ,CAKA,OAAO,KAN4B,CAavC3B,OAAA,CAAOK,SAAP,CAAiBuB,MAAjB,CAA0BE,QAAS,CAACH,IAAD,CAAO,CAClCI,IAAAA,CAAQ,IAAA,CAAK7B,KAAL,CAAW8B,OAAX,CAAmBL,IAAnB,CACE,GAAd,GAAII,IAAJ,GACI,IAAA,CAAKT,qBAAL,EACA,CAAA,IAAA,CAAKpB,KAAL,CAAW+B,MAAX,CAAkBF,IAAlB,CAAyB,CAAzB,CAFJ,CAIA,OAAO,KAN+B,CAY1C/B,OAAA,CAAOK,SAAP,CAAiB6B,QAAjB;AAA4BC,QAAS,CAACR,IAAD,CAAO,CACxC,MAAoC,EAApC,GAAO,IAAA,CAAKzB,KAAL,CAAW8B,OAAX,CAAmBL,IAAnB,CADiC,CAO5C3B,OAAA,CAAOK,SAAP,CAAiB+B,SAAjB,CAA6BC,QAAS,EAAG,CACrC,IAAA,CAAKf,qBAAL,EACA,KAAA,CAAKpB,KAAL,CAAWe,MAAX,CAAoB,CACpB,OAAO,KAH8B,CAQzCjB,OAAA,CAAOK,SAAP,CAAiBiC,OAAjB,CAA2BC,QAAS,EAAG,CACnC,IAAA,CAAKH,SAAL,EAEA,KAAA,CAAKjC,KAAL,CADA,IACA,CADKD,KACL,CADa,IAFsB,CAKvCL,OAAA,CAAOC,cAAP,CAAsBE,MAAtB,CAA6BK,SAA7B,CAAwC,OAAxC,CAAiD,CAO7CmC,IAAKA,QAAS,EAAG,CACb,MAA6B,EAA7B,GAAO,IAAP,CAAYtC,KAAZ,CAAkBe,MADL,CAP4B,CAU7CwB,WAAY,CAAA,CAViC,CAW7CC,aAAc,CAAA,CAX+B,CAAjD,CAaA7C,OAAA,CAAOC,cAAP,CAAsBE,MAAtB,CAA6BK,SAA7B,CAAwC,MAAxC,CAAgD,CAO5CmC,IAAKA,QAAS,EAAG,CACb,MAAO,KAAP,CAAYrC,KADC,CAP2B,CAU5CsC,WAAY,CAAA,CAVgC,CAW5CC,aAAc,CAAA,CAX8B,CAAhD,CAaA,OAAO1C,OA7H6B,CAAZ,EA+H5BH,OAAA,CAAO8C,gBAAP,CAAwB3C,MAAxB,CAA+BK,SAA/B;AAA0C,CAOtCuC,SAAU,CAAE7C,MAAOC,MAAPD,CAAcM,SAAdN,CAAwBO,IAA1B,CAP4B,CActCuC,IAAK,CAAE9C,MAAOC,MAAPD,CAAcM,SAAdN,CAAwBO,IAA1B,CAdiC,CAA1C,CAiBAV,QAAA,CAAQI,MAAR,CAAiBA,MAzM4F;",
"sources":["node_modules/@pixi/runner/dist/cjs/runner.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$runner$dist$cjs$runner\"] = function(global,require,module,exports) {\n/*!\n * @pixi/runner - v6.1.1\n * Compiled Fri, 06 Aug 2021 03:30:25 UTC\n *\n * @pixi/runner is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * A Runner is a highly performant and simple alternative to signals. Best used in situations\n * where events are dispatched to many objects at high frequency (say every frame!)\n *\n *\n * like a signal..\n * ```\n * import { Runner } from '@pixi/runner';\n *\n * const myObject = {\n *     loaded: new Runner('loaded')\n * }\n *\n * const listener = {\n *     loaded: function(){\n *         // thin\n *     }\n * }\n *\n * myObject.loaded.add(listener);\n *\n * myObject.loaded.emit();\n * ```\n *\n * Or for handling calling the same function on many items\n * ```\n * import { Runner } from '@pixi/runner';\n *\n * const myGame = {\n *     update: new Runner('update')\n * }\n *\n * const gameObject = {\n *     update: function(time){\n *         // update my gamey state\n *     }\n * }\n *\n * myGame.update.add(gameObject);\n *\n * myGame.update.emit(time);\n * ```\n * @class\n * @memberof PIXI\n */\nvar Runner = /** @class */ (function () {\n    /**\n     *  @param {string} name - the function name that will be executed on the listeners added to this Runner.\n     */\n    function Runner(name) {\n        this.items = [];\n        this._name = name;\n        this._aliasCount = 0;\n    }\n    /**\n     * Dispatch/Broadcast Runner to all listeners added to the queue.\n     * @param {...any} params - optional parameters to pass to each listener\n     * @return {PIXI.Runner}\n     */\n    Runner.prototype.emit = function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        if (arguments.length > 8) {\n            throw new Error('max arguments reached');\n        }\n        var _a = this, name = _a.name, items = _a.items;\n        this._aliasCount++;\n        for (var i = 0, len = items.length; i < len; i++) {\n            items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n        }\n        if (items === this.items) {\n            this._aliasCount--;\n        }\n        return this;\n    };\n    Runner.prototype.ensureNonAliasedItems = function () {\n        if (this._aliasCount > 0 && this.items.length > 1) {\n            this._aliasCount = 0;\n            this.items = this.items.slice(0);\n        }\n    };\n    /**\n     * Add a listener to the Runner\n     *\n     * Runners do not need to have scope or functions passed to them.\n     * All that is required is to pass the listening object and ensure that it has contains a function that has the same name\n     * as the name provided to the Runner when it was created.\n     *\n     * Eg A listener passed to this Runner will require a 'complete' function.\n     *\n     * ```\n     * import { Runner } from '@pixi/runner';\n     *\n     * const complete = new Runner('complete');\n     * ```\n     *\n     * The scope used will be the object itself.\n     *\n     * @param {any} item - The object that will be listening.\n     * @return {PIXI.Runner}\n     */\n    Runner.prototype.add = function (item) {\n        if (item[this._name]) {\n            this.ensureNonAliasedItems();\n            this.remove(item);\n            this.items.push(item);\n        }\n        return this;\n    };\n    /**\n     * Remove a single listener from the dispatch queue.\n     * @param {any} item - The listener that you would like to remove.\n     * @return {PIXI.Runner}\n     */\n    Runner.prototype.remove = function (item) {\n        var index = this.items.indexOf(item);\n        if (index !== -1) {\n            this.ensureNonAliasedItems();\n            this.items.splice(index, 1);\n        }\n        return this;\n    };\n    /**\n     * Check to see if the listener is already in the Runner\n     * @param {any} item - The listener that you would like to check.\n     */\n    Runner.prototype.contains = function (item) {\n        return this.items.indexOf(item) !== -1;\n    };\n    /**\n     * Remove all listeners from the Runner\n     * @return {PIXI.Runner}\n     */\n    Runner.prototype.removeAll = function () {\n        this.ensureNonAliasedItems();\n        this.items.length = 0;\n        return this;\n    };\n    /**\n     * Remove all references, don't use after this.\n     */\n    Runner.prototype.destroy = function () {\n        this.removeAll();\n        this.items = null;\n        this._name = null;\n    };\n    Object.defineProperty(Runner.prototype, \"empty\", {\n        /**\n         * `true` if there are no this Runner contains no listeners\n         *\n         * @member {boolean}\n         * @readonly\n         */\n        get: function () {\n            return this.items.length === 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Runner.prototype, \"name\", {\n        /**\n         * The name of the runner.\n         *\n         * @member {string}\n         * @readonly\n         */\n        get: function () {\n            return this._name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Runner;\n}());\nObject.defineProperties(Runner.prototype, {\n    /**\n     * Alias for `emit`\n     * @memberof PIXI.Runner#\n     * @method dispatch\n     * @see PIXI.Runner#emit\n     */\n    dispatch: { value: Runner.prototype.emit },\n    /**\n     * Alias for `emit`\n     * @memberof PIXI.Runner#\n     * @method run\n     * @see PIXI.Runner#emit\n     */\n    run: { value: Runner.prototype.emit },\n});\n\nexports.Runner = Runner;\n//# sourceMappingURL=runner.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Runner","name","items","_name","_aliasCount","prototype","emit","Runner.prototype.emit","a0","a1","a2","a3","a4","a5","a6","a7","arguments","length","Error","_a","i","len","ensureNonAliasedItems","Runner.prototype.ensureNonAliasedItems","slice","add","Runner.prototype.add","item","remove","push","Runner.prototype.remove","index","indexOf","splice","contains","Runner.prototype.contains","removeAll","Runner.prototype.removeAll","destroy","Runner.prototype.destroy","get","enumerable","configurable","defineProperties","dispatch","run"]
}
