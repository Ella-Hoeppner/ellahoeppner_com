shadow$provide.module$node_modules$$pixi$mesh_extras$dist$cjs$mesh_extras=function(global,require,module,exports){function __extends(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}Object.defineProperty(exports,"__esModule",{value:!0});var mesh=require("module$node_modules$$pixi$mesh$dist$cjs$mesh"),constants=require("module$node_modules$$pixi$constants$dist$cjs$constants"),core=require("module$node_modules$$pixi$core$dist$cjs$core"),
extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)},PlaneGeometry=function(_super){function PlaneGeometry(width,height,segWidth,segHeight){void 0===width&&(width=100);void 0===height&&(height=100);void 0===segWidth&&(segWidth=10);void 0===segHeight&&(segHeight=10);var _this=_super.call(this)||this;_this.segWidth=
segWidth;_this.segHeight=segHeight;_this.width=width;_this.height=height;_this.build();return _this}__extends(PlaneGeometry,_super);PlaneGeometry.prototype.build=function(){for(var total=this.segWidth*this.segHeight,verts=[],uvs=[],indices=[],segmentsX=this.segWidth-1,segmentsY=this.segHeight-1,sizeX=this.width/segmentsX,sizeY=this.height/segmentsY,i=0;i<total;i++){var x=i%this.segWidth,y=i/this.segWidth|0;verts.push(x*sizeX,y*sizeY);uvs.push(x/segmentsX,y/segmentsY)}total=segmentsX*segmentsY;for(i=
0;i<total;i++)segmentsY=i%segmentsX,sizeX=i/segmentsX|0,sizeY=sizeX*this.segWidth+segmentsY+1,x=(sizeX+1)*this.segWidth+segmentsY,indices.push(sizeX*this.segWidth+segmentsY,sizeY,x,sizeY,(sizeX+1)*this.segWidth+segmentsY+1,x);this.buffers[0].data=new Float32Array(verts);this.buffers[1].data=new Float32Array(uvs);this.indexBuffer.data=new Uint16Array(indices);this.buffers[0].update();this.buffers[1].update();this.indexBuffer.update()};return PlaneGeometry}(mesh.MeshGeometry),RopeGeometry=function(_super){function RopeGeometry(width,
points,textureScale){void 0===width&&(width=200);void 0===textureScale&&(textureScale=0);var _this=_super.call(this,new Float32Array(4*points.length),new Float32Array(4*points.length),new Uint16Array(6*(points.length-1)))||this;_this.points=points;_this._width=width;_this.textureScale=textureScale;_this.build();return _this}__extends(RopeGeometry,_super);Object.defineProperty(RopeGeometry.prototype,"width",{get:function(){return this._width},enumerable:!1,configurable:!0});RopeGeometry.prototype.build=
function(){var points=this.points;if(points){var vertexBuffer=this.getBuffer("aVertexPosition"),uvBuffer=this.getBuffer("aTextureCoord"),indexBuffer=this.getIndex();if(!(1>points.length)){vertexBuffer.data.length/4!==points.length&&(vertexBuffer.data=new Float32Array(4*points.length),uvBuffer.data=new Float32Array(4*points.length),indexBuffer.data=new Uint16Array(6*(points.length-1)));var uvs=uvBuffer.data;vertexBuffer=indexBuffer.data;uvs[0]=0;uvs[1]=0;uvs[2]=0;uvs[3]=1;for(var amount=0,prev=points[0],
textureWidth=this._width*this.textureScale,total=points.length,i=0;i<total;i++){var index=4*i;if(0<this.textureScale){var dx=prev.x-points[i].x;prev=prev.y-points[i].y;dx=Math.sqrt(dx*dx+prev*prev);prev=points[i];amount+=dx/textureWidth}else amount=i/(total-1);uvs[index]=amount;uvs[index+1]=0;uvs[index+2]=amount;uvs[index+3]=1}for(i=points=0;i<total-1;i++)index=2*i,vertexBuffer[points++]=index,vertexBuffer[points++]=index+1,vertexBuffer[points++]=index+2,vertexBuffer[points++]=index+2,vertexBuffer[points++]=
index+1,vertexBuffer[points++]=index+3;uvBuffer.update();indexBuffer.update();this.updateVertices()}}};RopeGeometry.prototype.updateVertices=function(){var points=this.points;if(!(1>points.length)){for(var lastPoint=points[0],nextPoint,perpY,vertices=this.buffers[0].data,total=points.length,i=0;i<total;i++){var point=points[i],index=4*i;nextPoint=i<points.length-1?points[i+1]:point;perpY=-(nextPoint.x-lastPoint.x);lastPoint=nextPoint.y-lastPoint.y;nextPoint=Math.sqrt(lastPoint*lastPoint+perpY*perpY);
var num=0<this.textureScale?this.textureScale*this._width/2:this._width/2;lastPoint/=nextPoint;perpY/=nextPoint;lastPoint*=num;perpY*=num;vertices[index]=point.x+lastPoint;vertices[index+1]=point.y+perpY;vertices[index+2]=point.x-lastPoint;vertices[index+3]=point.y-perpY;lastPoint=point}this.buffers[0].update()}};RopeGeometry.prototype.update=function(){0<this.textureScale?this.build():this.updateVertices()};return RopeGeometry}(mesh.MeshGeometry);global=function(_super){function SimpleRope(texture,
points,textureScale){void 0===textureScale&&(textureScale=0);points=new RopeGeometry(texture.height,points,textureScale);var meshMaterial=new mesh.MeshMaterial(texture);0<textureScale&&(texture.baseTexture.wrapMode=constants.WRAP_MODES.REPEAT);texture=_super.call(this,points,meshMaterial)||this;texture.autoUpdate=!0;return texture}__extends(SimpleRope,_super);SimpleRope.prototype._render=function(renderer){var geometry=this.geometry;if(this.autoUpdate||geometry._width!==this.shader.texture.height)geometry._width=
this.shader.texture.height,geometry.update();_super.prototype._render.call(this,renderer)};return SimpleRope}(mesh.Mesh);require=function(_super){function SimplePlane(texture,verticesX,verticesY){verticesX=new PlaneGeometry(texture.width,texture.height,verticesX,verticesY);verticesY=new mesh.MeshMaterial(core.Texture.WHITE);verticesX=_super.call(this,verticesX,verticesY)||this;verticesX.texture=texture;return verticesX}__extends(SimplePlane,_super);SimplePlane.prototype.textureUpdated=function(){this._textureID=
this.shader.texture._updateID;var geometry=this.geometry;geometry.width=this.shader.texture.width;geometry.height=this.shader.texture.height;geometry.build()};Object.defineProperty(SimplePlane.prototype,"texture",{get:function(){return this.shader.texture},set:function(value){if(this.shader.texture!==value)if(this.shader.texture=value,this._textureID=-1,value.baseTexture.valid)this.textureUpdated();else value.once("update",this.textureUpdated,this)},enumerable:!1,configurable:!0});SimplePlane.prototype._render=
function(renderer){this._textureID!==this.shader.texture._updateID&&this.textureUpdated();_super.prototype._render.call(this,renderer)};SimplePlane.prototype.destroy=function(options){this.shader.texture.off("update",this.textureUpdated,this);_super.prototype.destroy.call(this,options)};return SimplePlane}(mesh.Mesh);module=function(_super){function SimpleMesh(texture,vertices,uvs,indices,drawMode){void 0===texture&&(texture=core.Texture.EMPTY);vertices=new mesh.MeshGeometry(vertices,uvs,indices);
vertices.getBuffer("aVertexPosition").static=!1;texture=new mesh.MeshMaterial(texture);drawMode=_super.call(this,vertices,texture,null,drawMode)||this;drawMode.autoUpdate=!0;return drawMode}__extends(SimpleMesh,_super);Object.defineProperty(SimpleMesh.prototype,"vertices",{get:function(){return this.geometry.getBuffer("aVertexPosition").data},set:function(value){this.geometry.getBuffer("aVertexPosition").data=value},enumerable:!1,configurable:!0});SimpleMesh.prototype._render=function(renderer){this.autoUpdate&&
this.geometry.getBuffer("aVertexPosition").update();_super.prototype._render.call(this,renderer)};return SimpleMesh}(mesh.Mesh);var NineSlicePlane=function(_super){function NineSlicePlane(texture,leftWidth,topHeight,rightWidth,bottomHeight){void 0===leftWidth&&(leftWidth=10);void 0===topHeight&&(topHeight=10);void 0===rightWidth&&(rightWidth=10);void 0===bottomHeight&&(bottomHeight=10);var _this=_super.call(this,core.Texture.WHITE,4,4)||this;_this._origWidth=texture.orig.width;_this._origHeight=texture.orig.height;
_this._width=_this._origWidth;_this._height=_this._origHeight;_this._leftWidth=leftWidth;_this._rightWidth=rightWidth;_this._topHeight=topHeight;_this._bottomHeight=bottomHeight;_this.texture=texture;return _this}__extends(NineSlicePlane,_super);NineSlicePlane.prototype.textureUpdated=function(){this._textureID=this.shader.texture._updateID;this._refresh()};Object.defineProperty(NineSlicePlane.prototype,"vertices",{get:function(){return this.geometry.getBuffer("aVertexPosition").data},set:function(value){this.geometry.getBuffer("aVertexPosition").data=
value},enumerable:!1,configurable:!0});NineSlicePlane.prototype.updateHorizontalVertices=function(){var vertices=this.vertices,scale=this._getMinScale();vertices[9]=vertices[11]=vertices[13]=vertices[15]=this._topHeight*scale;vertices[17]=vertices[19]=vertices[21]=vertices[23]=this._height-this._bottomHeight*scale;vertices[25]=vertices[27]=vertices[29]=vertices[31]=this._height};NineSlicePlane.prototype.updateVerticalVertices=function(){var vertices=this.vertices,scale=this._getMinScale();vertices[2]=
vertices[10]=vertices[18]=vertices[26]=this._leftWidth*scale;vertices[4]=vertices[12]=vertices[20]=vertices[28]=this._width-this._rightWidth*scale;vertices[6]=vertices[14]=vertices[22]=vertices[30]=this._width};NineSlicePlane.prototype._getMinScale=function(){var w=this._leftWidth+this._rightWidth,h=this._topHeight+this._bottomHeight;return Math.min(this._width>w?1:this._width/w,this._height>h?1:this._height/h)};Object.defineProperty(NineSlicePlane.prototype,"width",{get:function(){return this._width},
set:function(value){this._width=value;this._refresh()},enumerable:!1,configurable:!0});Object.defineProperty(NineSlicePlane.prototype,"height",{get:function(){return this._height},set:function(value){this._height=value;this._refresh()},enumerable:!1,configurable:!0});Object.defineProperty(NineSlicePlane.prototype,"leftWidth",{get:function(){return this._leftWidth},set:function(value){this._leftWidth=value;this._refresh()},enumerable:!1,configurable:!0});Object.defineProperty(NineSlicePlane.prototype,
"rightWidth",{get:function(){return this._rightWidth},set:function(value){this._rightWidth=value;this._refresh()},enumerable:!1,configurable:!0});Object.defineProperty(NineSlicePlane.prototype,"topHeight",{get:function(){return this._topHeight},set:function(value){this._topHeight=value;this._refresh()},enumerable:!1,configurable:!0});Object.defineProperty(NineSlicePlane.prototype,"bottomHeight",{get:function(){return this._bottomHeight},set:function(value){this._bottomHeight=value;this._refresh()},
enumerable:!1,configurable:!0});NineSlicePlane.prototype._refresh=function(){var texture=this.texture,uvs=this.geometry.buffers[1].data;this._origWidth=texture.orig.width;this._origHeight=texture.orig.height;texture=1/this._origWidth;var _uvh=1/this._origHeight;uvs[0]=uvs[8]=uvs[16]=uvs[24]=0;uvs[1]=uvs[3]=uvs[5]=uvs[7]=0;uvs[6]=uvs[14]=uvs[22]=uvs[30]=1;uvs[25]=uvs[27]=uvs[29]=uvs[31]=1;uvs[2]=uvs[10]=uvs[18]=uvs[26]=texture*this._leftWidth;uvs[4]=uvs[12]=uvs[20]=uvs[28]=1-texture*this._rightWidth;
uvs[9]=uvs[11]=uvs[13]=uvs[15]=_uvh*this._topHeight;uvs[17]=uvs[19]=uvs[21]=uvs[23]=1-_uvh*this._bottomHeight;this.updateHorizontalVertices();this.updateVerticalVertices();this.geometry.buffers[0].update();this.geometry.buffers[1].update()};return NineSlicePlane}(require);exports.NineSlicePlane=NineSlicePlane;exports.PlaneGeometry=PlaneGeometry;exports.RopeGeometry=RopeGeometry;exports.SimpleMesh=module;exports.SimplePlane=require;exports.SimpleRope=global}
//# sourceMappingURL=module$node_modules$$pixi$mesh_extras$dist$cjs$mesh_extras.js.map
