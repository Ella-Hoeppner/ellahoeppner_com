shadow$provide.module$node_modules$$pixi$particles$dist$cjs$particles=function(global,require,module,exports){function __extends(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}Object.defineProperty(exports,"__esModule",{value:!0});var constants=require("module$node_modules$$pixi$constants$dist$cjs$constants");global=require("module$node_modules$$pixi$display$dist$cjs$display");var utils=require("module$node_modules$$pixi$utils$dist$cjs$utils"),
core=require("module$node_modules$$pixi$core$dist$cjs$core"),math=require("module$node_modules$$pixi$math$dist$cjs$math"),extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};require=function(_super){function ParticleContainer(maxSize,properties,batchSize,autoResize){void 0===maxSize&&(maxSize=1500);
void 0===batchSize&&(batchSize=16384);void 0===autoResize&&(autoResize=!1);var _this=_super.call(this)||this;16384<batchSize&&(batchSize=16384);_this._properties=[!1,!0,!1,!1,!1];_this._maxSize=maxSize;_this._batchSize=batchSize;_this._buffers=null;_this._bufferUpdateIDs=[];_this._updateID=0;_this.interactiveChildren=!1;_this.blendMode=constants.BLEND_MODES.NORMAL;_this.autoResize=autoResize;_this.roundPixels=!0;_this.baseTexture=null;_this.setProperties(properties);_this._tint=0;_this.tintRgb=new Float32Array(4);
_this.tint=16777215;return _this}__extends(ParticleContainer,_super);ParticleContainer.prototype.setProperties=function(properties){properties&&(this._properties[0]="vertices"in properties||"scale"in properties?!!properties.vertices||!!properties.scale:this._properties[0],this._properties[1]="position"in properties?!!properties.position:this._properties[1],this._properties[2]="rotation"in properties?!!properties.rotation:this._properties[2],this._properties[3]="uvs"in properties?!!properties.uvs:
this._properties[3],this._properties[4]="tint"in properties||"alpha"in properties?!!properties.tint||!!properties.alpha:this._properties[4])};ParticleContainer.prototype.updateTransform=function(){this.displayObjectUpdateTransform()};Object.defineProperty(ParticleContainer.prototype,"tint",{get:function(){return this._tint},set:function(value){this._tint=value;utils.hex2rgb(value,this.tintRgb)},enumerable:!1,configurable:!0});ParticleContainer.prototype.render=function(renderer){var _this=this;if(this.visible&&
!(0>=this.worldAlpha)&&this.children.length&&this.renderable){if(!this.baseTexture&&(this.baseTexture=this.children[0]._texture.baseTexture,!this.baseTexture.valid))this.baseTexture.once("update",function(){return _this.onChildrenChange(0)});renderer.batch.setObjectRenderer(renderer.plugins.particle);renderer.plugins.particle.render(this)}};ParticleContainer.prototype.onChildrenChange=function(smallestChildIndex){for(smallestChildIndex=Math.floor(smallestChildIndex/this._batchSize);this._bufferUpdateIDs.length<
smallestChildIndex;)this._bufferUpdateIDs.push(0);this._bufferUpdateIDs[smallestChildIndex]=++this._updateID};ParticleContainer.prototype.dispose=function(){if(this._buffers){for(var i=0;i<this._buffers.length;++i)this._buffers[i].destroy();this._buffers=null}};ParticleContainer.prototype.destroy=function(options){_super.prototype.destroy.call(this,options);this.dispose();this._bufferUpdateIDs=this._buffers=this._properties=null};return ParticleContainer}(global.Container);var ParticleBuffer=function(){function ParticleBuffer(properties,
dynamicPropertyFlags,size){this.geometry=new core.Geometry;this.indexBuffer=null;this.size=size;this.dynamicProperties=[];this.staticProperties=[];for(size=0;size<properties.length;++size){var property=properties[size];property={attributeName:property.attributeName,size:property.size,uploadFunction:property.uploadFunction,type:property.type||constants.TYPES.FLOAT,offset:property.offset};dynamicPropertyFlags[size]?this.dynamicProperties.push(property):this.staticProperties.push(property)}this.staticStride=
0;this.staticDataUint32=this.staticData=this.staticBuffer=null;this.dynamicStride=0;this.dynamicDataUint32=this.dynamicData=this.dynamicBuffer=null;this._updateID=0;this.initBuffers()}ParticleBuffer.prototype.initBuffers=function(){var geometry=this.geometry,dynamicOffset=0;this.indexBuffer=new core.Buffer(utils.createIndicesForQuads(this.size),!0,!0);geometry.addIndex(this.indexBuffer);for(var i=this.dynamicStride=0;i<this.dynamicProperties.length;++i){var property=this.dynamicProperties[i];property.offset=
dynamicOffset;dynamicOffset+=property.size;this.dynamicStride+=property.size}i=new ArrayBuffer(this.size*this.dynamicStride*16);this.dynamicData=new Float32Array(i);this.dynamicDataUint32=new Uint32Array(i);this.dynamicBuffer=new core.Buffer(this.dynamicData,!1,!1);for(i=this.staticStride=dynamicOffset=0;i<this.staticProperties.length;++i)property=this.staticProperties[i],property.offset=dynamicOffset,dynamicOffset+=property.size,this.staticStride+=property.size;i=new ArrayBuffer(this.size*this.staticStride*
16);this.staticData=new Float32Array(i);this.staticDataUint32=new Uint32Array(i);this.staticBuffer=new core.Buffer(this.staticData,!0,!1);for(i=0;i<this.dynamicProperties.length;++i)property=this.dynamicProperties[i],geometry.addAttribute(property.attributeName,this.dynamicBuffer,0,property.type===constants.TYPES.UNSIGNED_BYTE,property.type,4*this.dynamicStride,4*property.offset);for(i=0;i<this.staticProperties.length;++i)property=this.staticProperties[i],geometry.addAttribute(property.attributeName,
this.staticBuffer,0,property.type===constants.TYPES.UNSIGNED_BYTE,property.type,4*this.staticStride,4*property.offset)};ParticleBuffer.prototype.uploadDynamic=function(children,startIndex,amount){for(var i=0;i<this.dynamicProperties.length;i++){var property=this.dynamicProperties[i];property.uploadFunction(children,startIndex,amount,property.type===constants.TYPES.UNSIGNED_BYTE?this.dynamicDataUint32:this.dynamicData,this.dynamicStride,property.offset)}this.dynamicBuffer._updateID++};ParticleBuffer.prototype.uploadStatic=
function(children,startIndex,amount){for(var i=0;i<this.staticProperties.length;i++){var property=this.staticProperties[i];property.uploadFunction(children,startIndex,amount,property.type===constants.TYPES.UNSIGNED_BYTE?this.staticDataUint32:this.staticData,this.staticStride,property.offset)}this.staticBuffer._updateID++};ParticleBuffer.prototype.destroy=function(){this.staticDataUint32=this.staticData=this.staticBuffer=this.staticProperties=this.dynamicDataUint32=this.dynamicData=this.dynamicBuffer=
this.dynamicProperties=this.indexBuffer=null;this.geometry.destroy()};return ParticleBuffer}();global=function(_super){function ParticleRenderer(renderer){renderer=_super.call(this,renderer)||this;renderer.shader=null;renderer.properties=null;renderer.tempMatrix=new math.Matrix;renderer.properties=[{attributeName:"aVertexPosition",size:2,uploadFunction:renderer.uploadVertices,offset:0},{attributeName:"aPositionCoord",size:2,uploadFunction:renderer.uploadPosition,offset:0},{attributeName:"aRotation",
size:1,uploadFunction:renderer.uploadRotation,offset:0},{attributeName:"aTextureCoord",size:2,uploadFunction:renderer.uploadUvs,offset:0},{attributeName:"aColor",size:1,type:constants.TYPES.UNSIGNED_BYTE,uploadFunction:renderer.uploadTint,offset:0}];renderer.shader=core.Shader.from("attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nattribute vec2 aPositionCoord;\nattribute float aRotation;\n\nuniform mat3 translationMatrix;\nuniform vec4 uColor;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nvoid main(void){\n    float x \x3d (aVertexPosition.x) * cos(aRotation) - (aVertexPosition.y) * sin(aRotation);\n    float y \x3d (aVertexPosition.x) * sin(aRotation) + (aVertexPosition.y) * cos(aRotation);\n\n    vec2 v \x3d vec2(x, y);\n    v \x3d v + aPositionCoord;\n\n    gl_Position \x3d vec4((translationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord \x3d aTextureCoord;\n    vColor \x3d aColor * uColor;\n}\n",
"varying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void){\n    vec4 color \x3d texture2D(uSampler, vTextureCoord) * vColor;\n    gl_FragColor \x3d color;\n}",{});renderer.state=core.State.for2d();return renderer}__extends(ParticleRenderer,_super);ParticleRenderer.prototype.render=function(container){var children=container.children,maxSize=container._maxSize,batchSize=container._batchSize,renderer=this.renderer,totalChildren=children.length;if(0!==totalChildren){totalChildren>
maxSize&&!container.autoResize&&(totalChildren=maxSize);maxSize=container._buffers;maxSize||(maxSize=container._buffers=this.generateBuffers(container));var baseTexture=children[0]._texture.baseTexture;this.state.blendMode=utils.correctBlendMode(container.blendMode,baseTexture.alphaMode);renderer.state.set(this.state);var gl=renderer.gl,m=container.worldTransform.copyTo(this.tempMatrix);m.prepend(renderer.globalUniforms.uniforms.projectionMatrix);this.shader.uniforms.translationMatrix=m.toArray(!0);
this.shader.uniforms.uColor=utils.premultiplyRgba(container.tintRgb,container.worldAlpha,this.shader.uniforms.uColor,baseTexture.alphaMode);this.shader.uniforms.uSampler=baseTexture;this.renderer.shader.bind(this.shader);baseTexture=!1;for(var j=m=0;m<totalChildren;m+=batchSize,j+=1){var amount=totalChildren-m;amount>batchSize&&(amount=batchSize);j>=maxSize.length&&maxSize.push(this._generateOneMoreBuffer(container));var buffer=maxSize[j];buffer.uploadDynamic(children,m,amount);var bid=container._bufferUpdateIDs[j]||
0;if(baseTexture=baseTexture||buffer._updateID<bid)buffer._updateID=container._updateID,buffer.uploadStatic(children,m,amount);renderer.geometry.bind(buffer.geometry);gl.drawElements(gl.TRIANGLES,6*amount,gl.UNSIGNED_SHORT,0)}}};ParticleRenderer.prototype.generateBuffers=function(container){var buffers=[],size=container._maxSize,batchSize=container._batchSize;container=container._properties;for(var i=0;i<size;i+=batchSize)buffers.push(new ParticleBuffer(this.properties,container,batchSize));return buffers};
ParticleRenderer.prototype._generateOneMoreBuffer=function(container){return new ParticleBuffer(this.properties,container._properties,container._batchSize)};ParticleRenderer.prototype.uploadVertices=function(children,startIndex,amount,array,stride,offset){for(var w0,w1,h0,h1,i=0;i<amount;++i){h1=children[startIndex+i];w0=h1._texture;var sx=h1.scale.x,sy=h1.scale.y;h0=w0.trim;var orig=w0.orig;h0?(w1=h0.x-h1.anchor.x*orig.width,w0=w1+h0.width,h1=h0.y-h1.anchor.y*orig.height,h0=h1+h0.height):(w0=orig.width*
(1-h1.anchor.x),w1=orig.width*-h1.anchor.x,h0=orig.height*(1-h1.anchor.y),h1=orig.height*-h1.anchor.y);array[offset]=w1*sx;array[offset+1]=h1*sy;array[offset+stride]=w0*sx;array[offset+stride+1]=h1*sy;array[offset+2*stride]=w0*sx;array[offset+2*stride+1]=h0*sy;array[offset+3*stride]=w1*sx;array[offset+3*stride+1]=h0*sy;offset+=4*stride}};ParticleRenderer.prototype.uploadPosition=function(children,startIndex,amount,array,stride,offset){for(var i=0;i<amount;i++){var spritePosition=children[startIndex+
i].position;array[offset]=spritePosition.x;array[offset+1]=spritePosition.y;array[offset+stride]=spritePosition.x;array[offset+stride+1]=spritePosition.y;array[offset+2*stride]=spritePosition.x;array[offset+2*stride+1]=spritePosition.y;array[offset+3*stride]=spritePosition.x;array[offset+3*stride+1]=spritePosition.y;offset+=4*stride}};ParticleRenderer.prototype.uploadRotation=function(children,startIndex,amount,array,stride,offset){for(var i=0;i<amount;i++){var spriteRotation=children[startIndex+
i].rotation;array[offset]=spriteRotation;array[offset+stride]=spriteRotation;array[offset+2*stride]=spriteRotation;array[offset+3*stride]=spriteRotation;offset+=4*stride}};ParticleRenderer.prototype.uploadUvs=function(children,startIndex,amount,array,stride,offset){for(var i=0;i<amount;++i){var textureUvs=children[startIndex+i]._texture._uvs;textureUvs?(array[offset]=textureUvs.x0,array[offset+1]=textureUvs.y0,array[offset+stride]=textureUvs.x1,array[offset+stride+1]=textureUvs.y1,array[offset+2*
stride]=textureUvs.x2,array[offset+2*stride+1]=textureUvs.y2,array[offset+3*stride]=textureUvs.x3,array[offset+3*stride+1]=textureUvs.y3):(array[offset]=0,array[offset+1]=0,array[offset+stride]=0,array[offset+stride+1]=0,array[offset+2*stride]=0,array[offset+2*stride+1]=0,array[offset+3*stride]=0,array[offset+3*stride+1]=0);offset+=4*stride}};ParticleRenderer.prototype.uploadTint=function(children,startIndex,amount,array,stride,offset){for(var i=0;i<amount;++i){var sprite=children[startIndex+i],premultiplied=
0<sprite._texture.baseTexture.alphaMode,alpha=sprite.alpha;sprite=1>alpha&&premultiplied?utils.premultiplyTint(sprite._tintRGB,alpha):sprite._tintRGB+(255*alpha<<24);array[offset]=sprite;array[offset+stride]=sprite;array[offset+2*stride]=sprite;array[offset+3*stride]=sprite;offset+=4*stride}};ParticleRenderer.prototype.destroy=function(){_super.prototype.destroy.call(this);this.shader&&(this.shader.destroy(),this.shader=null);this.tempMatrix=null};return ParticleRenderer}(core.ObjectRenderer);exports.ParticleContainer=
require;exports.ParticleRenderer=global}
//# sourceMappingURL=module$node_modules$$pixi$particles$dist$cjs$particles.js.map
