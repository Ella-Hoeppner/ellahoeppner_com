{
"version":3,
"file":"module$node_modules$$pixi$sprite$dist$cjs$sprite.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@pixi/sprite/dist/cjs/sprite.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$sprite$dist$cjs$sprite\"] = function(global,require,module,exports) {\n/*!\n * @pixi/sprite - v6.0.4\n * Compiled Tue, 11 May 2021 18:00:23 UTC\n *\n * @pixi/sprite is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar constants = require('@pixi/constants');\nvar core = require('@pixi/core');\nvar display = require('@pixi/display');\nvar math = require('@pixi/math');\nvar settings = require('@pixi/settings');\nvar utils = require('@pixi/utils');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) { if (b.hasOwnProperty(p)) { d[p] = b[p]; } } };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar tempPoint = new math.Point();\nvar indices = new Uint16Array([0, 1, 2, 0, 2, 3]);\n/**\n * The Sprite object is the base for all textured objects that are rendered to the screen\n*\n * A sprite can be created directly from an image like this:\n *\n * ```js\n * let sprite = PIXI.Sprite.from('assets/image.png');\n * ```\n *\n * The more efficient way to create sprites is using a {@link PIXI.Spritesheet},\n * as swapping base textures when rendering to the screen is inefficient.\n *\n * ```js\n * PIXI.Loader.shared.add(\"assets/spritesheet.json\").load(setup);\n *\n * function setup() {\n *   let sheet = PIXI.Loader.shared.resources[\"assets/spritesheet.json\"].spritesheet;\n *   let sprite = new PIXI.Sprite(sheet.textures[\"image.png\"]);\n *   ...\n * }\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nvar Sprite = /** @class */ (function (_super) {\n    __extends(Sprite, _super);\n    /**\n     * @param {PIXI.Texture} [texture] - The texture for this sprite.\n     */\n    function Sprite(texture) {\n        var _this = _super.call(this) || this;\n        /**\n         * The anchor point defines the normalized coordinates\n         * in the texture that map to the position of this\n         * sprite.\n         *\n         * By default, this is `(0,0)` (or `texture.defaultAnchor`\n         * if you have modified that), which means the position\n         * `(x,y)` of this `Sprite` will be the top-left corner.\n         *\n         * Note: Updating `texture.defaultAnchor` after\n         * constructing a `Sprite` does _not_ update its anchor.\n         *\n         * {@link https://docs.cocos2d-x.org/cocos2d-x/en/sprites/manipulation.html}\n         *\n         * @default `texture.defaultAnchor`\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        _this._anchor = new math.ObservablePoint(_this._onAnchorUpdate, _this, (texture ? texture.defaultAnchor.x : 0), (texture ? texture.defaultAnchor.y : 0));\n        /**\n         * The texture that the sprite is using\n         *\n         * @private\n         * @member {PIXI.Texture}\n         */\n        _this._texture = null;\n        /**\n         * The width of the sprite (this is initially set by the texture)\n         *\n         * @protected\n         * @member {number}\n         */\n        _this._width = 0;\n        /**\n         * The height of the sprite (this is initially set by the texture)\n         *\n         * @protected\n         * @member {number}\n         */\n        _this._height = 0;\n        /**\n         * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this._tint = null;\n        /**\n         * The tint applied to the sprite. This is a RGB value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 16777215\n         */\n        _this._tintRGB = null;\n        _this.tint = 0xFFFFFF;\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = constants.BLEND_MODES.NORMAL;\n        /**\n         * Cached tint value so we can tell when the tint is changed.\n         * Value is used for 2d CanvasRenderer.\n         *\n         * @protected\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this._cachedTint = 0xFFFFFF;\n        /**\n         * this is used to store the uvs data of the sprite, assigned at the same time\n         * as the vertexData in calculateVertices()\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        _this.uvs = null;\n        // call texture setter\n        _this.texture = texture || core.Texture.EMPTY;\n        /**\n         * this is used to store the vertex data of the sprite (basically a quad)\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        _this.vertexData = new Float32Array(8);\n        /**\n         * This is used to calculate the bounds of the object IF it is a trimmed sprite\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        _this.vertexTrimmedData = null;\n        _this._transformID = -1;\n        _this._textureID = -1;\n        _this._transformTrimmedID = -1;\n        _this._textureTrimmedID = -1;\n        // Batchable stuff..\n        // TODO could make this a mixin?\n        _this.indices = indices;\n        /**\n         * Plugin that is responsible for rendering this element.\n         * Allows to customize the rendering process without overriding '_render' & '_renderCanvas' methods.\n         *\n         * @member {string}\n         * @default 'batch'\n         */\n        _this.pluginName = 'batch';\n        /**\n         * used to fast check if a sprite is.. a sprite!\n         * @member {boolean}\n         */\n        _this.isSprite = true;\n        /**\n         * Internal roundPixels field\n         *\n         * @member {boolean}\n         * @private\n         */\n        _this._roundPixels = settings.settings.ROUND_PIXELS;\n        return _this;\n    }\n    /**\n     * When the texture is updated, this event will fire to update the scale and frame\n     *\n     * @protected\n     */\n    Sprite.prototype._onTextureUpdate = function () {\n        this._textureID = -1;\n        this._textureTrimmedID = -1;\n        this._cachedTint = 0xFFFFFF;\n        // so if _width is 0 then width was not set..\n        if (this._width) {\n            this.scale.x = utils.sign(this.scale.x) * this._width / this._texture.orig.width;\n        }\n        if (this._height) {\n            this.scale.y = utils.sign(this.scale.y) * this._height / this._texture.orig.height;\n        }\n    };\n    /**\n     * Called when the anchor position updates.\n     *\n     * @private\n     */\n    Sprite.prototype._onAnchorUpdate = function () {\n        this._transformID = -1;\n        this._transformTrimmedID = -1;\n    };\n    /**\n     * calculates worldTransform * vertices, store it in vertexData\n     */\n    Sprite.prototype.calculateVertices = function () {\n        var texture = this._texture;\n        if (this._transformID === this.transform._worldID && this._textureID === texture._updateID) {\n            return;\n        }\n        // update texture UV here, because base texture can be changed without calling `_onTextureUpdate`\n        if (this._textureID !== texture._updateID) {\n            this.uvs = this._texture._uvs.uvsFloat32;\n        }\n        this._transformID = this.transform._worldID;\n        this._textureID = texture._updateID;\n        // set the vertex data\n        var wt = this.transform.worldTransform;\n        var a = wt.a;\n        var b = wt.b;\n        var c = wt.c;\n        var d = wt.d;\n        var tx = wt.tx;\n        var ty = wt.ty;\n        var vertexData = this.vertexData;\n        var trim = texture.trim;\n        var orig = texture.orig;\n        var anchor = this._anchor;\n        var w0 = 0;\n        var w1 = 0;\n        var h0 = 0;\n        var h1 = 0;\n        if (trim) {\n            // if the sprite is trimmed and is not a tilingsprite then we need to add the extra\n            // space before transforming the sprite coords.\n            w1 = trim.x - (anchor._x * orig.width);\n            w0 = w1 + trim.width;\n            h1 = trim.y - (anchor._y * orig.height);\n            h0 = h1 + trim.height;\n        }\n        else {\n            w1 = -anchor._x * orig.width;\n            w0 = w1 + orig.width;\n            h1 = -anchor._y * orig.height;\n            h0 = h1 + orig.height;\n        }\n        // xy\n        vertexData[0] = (a * w1) + (c * h1) + tx;\n        vertexData[1] = (d * h1) + (b * w1) + ty;\n        // xy\n        vertexData[2] = (a * w0) + (c * h1) + tx;\n        vertexData[3] = (d * h1) + (b * w0) + ty;\n        // xy\n        vertexData[4] = (a * w0) + (c * h0) + tx;\n        vertexData[5] = (d * h0) + (b * w0) + ty;\n        // xy\n        vertexData[6] = (a * w1) + (c * h0) + tx;\n        vertexData[7] = (d * h0) + (b * w1) + ty;\n        if (this._roundPixels) {\n            var resolution = settings.settings.RESOLUTION;\n            for (var i = 0; i < vertexData.length; ++i) {\n                vertexData[i] = Math.round((vertexData[i] * resolution | 0) / resolution);\n            }\n        }\n    };\n    /**\n     * calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\n     * This is used to ensure that the true width and height of a trimmed texture is respected\n     */\n    Sprite.prototype.calculateTrimmedVertices = function () {\n        if (!this.vertexTrimmedData) {\n            this.vertexTrimmedData = new Float32Array(8);\n        }\n        else if (this._transformTrimmedID === this.transform._worldID && this._textureTrimmedID === this._texture._updateID) {\n            return;\n        }\n        this._transformTrimmedID = this.transform._worldID;\n        this._textureTrimmedID = this._texture._updateID;\n        // lets do some special trim code!\n        var texture = this._texture;\n        var vertexData = this.vertexTrimmedData;\n        var orig = texture.orig;\n        var anchor = this._anchor;\n        // lets calculate the new untrimmed bounds..\n        var wt = this.transform.worldTransform;\n        var a = wt.a;\n        var b = wt.b;\n        var c = wt.c;\n        var d = wt.d;\n        var tx = wt.tx;\n        var ty = wt.ty;\n        var w1 = -anchor._x * orig.width;\n        var w0 = w1 + orig.width;\n        var h1 = -anchor._y * orig.height;\n        var h0 = h1 + orig.height;\n        // xy\n        vertexData[0] = (a * w1) + (c * h1) + tx;\n        vertexData[1] = (d * h1) + (b * w1) + ty;\n        // xy\n        vertexData[2] = (a * w0) + (c * h1) + tx;\n        vertexData[3] = (d * h1) + (b * w0) + ty;\n        // xy\n        vertexData[4] = (a * w0) + (c * h0) + tx;\n        vertexData[5] = (d * h0) + (b * w0) + ty;\n        // xy\n        vertexData[6] = (a * w1) + (c * h0) + tx;\n        vertexData[7] = (d * h0) + (b * w1) + ty;\n    };\n    /**\n    *\n    * Renders the object using the WebGL renderer\n    *\n    * @protected\n    * @param {PIXI.Renderer} renderer - The webgl renderer to use.\n    */\n    Sprite.prototype._render = function (renderer) {\n        this.calculateVertices();\n        renderer.batch.setObjectRenderer(renderer.plugins[this.pluginName]);\n        renderer.plugins[this.pluginName].render(this);\n    };\n    /**\n     * Updates the bounds of the sprite.\n     *\n     * @protected\n     */\n    Sprite.prototype._calculateBounds = function () {\n        var trim = this._texture.trim;\n        var orig = this._texture.orig;\n        // First lets check to see if the current texture has a trim..\n        if (!trim || (trim.width === orig.width && trim.height === orig.height)) {\n            // no trim! lets use the usual calculations..\n            this.calculateVertices();\n            this._bounds.addQuad(this.vertexData);\n        }\n        else {\n            // lets calculate a special trimmed bounds...\n            this.calculateTrimmedVertices();\n            this._bounds.addQuad(this.vertexTrimmedData);\n        }\n    };\n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional output rectangle.\n     * @return {PIXI.Rectangle} The bounds.\n     */\n    Sprite.prototype.getLocalBounds = function (rect) {\n        // we can do a fast local bounds if the sprite has no children!\n        if (this.children.length === 0) {\n            this._bounds.minX = this._texture.orig.width * -this._anchor._x;\n            this._bounds.minY = this._texture.orig.height * -this._anchor._y;\n            this._bounds.maxX = this._texture.orig.width * (1 - this._anchor._x);\n            this._bounds.maxY = this._texture.orig.height * (1 - this._anchor._y);\n            if (!rect) {\n                if (!this._localBoundsRect) {\n                    this._localBoundsRect = new math.Rectangle();\n                }\n                rect = this._localBoundsRect;\n            }\n            return this._bounds.getRectangle(rect);\n        }\n        return _super.prototype.getLocalBounds.call(this, rect);\n    };\n    /**\n     * Tests if a point is inside this sprite\n     *\n     * @param {PIXI.IPointData} point - the point to test\n     * @return {boolean} the result of the test\n     */\n    Sprite.prototype.containsPoint = function (point) {\n        this.worldTransform.applyInverse(point, tempPoint);\n        var width = this._texture.orig.width;\n        var height = this._texture.orig.height;\n        var x1 = -width * this.anchor.x;\n        var y1 = 0;\n        if (tempPoint.x >= x1 && tempPoint.x < x1 + width) {\n            y1 = -height * this.anchor.y;\n            if (tempPoint.y >= y1 && tempPoint.y < y1 + height) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Destroys this sprite and optionally its texture and children\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well\n     */\n    Sprite.prototype.destroy = function (options) {\n        _super.prototype.destroy.call(this, options);\n        this._texture.off('update', this._onTextureUpdate, this);\n        this._anchor = null;\n        var destroyTexture = typeof options === 'boolean' ? options : options && options.texture;\n        if (destroyTexture) {\n            var destroyBaseTexture = typeof options === 'boolean' ? options : options && options.baseTexture;\n            this._texture.destroy(!!destroyBaseTexture);\n        }\n        this._texture = null;\n    };\n    // some helper functions..\n    /**\n     * Helper function that creates a new sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {string|PIXI.Texture|HTMLCanvasElement|HTMLVideoElement} source - Source to create texture from\n     * @param {object} [options] - See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.Sprite} The newly created sprite\n     */\n    Sprite.from = function (source, options) {\n        var texture = (source instanceof core.Texture)\n            ? source\n            : core.Texture.from(source, options);\n        return new Sprite(texture);\n    };\n    Object.defineProperty(Sprite.prototype, \"roundPixels\", {\n        get: function () {\n            return this._roundPixels;\n        },\n        /**\n         * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n         * The main disadvantage is movement of objects may appear less smooth.\n         * To set the global default, change {@link PIXI.settings.ROUND_PIXELS}\n         *\n         * @member {boolean}\n         * @default false\n         */\n        set: function (value) {\n            if (this._roundPixels !== value) {\n                this._transformID = -1;\n            }\n            this._roundPixels = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"width\", {\n        /**\n         * The width of the sprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         */\n        get: function () {\n            return Math.abs(this.scale.x) * this._texture.orig.width;\n        },\n        set: function (value) {\n            var s = utils.sign(this.scale.x) || 1;\n            this.scale.x = s * value / this._texture.orig.width;\n            this._width = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"height\", {\n        /**\n         * The height of the sprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         */\n        get: function () {\n            return Math.abs(this.scale.y) * this._texture.orig.height;\n        },\n        set: function (value) {\n            var s = utils.sign(this.scale.y) || 1;\n            this.scale.y = s * value / this._texture.orig.height;\n            this._height = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"anchor\", {\n        /**\n         * The anchor sets the origin point of the sprite. The default value is taken from the {@link PIXI.Texture|Texture}\n         * and passed to the constructor.\n         *\n         * The default is `(0,0)`, this means the sprite's origin is the top left.\n         *\n         * Setting the anchor to `(0.5,0.5)` means the sprite's origin is centered.\n         *\n         * Setting the anchor to `(1,1)` would mean the sprite's origin point will be the bottom right corner.\n         *\n         * If you pass only single parameter, it will set both x and y to the same value as shown in the example below.\n         *\n         * @example\n         * const sprite = new PIXI.Sprite(texture);\n         * sprite.anchor.set(0.5); // This will set the origin to center. (0.5) is same as (0.5, 0.5).\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        get: function () {\n            return this._anchor;\n        },\n        set: function (value) {\n            this._anchor.copyFrom(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"tint\", {\n        /**\n         * The tint applied to the sprite. This is a hex value.\n         * A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        get: function () {\n            return this._tint;\n        },\n        set: function (value) {\n            this._tint = value;\n            this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"texture\", {\n        /**\n         * The texture that the sprite is using\n         *\n         * @member {PIXI.Texture}\n         */\n        get: function () {\n            return this._texture;\n        },\n        set: function (value) {\n            if (this._texture === value) {\n                return;\n            }\n            if (this._texture) {\n                this._texture.off('update', this._onTextureUpdate, this);\n            }\n            this._texture = value || core.Texture.EMPTY;\n            this._cachedTint = 0xFFFFFF;\n            this._textureID = -1;\n            this._textureTrimmedID = -1;\n            if (value) {\n                // wait for the texture to load\n                if (value.baseTexture.valid) {\n                    this._onTextureUpdate();\n                }\n                else {\n                    value.once('update', this._onTextureUpdate, this);\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Sprite;\n}(display.Container));\n\nexports.Sprite = Sprite;\n//# sourceMappingURL=sprite.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","defineProperty","value","constants","core","display","math","settings","utils","setPrototypeOf","__proto__","Array","p","hasOwnProperty","tempPoint","Point","indices","Uint16Array","Sprite","_super","texture","_this","call","_anchor","ObservablePoint","_onAnchorUpdate","defaultAnchor","x","y","_texture","_width","_height","_tint","_tintRGB","tint","blendMode","BLEND_MODES","NORMAL","_cachedTint","uvs","Texture","EMPTY","vertexData","Float32Array","vertexTrimmedData","_transformID","_textureID","_transformTrimmedID","_textureTrimmedID","pluginName","isSprite","_roundPixels","ROUND_PIXELS","_onTextureUpdate","Sprite.prototype._onTextureUpdate","scale","sign","orig","width","height","Sprite.prototype._onAnchorUpdate","calculateVertices","Sprite.prototype.calculateVertices","transform","_worldID","_updateID","_uvs","uvsFloat32","wt","worldTransform","a","c","tx","ty","trim","anchor","w1","_x","w0","h1","_y","h0","resolution","i","RESOLUTION","length","Math","round","calculateTrimmedVertices","Sprite.prototype.calculateTrimmedVertices","_render","Sprite.prototype._render","renderer","batch","setObjectRenderer","plugins","render","_calculateBounds","Sprite.prototype._calculateBounds","_bounds","addQuad","getLocalBounds","Sprite.prototype.getLocalBounds","rect","children","minX","minY","maxX","maxY","_localBoundsRect","Rectangle","getRectangle","containsPoint","Sprite.prototype.containsPoint","point","applyInverse","x1","y1","destroy","Sprite.prototype.destroy","options","off","destroyTexture","destroyBaseTexture","baseTexture","from","Sprite.from","source","get","set","enumerable","configurable","abs","s","copyFrom","valid","once","Container"]
}
