{
"version":3,
"file":"module$node_modules$$pixi$math$dist$cjs$math.js",
"lineCount":36,
"mappings":"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",
"sources":["node_modules/@pixi/math/dist/cjs/math.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$math$dist$cjs$math\"] = function(global,require,module,exports) {\n/*!\n * @pixi/math - v6.1.1\n * Compiled Fri, 06 Aug 2021 03:30:25 UTC\n *\n * @pixi/math is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Two Pi.\n *\n * @static\n * @member {number}\n * @memberof PIXI\n */\nvar PI_2 = Math.PI * 2;\n/**\n * Conversion factor for converting radians to degrees.\n *\n * @static\n * @member {number} RAD_TO_DEG\n * @memberof PIXI\n */\nvar RAD_TO_DEG = 180 / Math.PI;\n/**\n * Conversion factor for converting degrees to radians.\n *\n * @static\n * @member {number}\n * @memberof PIXI\n */\nvar DEG_TO_RAD = Math.PI / 180;\n(function (SHAPES) {\n    SHAPES[SHAPES[\"POLY\"] = 0] = \"POLY\";\n    SHAPES[SHAPES[\"RECT\"] = 1] = \"RECT\";\n    SHAPES[SHAPES[\"CIRC\"] = 2] = \"CIRC\";\n    SHAPES[SHAPES[\"ELIP\"] = 3] = \"ELIP\";\n    SHAPES[SHAPES[\"RREC\"] = 4] = \"RREC\";\n})(exports.SHAPES || (exports.SHAPES = {}));\n\n/**\n * Size object, contains width and height\n *\n * @memberof PIXI\n * @typedef {object} ISize\n * @property {number} width - Width component\n * @property {number} height - Height component\n */\n/**\n * Rectangle object is an area defined by its position, as indicated by its top-left corner\n * point (x, y) and by its width and its height.\n *\n * @class\n * @memberof PIXI\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rectangle\n     * @param {number} [width=0] - The overall width of this rectangle\n     * @param {number} [height=0] - The overall height of this rectangle\n     */\n    function Rectangle(x, y, width, height) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = Number(x);\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = Number(y);\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = Number(width);\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = Number(height);\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.RECT\n         * @see PIXI.SHAPES\n         */\n        this.type = exports.SHAPES.RECT;\n    }\n    Object.defineProperty(Rectangle.prototype, \"left\", {\n        /**\n         * returns the left edge of the rectangle\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.x;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"right\", {\n        /**\n         * returns the right edge of the rectangle\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"top\", {\n        /**\n         * returns the top edge of the rectangle\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.y;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"bottom\", {\n        /**\n         * returns the bottom edge of the rectangle\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle, \"EMPTY\", {\n        /**\n         * A constant empty rectangle.\n         *\n         * @static\n         * @constant\n         * @member {PIXI.Rectangle}\n         * @return {PIXI.Rectangle} An empty rectangle\n         */\n        get: function () {\n            return new Rectangle(0, 0, 0, 0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Creates a clone of this Rectangle\n     *\n     * @return {PIXI.Rectangle} a copy of the rectangle\n     */\n    Rectangle.prototype.clone = function () {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    };\n    /**\n     * Copies another rectangle to this one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy from.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    Rectangle.prototype.copyFrom = function (rectangle) {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n        return this;\n    };\n    /**\n     * Copies this rectangle to another one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy to.\n     * @return {PIXI.Rectangle} Returns given parameter.\n     */\n    Rectangle.prototype.copyTo = function (rectangle) {\n        rectangle.x = this.x;\n        rectangle.y = this.y;\n        rectangle.width = this.width;\n        rectangle.height = this.height;\n        return rectangle;\n    };\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rectangle\n     */\n    Rectangle.prototype.contains = function (x, y) {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n        if (x >= this.x && x < this.x + this.width) {\n            if (y >= this.y && y < this.y + this.height) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Pads the rectangle making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     *\n     * @param {number} [paddingX=0] - The horizontal padding amount.\n     * @param {number} [paddingY=0] - The vertical padding amount.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    Rectangle.prototype.pad = function (paddingX, paddingY) {\n        if (paddingX === void 0) { paddingX = 0; }\n        if (paddingY === void 0) { paddingY = paddingX; }\n        this.x -= paddingX;\n        this.y -= paddingY;\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n        return this;\n    };\n    /**\n     * Fits this rectangle around the passed one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to fit.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    Rectangle.prototype.fit = function (rectangle) {\n        var x1 = Math.max(this.x, rectangle.x);\n        var x2 = Math.min(this.x + this.width, rectangle.x + rectangle.width);\n        var y1 = Math.max(this.y, rectangle.y);\n        var y2 = Math.min(this.y + this.height, rectangle.y + rectangle.height);\n        this.x = x1;\n        this.width = Math.max(x2 - x1, 0);\n        this.y = y1;\n        this.height = Math.max(y2 - y1, 0);\n        return this;\n    };\n    /**\n     * Enlarges rectangle that way its corners lie on grid\n     *\n     * @param {number} [resolution=1] - resolution\n     * @param {number} [eps=0.001] - precision\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    Rectangle.prototype.ceil = function (resolution, eps) {\n        if (resolution === void 0) { resolution = 1; }\n        if (eps === void 0) { eps = 0.001; }\n        var x2 = Math.ceil((this.x + this.width - eps) * resolution) / resolution;\n        var y2 = Math.ceil((this.y + this.height - eps) * resolution) / resolution;\n        this.x = Math.floor((this.x + eps) * resolution) / resolution;\n        this.y = Math.floor((this.y + eps) * resolution) / resolution;\n        this.width = x2 - this.x;\n        this.height = y2 - this.y;\n        return this;\n    };\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to include.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    Rectangle.prototype.enlarge = function (rectangle) {\n        var x1 = Math.min(this.x, rectangle.x);\n        var x2 = Math.max(this.x + this.width, rectangle.x + rectangle.width);\n        var y1 = Math.min(this.y, rectangle.y);\n        var y2 = Math.max(this.y + this.height, rectangle.y + rectangle.height);\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n        return this;\n    };\n    Rectangle.prototype.toString = function () {\n        return \"[@pixi/math:Rectangle x=\" + this.x + \" y=\" + this.y + \" width=\" + this.width + \" height=\" + this.height + \"]\";\n    };\n    return Rectangle;\n}());\n\n/**\n * The Circle object is used to help draw graphics and can also be used to specify a hit area for displayObjects.\n *\n * @class\n * @memberof PIXI\n */\nvar Circle = /** @class */ (function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [radius=0] - The radius of the circle\n     */\n    function Circle(x, y, radius) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (radius === void 0) { radius = 0; }\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.radius = radius;\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.CIRC\n         * @see PIXI.SHAPES\n         */\n        this.type = exports.SHAPES.CIRC;\n    }\n    /**\n     * Creates a clone of this Circle instance\n     *\n     * @return {PIXI.Circle} a copy of the Circle\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.x, this.y, this.radius);\n    };\n    /**\n     * Checks whether the x and y coordinates given are contained within this circle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Circle\n     */\n    Circle.prototype.contains = function (x, y) {\n        if (this.radius <= 0) {\n            return false;\n        }\n        var r2 = this.radius * this.radius;\n        var dx = (this.x - x);\n        var dy = (this.y - y);\n        dx *= dx;\n        dy *= dy;\n        return (dx + dy <= r2);\n    };\n    /**\n    * Returns the framing rectangle of the circle as a Rectangle object\n    *\n    * @return {PIXI.Rectangle} the framing rectangle\n    */\n    Circle.prototype.getBounds = function () {\n        return new Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    };\n    Circle.prototype.toString = function () {\n        return \"[@pixi/math:Circle x=\" + this.x + \" y=\" + this.y + \" radius=\" + this.radius + \"]\";\n    };\n    return Circle;\n}());\n\n/**\n * The Ellipse object is used to help draw graphics and can also be used to specify a hit area for displayObjects.\n *\n * @class\n * @memberof PIXI\n */\nvar Ellipse = /** @class */ (function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this ellipse\n     * @param {number} [y=0] - The Y coordinate of the center of this ellipse\n     * @param {number} [halfWidth=0] - The half width of this ellipse\n     * @param {number} [halfHeight=0] - The half height of this ellipse\n     */\n    function Ellipse(x, y, halfWidth, halfHeight) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (halfWidth === void 0) { halfWidth = 0; }\n        if (halfHeight === void 0) { halfHeight = 0; }\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = halfWidth;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = halfHeight;\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.ELIP\n         * @see PIXI.SHAPES\n         */\n        this.type = exports.SHAPES.ELIP;\n    }\n    /**\n     * Creates a clone of this Ellipse instance\n     *\n     * @return {PIXI.Ellipse} a copy of the ellipse\n     */\n    Ellipse.prototype.clone = function () {\n        return new Ellipse(this.x, this.y, this.width, this.height);\n    };\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coords are within this ellipse\n     */\n    Ellipse.prototype.contains = function (x, y) {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n        // normalize the coords to an ellipse with center 0,0\n        var normx = ((x - this.x) / this.width);\n        var normy = ((y - this.y) / this.height);\n        normx *= normx;\n        normy *= normy;\n        return (normx + normy <= 1);\n    };\n    /**\n     * Returns the framing rectangle of the ellipse as a Rectangle object\n     *\n     * @return {PIXI.Rectangle} the framing rectangle\n     */\n    Ellipse.prototype.getBounds = function () {\n        return new Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n    };\n    Ellipse.prototype.toString = function () {\n        return \"[@pixi/math:Ellipse x=\" + this.x + \" y=\" + this.y + \" width=\" + this.width + \" height=\" + this.height + \"]\";\n    };\n    return Ellipse;\n}());\n\n/**\n * A class to define a shape via user defined coordinates.\n *\n * @class\n * @memberof PIXI\n */\nvar Polygon = /** @class */ (function () {\n    /**\n     * @param {PIXI.IPointData[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    function Polygon() {\n        var arguments$1 = arguments;\n\n        var points = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            points[_i] = arguments$1[_i];\n        }\n        var flat = Array.isArray(points[0]) ? points[0] : points;\n        // if this is an array of points, convert it to a flat array of numbers\n        if (typeof flat[0] !== 'number') {\n            var p = [];\n            for (var i = 0, il = flat.length; i < il; i++) {\n                p.push(flat[i].x, flat[i].y);\n            }\n            flat = p;\n        }\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = flat;\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.POLY\n         * @see PIXI.SHAPES\n         */\n        this.type = exports.SHAPES.POLY;\n        /**\n         * `false` after moveTo, `true` after `closePath`. In all other cases it is `true`.\n         * @member {boolean}\n         * @default true\n         */\n        this.closeStroke = true;\n    }\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */\n    Polygon.prototype.clone = function () {\n        var points = this.points.slice();\n        var polygon = new Polygon(points);\n        polygon.closeStroke = this.closeStroke;\n        return polygon;\n    };\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n    Polygon.prototype.contains = function (x, y) {\n        var inside = false;\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        var length = this.points.length / 2;\n        for (var i = 0, j = length - 1; i < length; j = i++) {\n            var xi = this.points[i * 2];\n            var yi = this.points[(i * 2) + 1];\n            var xj = this.points[j * 2];\n            var yj = this.points[(j * 2) + 1];\n            var intersect = ((yi > y) !== (yj > y)) && (x < ((xj - xi) * ((y - yi) / (yj - yi))) + xi);\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        return inside;\n    };\n    Polygon.prototype.toString = function () {\n        return \"[@pixi/math:Polygon\"\n            + (\"closeStroke=\" + this.closeStroke)\n            + (\"points=\" + this.points.reduce(function (pointsDesc, currentPoint) { return pointsDesc + \", \" + currentPoint; }, '') + \"]\");\n    };\n    return Polygon;\n}());\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n *\n * @class\n * @memberof PIXI\n */\nvar RoundedRectangle = /** @class */ (function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [width=0] - The overall width of this rounded rectangle\n     * @param {number} [height=0] - The overall height of this rounded rectangle\n     * @param {number} [radius=20] - Controls the radius of the rounded corners\n     */\n    function RoundedRectangle(x, y, width, height, radius) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        if (radius === void 0) { radius = 20; }\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n        /**\n         * @member {number}\n         * @default 20\n         */\n        this.radius = radius;\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readonly\n         * @default PIXI.SHAPES.RREC\n         * @see PIXI.SHAPES\n         */\n        this.type = exports.SHAPES.RREC;\n    }\n    /**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {PIXI.RoundedRectangle} a copy of the rounded rectangle\n     */\n    RoundedRectangle.prototype.clone = function () {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    };\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n     */\n    RoundedRectangle.prototype.contains = function (x, y) {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width) {\n            if (y >= this.y && y <= this.y + this.height) {\n                if ((y >= this.y + this.radius && y <= this.y + this.height - this.radius)\n                    || (x >= this.x + this.radius && x <= this.x + this.width - this.radius)) {\n                    return true;\n                }\n                var dx = x - (this.x + this.radius);\n                var dy = y - (this.y + this.radius);\n                var radius2 = this.radius * this.radius;\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.width - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n                dy = y - (this.y + this.height - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    RoundedRectangle.prototype.toString = function () {\n        return \"[@pixi/math:RoundedRectangle x=\" + this.x + \" y=\" + this.y\n            + (\"width=\" + this.width + \" height=\" + this.height + \" radius=\" + this.radius + \"]\");\n    };\n    return RoundedRectangle;\n}());\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where `x` represents\n * the position on the horizontal axis and `y` represents the position on the vertical axis\n *\n * @class\n * @memberof PIXI\n * @implements IPoint\n */\nvar Point = /** @class */ (function () {\n    /** Creates a new `Point`\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    function Point(x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        /** Position of the point on the x axis */\n        this.x = 0;\n        /** Position of the point on the y axis */\n        this.y = 0;\n        this.x = x;\n        this.y = y;\n    }\n    /** Creates a clone of this point\n     * @returns A clone of this point\n     */\n    Point.prototype.clone = function () {\n        return new Point(this.x, this.y);\n    };\n    /**\n     * Copies `x` and `y` from the given point into this point\n     *\n     * @param p - The point to copy from\n     * @returns The point instance itself\n     */\n    Point.prototype.copyFrom = function (p) {\n        this.set(p.x, p.y);\n        return this;\n    };\n    /**\n     * Copies this point's x and y into the given point (`p`).\n     *\n     * @param p - The point to copy to. Can be any of type that is or extends `IPointData`\n     * @returns The point (`p`) with values updated\n     */\n    Point.prototype.copyTo = function (p) {\n        p.set(this.x, this.y);\n        return p;\n    };\n    /**\n     * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n     *\n     * @param p - The point to check\n     * @returns Returns `true` if both `x` and `y` are equal\n     */\n    Point.prototype.equals = function (p) {\n        return (p.x === this.x) && (p.y === this.y);\n    };\n    /**\n     * Sets the point to a new `x` and `y` position.\n     * If `y` is omitted, both `x` and `y` will be set to `x`.\n     *\n     * @param {number} [x=0] - position of the point on the `x` axis\n     * @param {number} [y=x] - position of the point on the `y` axis\n     * @returns The point instance itself\n     */\n    Point.prototype.set = function (x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = x; }\n        this.x = x;\n        this.y = y;\n        return this;\n    };\n    Point.prototype.toString = function () {\n        return \"[@pixi/math:Point x=\" + this.x + \" y=\" + this.y + \"]\";\n    };\n    return Point;\n}());\n\n/**\n * The ObservablePoint object represents a location in a two-dimensional coordinate system, where `x` represents\n * the position on the horizontal axis and `y` represents the position on the vertical axis.\n *\n * An `ObservablePoint` is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n * @implements IPoint\n */\nvar ObservablePoint = /** @class */ (function () {\n    /**\n     * Creates a new `ObservablePoint`\n     *\n     * @param cb - callback function triggered when `x` and/or `y` are changed\n     * @param scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n    */\n    function ObservablePoint(cb, scope, x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        this._x = x;\n        this._y = y;\n        this.cb = cb;\n        this.scope = scope;\n    }\n    /**\n     * Creates a clone of this point.\n     * The callback and scope params can be overridden otherwise they will default\n     * to the clone object's values.\n     *\n     * @override\n     * @param cb - The callback function triggered when `x` and/or `y` are changed\n     * @param scope - The owner of the callback\n     * @return a copy of this observable point\n     */\n    ObservablePoint.prototype.clone = function (cb, scope) {\n        if (cb === void 0) { cb = this.cb; }\n        if (scope === void 0) { scope = this.scope; }\n        return new ObservablePoint(cb, scope, this._x, this._y);\n    };\n    /**\n     * Sets the point to a new `x` and `y` position.\n     * If `y` is omitted, both `x` and `y` will be set to `x`.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=x] - position of the point on the y axis\n     * @returns The observable point instance itself\n     */\n    ObservablePoint.prototype.set = function (x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = x; }\n        if (this._x !== x || this._y !== y) {\n            this._x = x;\n            this._y = y;\n            this.cb.call(this.scope);\n        }\n        return this;\n    };\n    /**\n     * Copies x and y from the given point (`p`)\n     *\n     * @param p - The point to copy from. Can be any of type that is or extends `IPointData`\n     * @returns The observable point instance itself\n     */\n    ObservablePoint.prototype.copyFrom = function (p) {\n        if (this._x !== p.x || this._y !== p.y) {\n            this._x = p.x;\n            this._y = p.y;\n            this.cb.call(this.scope);\n        }\n        return this;\n    };\n    /**\n     * Copies this point's x and y into that of the given point (`p`)\n     *\n     * @param p - The point to copy to. Can be any of type that is or extends `IPointData`\n     * @returns The point (`p`) with values updated\n     */\n    ObservablePoint.prototype.copyTo = function (p) {\n        p.set(this._x, this._y);\n        return p;\n    };\n    /**\n     * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n     *\n     * @param p - The point to check\n     * @returns Returns `true` if both `x` and `y` are equal\n     */\n    ObservablePoint.prototype.equals = function (p) {\n        return (p.x === this._x) && (p.y === this._y);\n    };\n    ObservablePoint.prototype.toString = function () {\n        return \"[@pixi/math:ObservablePoint x=\" + 0 + \" y=\" + 0 + \" scope=\" + this.scope + \"]\";\n    };\n    Object.defineProperty(ObservablePoint.prototype, \"x\", {\n        /** Position of the observable point on the x axis\n         * @type {number}\n         */\n        get: function () {\n            return this._x;\n        },\n        set: function (value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.cb.call(this.scope);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObservablePoint.prototype, \"y\", {\n        /** Position of the observable point on the y axis\n         * @type {number}\n         */\n        get: function () {\n            return this._y;\n        },\n        set: function (value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.cb.call(this.scope);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ObservablePoint;\n}());\n\n/**\n * The PixiJS Matrix as a class makes it a lot faster.\n *\n * Here is a representation of it:\n * ```js\n * | a | c | tx|\n * | b | d | ty|\n * | 0 | 0 | 1 |\n * ```\n * @class\n * @memberof PIXI\n */\nvar Matrix = /** @class */ (function () {\n    /**\n     * @param {number} [a=1] - x scale\n     * @param {number} [b=0] - y skew\n     * @param {number} [c=0] - x skew\n     * @param {number} [d=1] - y scale\n     * @param {number} [tx=0] - x translation\n     * @param {number} [ty=0] - y translation\n     */\n    function Matrix(a, b, c, d, tx, ty) {\n        if (a === void 0) { a = 1; }\n        if (b === void 0) { b = 0; }\n        if (c === void 0) { c = 0; }\n        if (d === void 0) { d = 1; }\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        this.array = null;\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.a = a;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.b = b;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.c = c;\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.d = d;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.tx = tx;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.ty = ty;\n    }\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     *\n     * @param {number[]} array - The array that the matrix will be populated from.\n     */\n    Matrix.prototype.fromArray = function (array) {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    };\n    /**\n     * sets the matrix properties\n     *\n     * @param {number} a - Matrix component\n     * @param {number} b - Matrix component\n     * @param {number} c - Matrix component\n     * @param {number} d - Matrix component\n     * @param {number} tx - Matrix component\n     * @param {number} ty - Matrix component\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.set = function (a, b, c, d, tx, ty) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n        return this;\n    };\n    /**\n     * Creates an array from the current Matrix object.\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */\n    Matrix.prototype.toArray = function (transpose, out) {\n        if (!this.array) {\n            this.array = new Float32Array(9);\n        }\n        var array = out || this.array;\n        if (transpose) {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        }\n        else {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n        return array;\n    };\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     *\n     * @param {PIXI.IPointData} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, transformed through this matrix\n     */\n    Matrix.prototype.apply = function (pos, newPos) {\n        newPos = (newPos || new Point());\n        var x = pos.x;\n        var y = pos.y;\n        newPos.x = (this.a * x) + (this.c * y) + this.tx;\n        newPos.y = (this.b * x) + (this.d * y) + this.ty;\n        return newPos;\n    };\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     *\n     * @param {PIXI.IPointData} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, inverse-transformed through this matrix\n     */\n    Matrix.prototype.applyInverse = function (pos, newPos) {\n        newPos = (newPos || new Point());\n        var id = 1 / ((this.a * this.d) + (this.c * -this.b));\n        var x = pos.x;\n        var y = pos.y;\n        newPos.x = (this.d * id * x) + (-this.c * id * y) + (((this.ty * this.c) - (this.tx * this.d)) * id);\n        newPos.y = (this.a * id * y) + (-this.b * id * x) + (((-this.ty * this.a) + (this.tx * this.b)) * id);\n        return newPos;\n    };\n    /**\n     * Translates the matrix on the x and y.\n     *\n     * @param {number} x - How much to translate x by\n     * @param {number} y - How much to translate y by\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.translate = function (x, y) {\n        this.tx += x;\n        this.ty += y;\n        return this;\n    };\n    /**\n     * Applies a scale transformation to the matrix.\n     *\n     * @param {number} x - The amount to scale horizontally\n     * @param {number} y - The amount to scale vertically\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.scale = function (x, y) {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n        return this;\n    };\n    /**\n     * Applies a rotation transformation to the matrix.\n     *\n     * @param {number} angle - The angle in radians.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.rotate = function (angle) {\n        var cos = Math.cos(angle);\n        var sin = Math.sin(angle);\n        var a1 = this.a;\n        var c1 = this.c;\n        var tx1 = this.tx;\n        this.a = (a1 * cos) - (this.b * sin);\n        this.b = (a1 * sin) + (this.b * cos);\n        this.c = (c1 * cos) - (this.d * sin);\n        this.d = (c1 * sin) + (this.d * cos);\n        this.tx = (tx1 * cos) - (this.ty * sin);\n        this.ty = (tx1 * sin) + (this.ty * cos);\n        return this;\n    };\n    /**\n     * Appends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to append.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.append = function (matrix) {\n        var a1 = this.a;\n        var b1 = this.b;\n        var c1 = this.c;\n        var d1 = this.d;\n        this.a = (matrix.a * a1) + (matrix.b * c1);\n        this.b = (matrix.a * b1) + (matrix.b * d1);\n        this.c = (matrix.c * a1) + (matrix.d * c1);\n        this.d = (matrix.c * b1) + (matrix.d * d1);\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n        return this;\n    };\n    /**\n     * Sets the matrix based on all the available properties\n     *\n     * @param {number} x - Position on the x axis\n     * @param {number} y - Position on the y axis\n     * @param {number} pivotX - Pivot on the x axis\n     * @param {number} pivotY - Pivot on the y axis\n     * @param {number} scaleX - Scale on the x axis\n     * @param {number} scaleY - Scale on the y axis\n     * @param {number} rotation - Rotation in radians\n     * @param {number} skewX - Skew on the x axis\n     * @param {number} skewY - Skew on the y axis\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.setTransform = function (x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY) {\n        this.a = Math.cos(rotation + skewY) * scaleX;\n        this.b = Math.sin(rotation + skewY) * scaleX;\n        this.c = -Math.sin(rotation - skewX) * scaleY;\n        this.d = Math.cos(rotation - skewX) * scaleY;\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n        return this;\n    };\n    /**\n     * Prepends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to prepend\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.prepend = function (matrix) {\n        var tx1 = this.tx;\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n            var a1 = this.a;\n            var c1 = this.c;\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\n        }\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n        return this;\n    };\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     *\n     * @param {PIXI.Transform} transform - The transform to apply the properties to.\n     * @return {PIXI.Transform} The transform with the newly applied properties\n     */\n    Matrix.prototype.decompose = function (transform) {\n        // sort out rotation / skew..\n        var a = this.a;\n        var b = this.b;\n        var c = this.c;\n        var d = this.d;\n        var pivot = transform.pivot;\n        var skewX = -Math.atan2(-c, d);\n        var skewY = Math.atan2(b, a);\n        var delta = Math.abs(skewX + skewY);\n        if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001) {\n            transform.rotation = skewY;\n            transform.skew.x = transform.skew.y = 0;\n        }\n        else {\n            transform.rotation = 0;\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n        // next set scale\n        transform.scale.x = Math.sqrt((a * a) + (b * b));\n        transform.scale.y = Math.sqrt((c * c) + (d * d));\n        // next set position\n        transform.position.x = this.tx + ((pivot.x * a) + (pivot.y * c));\n        transform.position.y = this.ty + ((pivot.x * b) + (pivot.y * d));\n        return transform;\n    };\n    /**\n     * Inverts this matrix\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.invert = function () {\n        var a1 = this.a;\n        var b1 = this.b;\n        var c1 = this.c;\n        var d1 = this.d;\n        var tx1 = this.tx;\n        var n = (a1 * d1) - (b1 * c1);\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = ((c1 * this.ty) - (d1 * tx1)) / n;\n        this.ty = -((a1 * this.ty) - (b1 * tx1)) / n;\n        return this;\n    };\n    /**\n     * Resets this Matrix to an identity (default) matrix.\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.identity = function () {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n        return this;\n    };\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     *\n     * @return {PIXI.Matrix} A copy of this matrix. Good for chaining method calls.\n     */\n    Matrix.prototype.clone = function () {\n        var matrix = new Matrix();\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n        return matrix;\n    };\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy to.\n     * @return {PIXI.Matrix} The matrix given in parameter with its values updated.\n     */\n    Matrix.prototype.copyTo = function (matrix) {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n        return matrix;\n    };\n    /**\n     * Changes the values of the matrix to be the same as the ones in given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy from.\n     * @return {PIXI.Matrix} this\n     */\n    Matrix.prototype.copyFrom = function (matrix) {\n        this.a = matrix.a;\n        this.b = matrix.b;\n        this.c = matrix.c;\n        this.d = matrix.d;\n        this.tx = matrix.tx;\n        this.ty = matrix.ty;\n        return this;\n    };\n    Matrix.prototype.toString = function () {\n        return \"[@pixi/math:Matrix a=\" + this.a + \" b=\" + this.b + \" c=\" + this.c + \" d=\" + this.d + \" tx=\" + this.tx + \" ty=\" + this.ty + \"]\";\n    };\n    Object.defineProperty(Matrix, \"IDENTITY\", {\n        /**\n         * A default (identity) matrix\n         *\n         * @static\n         * @const\n         * @member {PIXI.Matrix}\n         */\n        get: function () {\n            return new Matrix();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Matrix, \"TEMP_MATRIX\", {\n        /**\n         * A temp matrix\n         *\n         * @static\n         * @const\n         * @member {PIXI.Matrix}\n         */\n        get: function () {\n            return new Matrix();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Matrix;\n}());\n\n// Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group\n/*\n * Transform matrix for operation n is:\n * | ux | vx |\n * | uy | vy |\n */\nvar ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nvar uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nvar vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nvar vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\n/**\n * [Cayley Table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n * for the composition of each rotation in the dihederal group D8.\n *\n * @type number[][]\n * @private\n */\nvar rotationCayley = [];\n/**\n * Matrices for each `GD8Symmetry` rotation.\n *\n * @type Matrix[]\n * @private\n */\nvar rotationMatrices = [];\n/*\n * Alias for {@code Math.sign}.\n */\nvar signum = Math.sign;\n/*\n * Initializes `rotationCayley` and `rotationMatrices`. It is called\n * only once below.\n */\nfunction init() {\n    for (var i = 0; i < 16; i++) {\n        var row = [];\n        rotationCayley.push(row);\n        for (var j = 0; j < 16; j++) {\n            /* Multiplies rotation matrices i and j. */\n            var _ux = signum((ux[i] * ux[j]) + (vx[i] * uy[j]));\n            var _uy = signum((uy[i] * ux[j]) + (vy[i] * uy[j]));\n            var _vx = signum((ux[i] * vx[j]) + (vx[i] * vy[j]));\n            var _vy = signum((uy[i] * vx[j]) + (vy[i] * vy[j]));\n            /* Finds rotation matrix matching the product and pushes it. */\n            for (var k = 0; k < 16; k++) {\n                if (ux[k] === _ux && uy[k] === _uy\n                    && vx[k] === _vx && vy[k] === _vy) {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n    for (var i = 0; i < 16; i++) {\n        var mat = new Matrix();\n        mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n        rotationMatrices.push(mat);\n    }\n}\ninit();\n/**\n * @memberof PIXI\n * @typedef {number} GD8Symmetry\n * @see PIXI.groupD8\n */\n/**\n * Implements the dihedral group D8, which is similar to\n * [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html};\n * D8 is the same but with diagonals, and it is used for texture\n * rotations.\n *\n * The directions the U- and V- axes after rotation\n * of an angle of `a: GD8Constant` are the vectors `(uX(a), uY(a))`\n * and `(vX(a), vY(a))`. These aren't necessarily unit vectors.\n *\n * **Origin:**<br>\n *  This is the small part of gameofbombs.com portal system. It works.\n *\n * @see PIXI.groupD8.E\n * @see PIXI.groupD8.SE\n * @see PIXI.groupD8.S\n * @see PIXI.groupD8.SW\n * @see PIXI.groupD8.W\n * @see PIXI.groupD8.NW\n * @see PIXI.groupD8.N\n * @see PIXI.groupD8.NE\n * @author Ivan @ivanpopelyshev\n * @namespace PIXI.groupD8\n * @memberof PIXI\n */\nvar groupD8 = {\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 0\u00b0       | East      |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    E: 0,\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 45\u00b0\u21bb     | Southeast |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    SE: 1,\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 90\u00b0\u21bb     | South     |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    S: 2,\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 135\u00b0\u21bb    | Southwest |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    SW: 3,\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 180\u00b0     | West      |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    W: 4,\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -135\u00b0/225\u00b0\u21bb | Northwest    |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    NW: 5,\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -90\u00b0/270\u00b0\u21bb  | North        |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    N: 6,\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -45\u00b0/315\u00b0\u21bb  | Northeast    |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    NE: 7,\n    /**\n     * Reflection about Y-axis.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    MIRROR_VERTICAL: 8,\n    /**\n     * Reflection about the main diagonal.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    MAIN_DIAGONAL: 10,\n    /**\n     * Reflection about X-axis.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    MIRROR_HORIZONTAL: 12,\n    /**\n     * Reflection about reverse diagonal.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    REVERSE_DIAGONAL: 14,\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The X-component of the U-axis\n     *    after rotating the axes.\n     */\n    uX: function (ind) { return ux[ind]; },\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The Y-component of the U-axis\n     *    after rotating the axes.\n     */\n    uY: function (ind) { return uy[ind]; },\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The X-component of the V-axis\n     *    after rotating the axes.\n     */\n    vX: function (ind) { return vx[ind]; },\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The Y-component of the V-axis\n     *    after rotating the axes.\n     */\n    vY: function (ind) { return vy[ind]; },\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotation - symmetry whose opposite\n     *   is needed. Only rotations have opposite symmetries while\n     *   reflections don't.\n     * @return {PIXI.GD8Symmetry} The opposite symmetry of `rotation`\n     */\n    inv: function (rotation) {\n        if (rotation & 8) // true only if between 8 & 15 (reflections)\n         {\n            return rotation & 15; // or rotation % 16\n        }\n        return (-rotation) & 7; // or (8 - rotation) % 8\n    },\n    /**\n     * Composes the two D8 operations.\n     *\n     * Taking `^` as reflection:\n     *\n     * |       | E=0 | S=2 | W=4 | N=6 | E^=8 | S^=10 | W^=12 | N^=14 |\n     * |-------|-----|-----|-----|-----|------|-------|-------|-------|\n     * | E=0   | E   | S   | W   | N   | E^   | S^    | W^    | N^    |\n     * | S=2   | S   | W   | N   | E   | S^   | W^    | N^    | E^    |\n     * | W=4   | W   | N   | E   | S   | W^   | N^    | E^    | S^    |\n     * | N=6   | N   | E   | S   | W   | N^   | E^    | S^    | W^    |\n     * | E^=8  | E^  | N^  | W^  | S^  | E    | N     | W     | S     |\n     * | S^=10 | S^  | E^  | N^  | W^  | S    | E     | N     | W     |\n     * | W^=12 | W^  | S^  | E^  | N^  | W    | S     | E     | N     |\n     * | N^=14 | N^  | W^  | S^  | E^  | N    | W     | S     | E     |\n     *\n     * [This is a Cayley table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotationSecond - Second operation, which\n     *   is the row in the above cayley table.\n     * @param {PIXI.GD8Symmetry} rotationFirst - First operation, which\n     *   is the column in the above cayley table.\n     * @return {PIXI.GD8Symmetry} Composed operation\n     */\n    add: function (rotationSecond, rotationFirst) { return (rotationCayley[rotationSecond][rotationFirst]); },\n    /**\n     * Reverse of `add`.\n     *\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotationSecond - Second operation\n     * @param {PIXI.GD8Symmetry} rotationFirst - First operation\n     * @return {PIXI.GD8Symmetry} Result\n     */\n    sub: function (rotationSecond, rotationFirst) { return (rotationCayley[rotationSecond][groupD8.inv(rotationFirst)]); },\n    /**\n     * Adds 180 degrees to rotation, which is a commutative\n     * operation.\n     *\n     * @memberof PIXI.groupD8\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} Rotated number\n     */\n    rotate180: function (rotation) { return rotation ^ 4; },\n    /**\n     * Checks if the rotation angle is vertical, i.e. south\n     * or north. It doesn't work for reflections.\n     *\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     */\n    isVertical: function (rotation) { return (rotation & 3) === 2; },\n    /**\n     * Approximates the vector `V(dx,dy)` into one of the\n     * eight directions provided by `groupD8`.\n     *\n     * @memberof PIXI.groupD8\n     * @param {number} dx - X-component of the vector\n     * @param {number} dy - Y-component of the vector\n     * @return {PIXI.GD8Symmetry} Approximation of the vector into\n     *  one of the eight symmetries.\n     */\n    byDirection: function (dx, dy) {\n        if (Math.abs(dx) * 2 <= Math.abs(dy)) {\n            if (dy >= 0) {\n                return groupD8.S;\n            }\n            return groupD8.N;\n        }\n        else if (Math.abs(dy) * 2 <= Math.abs(dx)) {\n            if (dx > 0) {\n                return groupD8.E;\n            }\n            return groupD8.W;\n        }\n        else if (dy > 0) {\n            if (dx > 0) {\n                return groupD8.SE;\n            }\n            return groupD8.SW;\n        }\n        else if (dx > 0) {\n            return groupD8.NE;\n        }\n        return groupD8.NW;\n    },\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @memberof PIXI.groupD8\n     * @param {PIXI.Matrix} matrix - sprite world matrix\n     * @param {PIXI.GD8Symmetry} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: function (matrix, rotation, tx, ty) {\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        var mat = rotationMatrices[groupD8.inv(rotation)];\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    },\n};\n\n/**\n * Transform that takes care about its versions\n *\n * @class\n * @memberof PIXI\n */\nvar Transform = /** @class */ (function () {\n    function Transform() {\n        /**\n         * The world transformation matrix.\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.worldTransform = new Matrix();\n        /**\n         * The local transformation matrix.\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.localTransform = new Matrix();\n        /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.position = new ObservablePoint(this.onChange, this, 0, 0);\n        /**\n         * The scale factor of the object.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.scale = new ObservablePoint(this.onChange, this, 1, 1);\n        /**\n         * The pivot point of the displayObject that it rotates around.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.pivot = new ObservablePoint(this.onChange, this, 0, 0);\n        /**\n         * The skew amount, on the x and y axis.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n        /**\n         * The rotation amount.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._rotation = 0;\n        /**\n         * The X-coordinate value of the normalized local X axis,\n         * the first column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._cx = 1;\n        /**\n         * The Y-coordinate value of the normalized local X axis,\n         * the first column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._sx = 0;\n        /**\n         * The X-coordinate value of the normalized local Y axis,\n         * the second column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._cy = 0;\n        /**\n         * The Y-coordinate value of the normalized local Y axis,\n         * the second column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._sy = 1;\n        /**\n         * The locally unique ID of the local transform.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._localID = 0;\n        /**\n         * The locally unique ID of the local transform\n         * used to calculate the current local transformation matrix.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._currentLocalID = 0;\n        /**\n         * The locally unique ID of the world transform.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._worldID = 0;\n        /**\n         * The locally unique ID of the parent's world transform\n         * used to calculate the current world transformation matrix.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._parentID = 0;\n    }\n    /**\n     * Called when a value changes.\n     *\n     * @protected\n     */\n    Transform.prototype.onChange = function () {\n        this._localID++;\n    };\n    /**\n     * Called when the skew or the rotation changes.\n     *\n     * @protected\n     */\n    Transform.prototype.updateSkew = function () {\n        this._cx = Math.cos(this._rotation + this.skew.y);\n        this._sx = Math.sin(this._rotation + this.skew.y);\n        this._cy = -Math.sin(this._rotation - this.skew.x); // cos, added PI/2\n        this._sy = Math.cos(this._rotation - this.skew.x); // sin, added PI/2\n        this._localID++;\n    };\n    Transform.prototype.toString = function () {\n        return \"[@pixi/math:Transform \"\n            + (\"position=(\" + this.position.x + \", \" + this.position.y + \") \")\n            + (\"rotation=\" + this.rotation + \" \")\n            + (\"scale=(\" + this.scale.x + \", \" + this.scale.y + \") \")\n            + (\"skew=(\" + this.skew.x + \", \" + this.skew.y + \") \")\n            + \"]\";\n    };\n    /**\n     * Updates the local transformation matrix.\n     */\n    Transform.prototype.updateLocalTransform = function () {\n        var lt = this.localTransform;\n        if (this._localID !== this._currentLocalID) {\n            // get the matrix values of the displayobject based on its transform properties..\n            lt.a = this._cx * this.scale.x;\n            lt.b = this._sx * this.scale.x;\n            lt.c = this._cy * this.scale.y;\n            lt.d = this._sy * this.scale.y;\n            lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\n            lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\n            this._currentLocalID = this._localID;\n            // force an update..\n            this._parentID = -1;\n        }\n    };\n    /**\n     * Updates the local and the world transformation matrices.\n     *\n     * @param {PIXI.Transform} parentTransform - The parent transform\n     */\n    Transform.prototype.updateTransform = function (parentTransform) {\n        var lt = this.localTransform;\n        if (this._localID !== this._currentLocalID) {\n            // get the matrix values of the displayobject based on its transform properties..\n            lt.a = this._cx * this.scale.x;\n            lt.b = this._sx * this.scale.x;\n            lt.c = this._cy * this.scale.y;\n            lt.d = this._sy * this.scale.y;\n            lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\n            lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\n            this._currentLocalID = this._localID;\n            // force an update..\n            this._parentID = -1;\n        }\n        if (this._parentID !== parentTransform._worldID) {\n            // concat the parent matrix with the objects transform.\n            var pt = parentTransform.worldTransform;\n            var wt = this.worldTransform;\n            wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n            wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n            wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n            wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n            wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n            wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n            this._parentID = parentTransform._worldID;\n            // update the id of the transform..\n            this._worldID++;\n        }\n    };\n    /**\n     * Decomposes a matrix and sets the transforms properties based on it.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to decompose\n     */\n    Transform.prototype.setFromMatrix = function (matrix) {\n        matrix.decompose(this);\n        this._localID++;\n    };\n    Object.defineProperty(Transform.prototype, \"rotation\", {\n        /**\n         * The rotation of the object in radians.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._rotation;\n        },\n        set: function (value) {\n            if (this._rotation !== value) {\n                this._rotation = value;\n                this.updateSkew();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * A default (identity) transform\n     *\n     * @static\n     * @constant\n     * @member {PIXI.Transform}\n     */\n    Transform.IDENTITY = new Transform();\n    return Transform;\n}());\n\nexports.Circle = Circle;\nexports.DEG_TO_RAD = DEG_TO_RAD;\nexports.Ellipse = Ellipse;\nexports.Matrix = Matrix;\nexports.ObservablePoint = ObservablePoint;\nexports.PI_2 = PI_2;\nexports.Point = Point;\nexports.Polygon = Polygon;\nexports.RAD_TO_DEG = RAD_TO_DEG;\nexports.Rectangle = Rectangle;\nexports.RoundedRectangle = RoundedRectangle;\nexports.Transform = Transform;\nexports.groupD8 = groupD8;\n//# sourceMappingURL=math.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","PI_2","Math","PI","RAD_TO_DEG","DEG_TO_RAD","SHAPES","Rectangle","x","y","width","height","Number","type","RECT","prototype","get","enumerable","configurable","clone","Rectangle.prototype.clone","copyFrom","Rectangle.prototype.copyFrom","rectangle","copyTo","Rectangle.prototype.copyTo","contains","Rectangle.prototype.contains","pad","Rectangle.prototype.pad","paddingX","paddingY","fit","Rectangle.prototype.fit","x1","max","x2","min","y1","y2","ceil","Rectangle.prototype.ceil","resolution","eps","floor","enlarge","Rectangle.prototype.enlarge","toString","Rectangle.prototype.toString","Circle","radius","CIRC","Circle.prototype.clone","Circle.prototype.contains","dx","dy","getBounds","Circle.prototype.getBounds","Circle.prototype.toString","Ellipse","halfWidth","halfHeight","ELIP","Ellipse.prototype.clone","Ellipse.prototype.contains","normx","normy","Ellipse.prototype.getBounds","Ellipse.prototype.toString","Polygon","arguments$1","arguments","points","_i","length","flat","Array","isArray","p","i","il","push","POLY","closeStroke","Polygon.prototype.clone","slice","polygon","Polygon.prototype.contains","inside","j","xi","yi","xj","yj","Polygon.prototype.toString","reduce","pointsDesc","currentPoint","RoundedRectangle","RREC","RoundedRectangle.prototype.clone","RoundedRectangle.prototype.contains","radius2","RoundedRectangle.prototype.toString","Point","Point.prototype.clone","Point.prototype.copyFrom","set","Point.prototype.copyTo","equals","Point.prototype.equals","Point.prototype.set","Point.prototype.toString","ObservablePoint","cb","scope","_x","_y","ObservablePoint.prototype.clone","ObservablePoint.prototype.set","call","ObservablePoint.prototype.copyFrom","ObservablePoint.prototype.copyTo","ObservablePoint.prototype.equals","ObservablePoint.prototype.toString","Matrix","a","b","c","d","tx","ty","array","fromArray","Matrix.prototype.fromArray","Matrix.prototype.set","toArray","Matrix.prototype.toArray","transpose","out","Float32Array","apply","Matrix.prototype.apply","pos","newPos","applyInverse","Matrix.prototype.applyInverse","id","translate","Matrix.prototype.translate","scale","Matrix.prototype.scale","rotate","Matrix.prototype.rotate","angle","cos","sin","a1","c1","tx1","append","Matrix.prototype.append","matrix","b1","d1","setTransform","Matrix.prototype.setTransform","pivotX","pivotY","scaleX","scaleY","rotation","skewX","skewY","prepend","Matrix.prototype.prepend","decompose","Matrix.prototype.decompose","transform","pivot","atan2","delta","abs","skew","sqrt","position","invert","Matrix.prototype.invert","n","identity","Matrix.prototype.identity","Matrix.prototype.clone","Matrix.prototype.copyTo","Matrix.prototype.copyFrom","Matrix.prototype.toString","ux","uy","vx","vy","rotationCayley","rotationMatrices","signum","sign","init","row","_ux","_uy","_vx","_vy","k","mat","groupD8","E","SE","S","SW","W","NW","N","NE","MIRROR_VERTICAL","MAIN_DIAGONAL","MIRROR_HORIZONTAL","REVERSE_DIAGONAL","uX","ind","uY","vX","vY","inv","add","rotationSecond","rotationFirst","sub","rotate180","isVertical","byDirection","matrixAppendRotationInv","Transform","worldTransform","localTransform","onChange","updateSkew","_rotation","_cx","_cy","_sx","_sy","_parentID","_worldID","_currentLocalID","_localID","Transform.prototype.onChange","Transform.prototype.updateSkew","Transform.prototype.toString","updateLocalTransform","Transform.prototype.updateLocalTransform","lt","updateTransform","Transform.prototype.updateTransform","parentTransform","pt","wt","setFromMatrix","Transform.prototype.setFromMatrix","IDENTITY"]
}
