shadow$provide.module$node_modules$$pixi$compressed_textures$dist$cjs$compressed_textures=function(global,require,module,exports){function __extends(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}function __awaiter(thisArg,_arguments,P,generator){return new (P||(P=Promise))(function(resolve$jscomp$0,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}
function step(result){result.done?resolve$jscomp$0(result.value):(new P(function(resolve){resolve(result.value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})}function __generator(thisArg,body){function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;
if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=0<t.length&&t[t.length-1])&&(6===op[0]||2===op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3]))_.label=op[1];else if(6===op[0]&&_.label<t[1])_.label=t[1],t=op;else if(t&&_.label<t[2])_.label=t[2],_.ops.push(op);else{t[2]&&_.ops.pop();_.trys.pop();continue}}op=body.call(thisArg,
_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},"function"===typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g}function registerCompressedTextures(url,resources,metadata){var result={textures:{},texture:null};if(!resources)return result;resources.map(function(resource){return new core.Texture(new core.BaseTexture(resource,
Object.assign({mipmap:constants.MIPMAP_MODES.OFF,alphaMode:constants.ALPHA_MODES.NO_PREMULTIPLIED_ALPHA},metadata)))}).forEach(function(texture,i){var baseTexture=texture.baseTexture,cacheID=url+"-"+(i+1);core.BaseTexture.addToCache(baseTexture,cacheID);core.Texture.addToCache(texture,cacheID);0===i&&(core.BaseTexture.addToCache(baseTexture,url),core.Texture.addToCache(texture,url),result.texture=texture);result.textures[cacheID]=texture});return result}Object.defineProperty(exports,"__esModule",
{value:!0});var core=require("module$node_modules$$pixi$core$dist$cjs$core"),loaders=require("module$node_modules$$pixi$loaders$dist$cjs$loaders"),utils=require("module$node_modules$$pixi$utils$dist$cjs$utils"),constants=require("module$node_modules$$pixi$constants$dist$cjs$constants"),_a$jscomp$0;(function(INTERNAL_FORMATS){INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT";
INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=
35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC";
INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2";
INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=
35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL";INTERNAL_FORMATS[INTERNAL_FORMATS.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL"})(exports.INTERNAL_FORMATS||
(exports.INTERNAL_FORMATS={}));var INTERNAL_FORMAT_TO_BYTES_PER_PIXEL=(_a$jscomp$0={},_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGB_S3TC_DXT1_EXT]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SRGB_S3TC_DXT1_EXT]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT]=
.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_R11_EAC]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SIGNED_R11_EAC]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RG11_EAC]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SIGNED_RG11_EAC]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGB8_ETC2]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA8_ETC2_EAC]=
1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SRGB8_ETC2]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGB_PVRTC_2BPPV1_IMG]=
.25,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG]=.25,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGB_ETC1_WEBGL]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGB_ATC_WEBGL]=.5,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL]=1,_a$jscomp$0[exports.INTERNAL_FORMATS.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL]=1,_a$jscomp$0),extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&
function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};global=function(_super){function BlobResource(source,options){void 0===options&&(options={width:1,height:1,autoLoad:!0});if("string"===typeof source){var origin=source;var data=new Uint8Array}else origin=null,data=source;source=_super.call(this,data,options)||this;source.origin=origin;source.buffer=data?new core.ViewableBuffer(data):null;source.origin&&!1!==options.autoLoad&&
source.load();data&&data.length&&(source.loaded=!0,source.onBlobLoaded(source.buffer.rawBinaryData));return source}__extends(BlobResource,_super);BlobResource.prototype.onBlobLoaded=function(_data){};BlobResource.prototype.load=function(){return __awaiter(this,void 0,Promise,function(){var response,blob,arrayBuffer;return __generator(this,function(_a){switch(_a.label){case 0:return[4,fetch(this.origin)];case 1:return response=_a.sent(),[4,response.blob()];case 2:return blob=_a.sent(),[4,blob.arrayBuffer()];
case 3:return arrayBuffer=_a.sent(),this.data=new Uint32Array(arrayBuffer),this.buffer=new core.ViewableBuffer(arrayBuffer),this.loaded=!0,this.onBlobLoaded(arrayBuffer),this.update(),[2,this]}})})};return BlobResource}(core.BufferResource);var CompressedTextureResource=function(_super){function CompressedTextureResource(source,options){var _this=_super.call(this,source,options)||this;_this.format=options.format;_this.levels=options.levels||1;_this._width=options.width;_this._height=options.height;
_this._extension=CompressedTextureResource._formatToExtension(_this.format);if(options.levelBuffers||_this.buffer)_this._levelBuffers=options.levelBuffers||CompressedTextureResource._createLevelBuffers(source instanceof Uint8Array?source:_this.buffer.uint8View,_this.format,_this.levels,4,4,_this.width,_this.height);return _this}__extends(CompressedTextureResource,_super);CompressedTextureResource.prototype.upload=function(renderer,_texture,_glTexture){_texture=renderer.gl;if(!renderer.context.extensions[this._extension])throw Error(this._extension+
" textures are not supported on the current machine");if(!this._levelBuffers)return!1;renderer=0;for(_glTexture=this.levels;renderer<_glTexture;renderer++){var _a=this._levelBuffers[renderer];_texture.compressedTexImage2D(_texture.TEXTURE_2D,_a.levelID,this.format,_a.levelWidth,_a.levelHeight,0,_a.levelBuffer)}return!0};CompressedTextureResource.prototype.onBlobLoaded=function(){this._levelBuffers=CompressedTextureResource._createLevelBuffers(this.buffer.uint8View,this.format,this.levels,4,4,this.width,
this.height)};CompressedTextureResource._formatToExtension=function(format){if(33776<=format&&33779>=format)return"s3tc";if(37488<=format&&37497>=format)return"etc";if(35840<=format&&35843>=format)return"pvrtc";if(36196<=format)return"etc1";if(35986<=format&&34798>=format)return"atc";throw Error("Invalid (compressed) texture format given!");};CompressedTextureResource._createLevelBuffers=function(buffer,format,levels,blockWidth,blockHeight,imageWidth,imageHeight){for(var buffers=Array(levels),offset=
buffer.byteOffset,alignedLevelWidth=imageWidth+blockWidth-1&~(blockWidth-1),alignedLevelHeight=imageHeight+blockHeight-1&~(blockHeight-1),levelSize=alignedLevelWidth*alignedLevelHeight*INTERNAL_FORMAT_TO_BYTES_PER_PIXEL[format],i=0;i<levels;i++)buffers[i]={levelID:i,levelWidth:1<levels?imageWidth:alignedLevelWidth,levelHeight:1<levels?imageHeight:alignedLevelHeight,levelBuffer:new Uint8Array(buffer.buffer,offset,levelSize)},offset+=levelSize,imageWidth=imageWidth>>1||1,imageHeight=imageHeight>>1||
1,alignedLevelWidth=imageWidth+blockWidth-1&~(blockWidth-1),alignedLevelHeight=imageHeight+blockHeight-1&~(blockHeight-1),levelSize=alignedLevelWidth*alignedLevelHeight*INTERNAL_FORMAT_TO_BYTES_PER_PIXEL[format];return buffers};return CompressedTextureResource}(global);require=function(){function CompressedTextureLoader(){}CompressedTextureLoader.use=function(resource,next){var data=resource.data;if(resource.type===loaders.LoaderResource.TYPE.JSON&&data&&data.cacheID&&data.textures){for(var textures=
data.textures,textureURL=void 0,fallbackURL=void 0,i=0,j=textures.length;i<j;i++){var texture=textures[i],url_1=texture.src;(texture=texture.format)||(fallbackURL=url_1);if(CompressedTextureLoader.textureFormats[texture]){textureURL=url_1;break}}(textureURL=textureURL||fallbackURL)?textureURL===resource.url?next(Error("URL of compressed texture cannot be the same as the manifest's URL")):(textures={crossOrigin:resource.crossOrigin,metadata:resource.metadata.imageMetadata,parentResource:resource},
textureURL=utils.url.resolve(resource.url.replace(this.baseUrl,""),textureURL),this.add(data.cacheID,textureURL,textures,function(res){if(res.error)next(res.error);else{var _a=res.texture;res=res.textures;Object.assign(resource,{texture:void 0===_a?null:_a,textures:void 0===res?{}:res});next()}})):next(Error("Cannot load compressed-textures in "+resource.url+", make sure you provide a fallback"))}else next()};CompressedTextureLoader.add=function(){var gl=document.createElement("canvas").getContext("webgl");
if(gl){gl={s3tc:gl.getExtension("WEBGL_compressed_texture_s3tc"),s3tc_sRGB:gl.getExtension("WEBGL_compressed_texture_s3tc_srgb"),etc:gl.getExtension("WEBGL_compressed_texture_etc"),etc1:gl.getExtension("WEBGL_compressed_texture_etc1"),pvrtc:gl.getExtension("WEBGL_compressed_texture_pvrtc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),atc:gl.getExtension("WEBGL_compressed_texture_atc"),astc:gl.getExtension("WEBGL_compressed_texture_astc")};CompressedTextureLoader.textureExtensions=gl;
CompressedTextureLoader.textureFormats={};for(var extensionName in gl){var extension=gl[extensionName];extension&&Object.assign(CompressedTextureLoader.textureFormats,Object.getPrototypeOf(extension))}}else console.warn("WebGL not available for compressed textures. Silently failing.")};return CompressedTextureLoader}();var _a$1,_b;loaders.LoaderResource.setExtensionXhrType("dds",loaders.LoaderResource.XHR_RESPONSE_TYPE.BUFFER);var DXGI_FORMAT;(function(DXGI_FORMAT){DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_UNKNOWN=
0]="DXGI_FORMAT_UNKNOWN";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_TYPELESS=1]="DXGI_FORMAT_R32G32B32A32_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_FLOAT=2]="DXGI_FORMAT_R32G32B32A32_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_UINT=3]="DXGI_FORMAT_R32G32B32A32_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_SINT=4]="DXGI_FORMAT_R32G32B32A32_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32_TYPELESS=5]="DXGI_FORMAT_R32G32B32_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32_FLOAT=
6]="DXGI_FORMAT_R32G32B32_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32_UINT=7]="DXGI_FORMAT_R32G32B32_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32B32_SINT=8]="DXGI_FORMAT_R32G32B32_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_TYPELESS=9]="DXGI_FORMAT_R16G16B16A16_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_FLOAT=10]="DXGI_FORMAT_R16G16B16A16_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_UNORM=11]="DXGI_FORMAT_R16G16B16A16_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_UINT=
12]="DXGI_FORMAT_R16G16B16A16_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_SNORM=13]="DXGI_FORMAT_R16G16B16A16_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_SINT=14]="DXGI_FORMAT_R16G16B16A16_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32_TYPELESS=15]="DXGI_FORMAT_R32G32_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32_FLOAT=16]="DXGI_FORMAT_R32G32_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32_UINT=17]="DXGI_FORMAT_R32G32_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G32_SINT=
18]="DXGI_FORMAT_R32G32_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32G8X24_TYPELESS=19]="DXGI_FORMAT_R32G8X24_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_D32_FLOAT_S8X24_UINT=20]="DXGI_FORMAT_D32_FLOAT_S8X24_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS=21]="DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_X32_TYPELESS_G8X24_UINT=22]="DXGI_FORMAT_X32_TYPELESS_G8X24_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_TYPELESS=23]="DXGI_FORMAT_R10G10B10A2_TYPELESS";
DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_UNORM=24]="DXGI_FORMAT_R10G10B10A2_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_UINT=25]="DXGI_FORMAT_R10G10B10A2_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R11G11B10_FLOAT=26]="DXGI_FORMAT_R11G11B10_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_TYPELESS=27]="DXGI_FORMAT_R8G8B8A8_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UNORM=28]="DXGI_FORMAT_R8G8B8A8_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UNORM_SRGB=29]="DXGI_FORMAT_R8G8B8A8_UNORM_SRGB";
DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UINT=30]="DXGI_FORMAT_R8G8B8A8_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_SNORM=31]="DXGI_FORMAT_R8G8B8A8_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_SINT=32]="DXGI_FORMAT_R8G8B8A8_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16_TYPELESS=33]="DXGI_FORMAT_R16G16_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16_FLOAT=34]="DXGI_FORMAT_R16G16_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16_UNORM=35]="DXGI_FORMAT_R16G16_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16_UINT=
36]="DXGI_FORMAT_R16G16_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16_SNORM=37]="DXGI_FORMAT_R16G16_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16G16_SINT=38]="DXGI_FORMAT_R16G16_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32_TYPELESS=39]="DXGI_FORMAT_R32_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_D32_FLOAT=40]="DXGI_FORMAT_D32_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32_FLOAT=41]="DXGI_FORMAT_R32_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32_UINT=42]="DXGI_FORMAT_R32_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R32_SINT=
43]="DXGI_FORMAT_R32_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R24G8_TYPELESS=44]="DXGI_FORMAT_R24G8_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_D24_UNORM_S8_UINT=45]="DXGI_FORMAT_D24_UNORM_S8_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R24_UNORM_X8_TYPELESS=46]="DXGI_FORMAT_R24_UNORM_X8_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_X24_TYPELESS_G8_UINT=47]="DXGI_FORMAT_X24_TYPELESS_G8_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8_TYPELESS=48]="DXGI_FORMAT_R8G8_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8_UNORM=
49]="DXGI_FORMAT_R8G8_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8_UINT=50]="DXGI_FORMAT_R8G8_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8_SNORM=51]="DXGI_FORMAT_R8G8_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8_SINT=52]="DXGI_FORMAT_R8G8_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16_TYPELESS=53]="DXGI_FORMAT_R16_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16_FLOAT=54]="DXGI_FORMAT_R16_FLOAT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_D16_UNORM=55]="DXGI_FORMAT_D16_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16_UNORM=
56]="DXGI_FORMAT_R16_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16_UINT=57]="DXGI_FORMAT_R16_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16_SNORM=58]="DXGI_FORMAT_R16_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R16_SINT=59]="DXGI_FORMAT_R16_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8_TYPELESS=60]="DXGI_FORMAT_R8_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8_UNORM=61]="DXGI_FORMAT_R8_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8_UINT=62]="DXGI_FORMAT_R8_UINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8_SNORM=
63]="DXGI_FORMAT_R8_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8_SINT=64]="DXGI_FORMAT_R8_SINT";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_A8_UNORM=65]="DXGI_FORMAT_A8_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R1_UNORM=66]="DXGI_FORMAT_R1_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R9G9B9E5_SHAREDEXP=67]="DXGI_FORMAT_R9G9B9E5_SHAREDEXP";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R8G8_B8G8_UNORM=68]="DXGI_FORMAT_R8G8_B8G8_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_G8R8_G8B8_UNORM=69]="DXGI_FORMAT_G8R8_G8B8_UNORM";
DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC1_TYPELESS=70]="DXGI_FORMAT_BC1_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM=71]="DXGI_FORMAT_BC1_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM_SRGB=72]="DXGI_FORMAT_BC1_UNORM_SRGB";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC2_TYPELESS=73]="DXGI_FORMAT_BC2_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM=74]="DXGI_FORMAT_BC2_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM_SRGB=75]="DXGI_FORMAT_BC2_UNORM_SRGB";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC3_TYPELESS=
76]="DXGI_FORMAT_BC3_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM=77]="DXGI_FORMAT_BC3_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM_SRGB=78]="DXGI_FORMAT_BC3_UNORM_SRGB";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC4_TYPELESS=79]="DXGI_FORMAT_BC4_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC4_UNORM=80]="DXGI_FORMAT_BC4_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC4_SNORM=81]="DXGI_FORMAT_BC4_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC5_TYPELESS=82]="DXGI_FORMAT_BC5_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC5_UNORM=
83]="DXGI_FORMAT_BC5_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC5_SNORM=84]="DXGI_FORMAT_BC5_SNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B5G6R5_UNORM=85]="DXGI_FORMAT_B5G6R5_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B5G5R5A1_UNORM=86]="DXGI_FORMAT_B5G5R5A1_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_UNORM=87]="DXGI_FORMAT_B8G8R8A8_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_UNORM=88]="DXGI_FORMAT_B8G8R8X8_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM=89]=
"DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_TYPELESS=90]="DXGI_FORMAT_B8G8R8A8_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_UNORM_SRGB=91]="DXGI_FORMAT_B8G8R8A8_UNORM_SRGB";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_TYPELESS=92]="DXGI_FORMAT_B8G8R8X8_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_UNORM_SRGB=93]="DXGI_FORMAT_B8G8R8X8_UNORM_SRGB";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC6H_TYPELESS=94]="DXGI_FORMAT_BC6H_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC6H_UF16=
95]="DXGI_FORMAT_BC6H_UF16";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC6H_SF16=96]="DXGI_FORMAT_BC6H_SF16";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC7_TYPELESS=97]="DXGI_FORMAT_BC7_TYPELESS";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC7_UNORM=98]="DXGI_FORMAT_BC7_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_BC7_UNORM_SRGB=99]="DXGI_FORMAT_BC7_UNORM_SRGB";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_AYUV=100]="DXGI_FORMAT_AYUV";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_Y410=101]="DXGI_FORMAT_Y410";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_Y416=
102]="DXGI_FORMAT_Y416";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_NV12=103]="DXGI_FORMAT_NV12";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_P010=104]="DXGI_FORMAT_P010";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_P016=105]="DXGI_FORMAT_P016";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_420_OPAQUE=106]="DXGI_FORMAT_420_OPAQUE";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_YUY2=107]="DXGI_FORMAT_YUY2";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_Y210=108]="DXGI_FORMAT_Y210";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_Y216=109]="DXGI_FORMAT_Y216";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_NV11=
110]="DXGI_FORMAT_NV11";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_AI44=111]="DXGI_FORMAT_AI44";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_IA44=112]="DXGI_FORMAT_IA44";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_P8=113]="DXGI_FORMAT_P8";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_A8P8=114]="DXGI_FORMAT_A8P8";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_B4G4R4A4_UNORM=115]="DXGI_FORMAT_B4G4R4A4_UNORM";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_P208=116]="DXGI_FORMAT_P208";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_V208=117]="DXGI_FORMAT_V208";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_V408=
118]="DXGI_FORMAT_V408";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE=119]="DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE=120]="DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE";DXGI_FORMAT[DXGI_FORMAT.DXGI_FORMAT_FORCE_UINT=121]="DXGI_FORMAT_FORCE_UINT"})(DXGI_FORMAT||(DXGI_FORMAT={}));var D3D10_RESOURCE_DIMENSION;(function(D3D10_RESOURCE_DIMENSION){D3D10_RESOURCE_DIMENSION[D3D10_RESOURCE_DIMENSION.DDS_DIMENSION_TEXTURE1D=
2]="DDS_DIMENSION_TEXTURE1D";D3D10_RESOURCE_DIMENSION[D3D10_RESOURCE_DIMENSION.DDS_DIMENSION_TEXTURE2D=3]="DDS_DIMENSION_TEXTURE2D";D3D10_RESOURCE_DIMENSION[D3D10_RESOURCE_DIMENSION.DDS_DIMENSION_TEXTURE3D=6]="DDS_DIMENSION_TEXTURE3D"})(D3D10_RESOURCE_DIMENSION||(D3D10_RESOURCE_DIMENSION={}));var FOURCC_TO_FORMAT=(_a$1={},_a$1[827611204]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT,_a$1[861165636]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT,_a$1[894720068]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,
_a$1),DXGI_TO_FORMAT=(_b={},_b[DXGI_FORMAT.DXGI_FORMAT_BC1_TYPELESS]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT,_b[DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT,_b[DXGI_FORMAT.DXGI_FORMAT_BC2_TYPELESS]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT,_b[DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT,_b[DXGI_FORMAT.DXGI_FORMAT_BC3_TYPELESS]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,
_b[DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM]=exports.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,_b[DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM_SRGB]=exports.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,_b[DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM_SRGB]=exports.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,_b[DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM_SRGB]=exports.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,_b);_a$1=function(){function DDSLoader(){}DDSLoader.use=function(resource,next){if("dds"===resource.extension&&
resource.data)try{Object.assign(resource,registerCompressedTextures(resource.name||resource.url,DDSLoader.parse(resource.data),resource.metadata))}catch(err){next(err);return}next()};DDSLoader.parse=function(arrayBuffer){var data=new Uint32Array(arrayBuffer);if(542327876!==data[0])throw Error("Invalid DDS file magic word");var header=new Uint32Array(arrayBuffer,0,124/Uint32Array.BYTES_PER_ELEMENT),height=header[3],width=header[4],mipmapCount=header[7];header=new Uint32Array(arrayBuffer,19*Uint32Array.BYTES_PER_ELEMENT,
32/Uint32Array.BYTES_PER_ELEMENT);var formatFlags=header[1];if(formatFlags&4){header=header[2];if(808540228!==header)return data=FOURCC_TO_FORMAT[header],arrayBuffer=new Uint8Array(arrayBuffer,128),[new CompressedTextureResource(arrayBuffer,{format:data,width:width,height:height,levels:mipmapCount})];data=new Uint32Array(data.buffer,128,20/Uint32Array.BYTES_PER_ELEMENT);header=data[0];formatFlags=data[1];var miscFlag=data[2];data=data[3];var internalFormat_2=DXGI_TO_FORMAT[header];if(void 0===internalFormat_2)throw Error("DDSLoader cannot parse texture data with DXGI format "+
header);if(4===miscFlag)throw Error("DDSLoader does not support cubemap textures");if(formatFlags===D3D10_RESOURCE_DIMENSION.DDS_DIMENSION_TEXTURE3D)throw Error("DDSLoader does not supported 3D texture data");header=[];if(1===data)header.push(new Uint8Array(arrayBuffer,148));else{var pixelSize=INTERNAL_FORMAT_TO_BYTES_PER_PIXEL[internalFormat_2];formatFlags=0;var levelWidth=width,levelHeight=height;for(miscFlag=0;miscFlag<mipmapCount;miscFlag++)formatFlags+=Math.max(1,levelWidth+3&-4)*Math.max(1,
levelHeight+3&-4)*pixelSize,levelWidth>>>=1,levelHeight>>>=1;pixelSize=148;for(miscFlag=0;miscFlag<data;miscFlag++)header.push(new Uint8Array(arrayBuffer,pixelSize,formatFlags)),pixelSize+=formatFlags}return header.map(function(buffer){return new CompressedTextureResource(buffer,{format:internalFormat_2,width:width,height:height,levels:mipmapCount})})}if(formatFlags&64)throw Error("DDSLoader does not support uncompressed texture data.");if(formatFlags&512)throw Error("DDSLoader does not supported YUV uncompressed texture data.");
if(formatFlags&131072)throw Error("DDSLoader does not support single-channel (lumninance) texture data!");if(formatFlags&2)throw Error("DDSLoader does not support single-channel (alpha) texture data!");throw Error("DDSLoader failed to load a texture file due to an unknown reason!");};return DDSLoader}();var _a$2,_b$1,_c;loaders.LoaderResource.setExtensionXhrType("ktx",loaders.LoaderResource.XHR_RESPONSE_TYPE.BUFFER);var FILE_IDENTIFIER=[171,75,84,88,32,49,49,187,13,10,26,10],TYPES_TO_BYTES_PER_COMPONENT=
(_a$2={},_a$2[constants.TYPES.UNSIGNED_BYTE]=1,_a$2[constants.TYPES.UNSIGNED_SHORT]=2,_a$2[constants.TYPES.FLOAT]=4,_a$2[constants.TYPES.HALF_FLOAT]=8,_a$2),FORMATS_TO_COMPONENTS=(_b$1={},_b$1[constants.FORMATS.RGBA]=4,_b$1[constants.FORMATS.RGB]=3,_b$1[constants.FORMATS.LUMINANCE]=1,_b$1[constants.FORMATS.LUMINANCE_ALPHA]=2,_b$1[constants.FORMATS.ALPHA]=1,_b$1),TYPES_TO_BYTES_PER_PIXEL=(_c={},_c[constants.TYPES.UNSIGNED_SHORT_4_4_4_4]=2,_c[constants.TYPES.UNSIGNED_SHORT_5_5_5_1]=2,_c[constants.TYPES.UNSIGNED_SHORT_5_6_5]=
2,_c);_a$2=function(){function KTXLoader(){}KTXLoader.use=function(resource,next){if("ktx"===resource.extension&&resource.data)try{var url=resource.name||resource.url;Object.assign(resource,registerCompressedTextures(url,KTXLoader.parse(url,resource.data),resource.metadata))}catch(err){next(err);return}next()};KTXLoader.parse=function(url,arrayBuffer){var dataView=new DataView(arrayBuffer);if(!KTXLoader.validate(url,dataView))return null;url=67305985===dataView.getUint32(12,!0);var glType=dataView.getUint32(16,
url),glFormat=dataView.getUint32(24,url),glInternalFormat=dataView.getUint32(28,url),pixelWidth=dataView.getUint32(36,url),pixelHeight=dataView.getUint32(40,url)||1,pixelDepth=dataView.getUint32(44,url)||1,numberOfArrayElements=dataView.getUint32(48,url)||1,numberOfFaces=dataView.getUint32(52,url),numberOfMipmapLevels=dataView.getUint32(56,url),bytesOfKeyValueData=dataView.getUint32(60,url);if(0===pixelHeight||1!==pixelDepth)throw Error("Only 2D textures are supported");if(1!==numberOfFaces)throw Error("CubeTextures are not supported by KTXLoader yet!");
if(1!==numberOfArrayElements)throw Error("WebGL does not support array textures");var alignedWidth=pixelWidth+3&-4,alignedHeight=pixelHeight+3&-4;pixelDepth=Array(numberOfArrayElements);numberOfFaces=pixelWidth*pixelHeight;0===glType&&(numberOfFaces=alignedWidth*alignedHeight);glFormat=0!==glType?TYPES_TO_BYTES_PER_COMPONENT[glType]?TYPES_TO_BYTES_PER_COMPONENT[glType]*FORMATS_TO_COMPONENTS[glFormat]:TYPES_TO_BYTES_PER_PIXEL[glType]:INTERNAL_FORMAT_TO_BYTES_PER_PIXEL[glInternalFormat];if(void 0===
glFormat)throw Error("Unable to resolve the pixel format stored in the *.ktx file!");numberOfFaces*=glFormat;var mipWidth=pixelWidth,mipHeight=pixelHeight;bytesOfKeyValueData=64+bytesOfKeyValueData;for(var mipmapLevel=0;mipmapLevel<numberOfMipmapLevels;mipmapLevel++){for(var imageSize=dataView.getUint32(bytesOfKeyValueData,url),elementOffset=bytesOfKeyValueData+4,arrayElement=0;arrayElement<numberOfArrayElements;arrayElement++){var mips=pixelDepth[arrayElement];mips||(mips=pixelDepth[arrayElement]=
Array(numberOfMipmapLevels));mips[mipmapLevel]={levelID:mipmapLevel,levelWidth:1<numberOfMipmapLevels?mipWidth:alignedWidth,levelHeight:1<numberOfMipmapLevels?mipHeight:alignedHeight,levelBuffer:new Uint8Array(arrayBuffer,elementOffset,numberOfFaces)};elementOffset+=numberOfFaces}bytesOfKeyValueData+=imageSize+4;bytesOfKeyValueData=0!==bytesOfKeyValueData%4?bytesOfKeyValueData+4-bytesOfKeyValueData%4:bytesOfKeyValueData;mipWidth=mipWidth>>1||1;mipHeight=mipHeight>>1||1;alignedWidth=mipWidth+4-1&-4;
alignedHeight=mipHeight+4-1&-4;numberOfFaces=alignedWidth*alignedHeight*glFormat}if(0!==glType)throw Error("TODO: Uncompressed");return pixelDepth.map(function(levelBuffers){return new CompressedTextureResource(null,{format:glInternalFormat,width:pixelWidth,height:pixelHeight,levels:numberOfMipmapLevels,levelBuffers:levelBuffers})})};KTXLoader.validate=function(url,dataView){for(var i=0;i<FILE_IDENTIFIER.length;i++)if(dataView.getUint8(i)!==FILE_IDENTIFIER[i])return console.error(url+" is not a valid *.ktx file!"),
!1;return!0};return KTXLoader}();exports.BlobResource=global;exports.CompressedTextureLoader=require;exports.CompressedTextureResource=CompressedTextureResource;exports.DDSLoader=_a$1;exports.FORMATS_TO_COMPONENTS=FORMATS_TO_COMPONENTS;exports.INTERNAL_FORMAT_TO_BYTES_PER_PIXEL=INTERNAL_FORMAT_TO_BYTES_PER_PIXEL;exports.KTXLoader=_a$2;exports.TYPES_TO_BYTES_PER_COMPONENT=TYPES_TO_BYTES_PER_COMPONENT;exports.TYPES_TO_BYTES_PER_PIXEL=TYPES_TO_BYTES_PER_PIXEL}
//# sourceMappingURL=module$node_modules$$pixi$compressed_textures$dist$cjs$compressed_textures.js.map
