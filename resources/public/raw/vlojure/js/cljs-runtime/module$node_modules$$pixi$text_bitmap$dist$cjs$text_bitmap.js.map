{
"version":3,
"file":"module$node_modules$$pixi$text_bitmap$dist$cjs$text_bitmap.js",
"lineCount":52,
"mappings":"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",
"sources":["node_modules/@pixi/text-bitmap/dist/cjs/text-bitmap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$text_bitmap$dist$cjs$text_bitmap\"] = function(global,require,module,exports) {\n/*!\n * @pixi/text-bitmap - v6.0.4\n * Compiled Tue, 11 May 2021 18:00:23 UTC\n *\n * @pixi/text-bitmap is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar math = require('@pixi/math');\nvar settings = require('@pixi/settings');\nvar mesh = require('@pixi/mesh');\nvar utils = require('@pixi/utils');\nvar core = require('@pixi/core');\nvar text = require('@pixi/text');\nvar display = require('@pixi/display');\nvar loaders = require('@pixi/loaders');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) { if (b.hasOwnProperty(p)) { d[p] = b[p]; } } };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/* eslint-disable max-len */\n/**\n * Normalized parsed data from .fnt files.\n *\n * @class\n * @memberof PIXI\n */\nvar BitmapFontData = /** @class */ (function () {\n    function BitmapFontData() {\n        /**\n         * @member {PIXI.IBitmapFontDataInfo[]}\n         * @readOnly\n         */\n        this.info = [];\n        /**\n         * @member {PIXI.IBitmapFontDataCommon[]}\n         * @readOnly\n         */\n        this.common = [];\n        /**\n         * @member {PIXI.IBitmapFontDataPage[]}\n         * @readOnly\n         */\n        this.page = [];\n        /**\n         * @member {PIXI.IBitmapFontDataChar[]}\n         * @readOnly\n         */\n        this.char = [];\n        /**\n         * @member {PIXI.IBitmapFontDataKerning[]}\n         * @readOnly\n         */\n        this.kerning = [];\n    }\n    return BitmapFontData;\n}());\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataInfo\n * @property {string} face\n * @property {number} size\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataCommon\n * @property {number} lineHeight\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataPage\n * @property {number} id\n * @property {string} file\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataChar\n * @property {string} id\n * @property {number} page\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n * @property {number} xoffset\n * @property {number} yoffset\n * @property {number} xadvance\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataKerning\n * @property {number} first\n * @property {number} second\n * @property {number} amount\n */\n\n/**\n * BitmapFont format that's Text-based.\n *\n * @class\n * @private\n */\nvar TextFormat = /** @class */ (function () {\n    function TextFormat() {\n    }\n    /**\n     * Check if resource refers to txt font data.\n     *\n     * @static\n     * @private\n     * @param {any} data\n     * @return {boolean} True if resource could be treated as font data, false otherwise.\n     */\n    TextFormat.test = function (data) {\n        return typeof data === 'string' && data.indexOf('info face=') === 0;\n    };\n    /**\n     * Convert text font data to a javascript object.\n     *\n     * @static\n     * @private\n     * @param {string} txt - Raw string data to be converted\n     * @return {PIXI.BitmapFontData} Parsed font data\n     */\n    TextFormat.parse = function (txt) {\n        // Retrieve data item\n        var items = txt.match(/^[a-z]+\\s+.+$/gm);\n        var rawData = {\n            info: [],\n            common: [],\n            page: [],\n            char: [],\n            chars: [],\n            kerning: [],\n            kernings: [],\n        };\n        for (var i in items) {\n            // Extract item name\n            var name = items[i].match(/^[a-z]+/gm)[0];\n            // Extract item attribute list as string ex.: \"width=10\"\n            var attributeList = items[i].match(/[a-zA-Z]+=([^\\s\"']+|\"([^\"]*)\")/gm);\n            // Convert attribute list into an object\n            var itemData = {};\n            for (var i_1 in attributeList) {\n                // Split key-value pairs\n                var split = attributeList[i_1].split('=');\n                var key = split[0];\n                // Remove eventual quotes from value\n                var strValue = split[1].replace(/\"/gm, '');\n                // Try to convert value into float\n                var floatValue = parseFloat(strValue);\n                // Use string value case float value is NaN\n                var value = isNaN(floatValue) ? strValue : floatValue;\n                itemData[key] = value;\n            }\n            // Push current item to the resulting data\n            rawData[name].push(itemData);\n        }\n        var font = new BitmapFontData();\n        rawData.info.forEach(function (info) { return font.info.push({\n            face: info.face,\n            size: parseInt(info.size, 10),\n        }); });\n        rawData.common.forEach(function (common) { return font.common.push({\n            lineHeight: parseInt(common.lineHeight, 10),\n        }); });\n        rawData.page.forEach(function (page) { return font.page.push({\n            id: parseInt(page.id, 10),\n            file: page.file,\n        }); });\n        rawData.char.forEach(function (char) { return font.char.push({\n            id: parseInt(char.id, 10),\n            page: parseInt(char.page, 10),\n            x: parseInt(char.x, 10),\n            y: parseInt(char.y, 10),\n            width: parseInt(char.width, 10),\n            height: parseInt(char.height, 10),\n            xoffset: parseInt(char.xoffset, 10),\n            yoffset: parseInt(char.yoffset, 10),\n            xadvance: parseInt(char.xadvance, 10),\n        }); });\n        rawData.kerning.forEach(function (kerning) { return font.kerning.push({\n            first: parseInt(kerning.first, 10),\n            second: parseInt(kerning.second, 10),\n            amount: parseInt(kerning.amount, 10),\n        }); });\n        return font;\n    };\n    return TextFormat;\n}());\n\n/**\n * BitmapFont format that's XML-based.\n *\n * @class\n * @private\n */\nvar XMLFormat = /** @class */ (function () {\n    function XMLFormat() {\n    }\n    /**\n     * Check if resource refers to xml font data.\n     *\n     * @static\n     * @private\n     * @param {any} data\n     * @return {boolean} True if resource could be treated as font data, false otherwise.\n     */\n    XMLFormat.test = function (data) {\n        return data instanceof XMLDocument\n            && data.getElementsByTagName('page').length\n            && data.getElementsByTagName('info')[0].getAttribute('face') !== null;\n    };\n    /**\n     * Convert the XML into BitmapFontData that we can use.\n     *\n     * @static\n     * @private\n     * @param {XMLDocument} xml\n     * @return {BitmapFontData} Data to use for BitmapFont\n     */\n    XMLFormat.parse = function (xml) {\n        var data = new BitmapFontData();\n        var info = xml.getElementsByTagName('info');\n        var common = xml.getElementsByTagName('common');\n        var page = xml.getElementsByTagName('page');\n        var char = xml.getElementsByTagName('char');\n        var kerning = xml.getElementsByTagName('kerning');\n        for (var i = 0; i < info.length; i++) {\n            data.info.push({\n                face: info[i].getAttribute('face'),\n                size: parseInt(info[i].getAttribute('size'), 10),\n            });\n        }\n        for (var i = 0; i < common.length; i++) {\n            data.common.push({\n                lineHeight: parseInt(common[i].getAttribute('lineHeight'), 10),\n            });\n        }\n        for (var i = 0; i < page.length; i++) {\n            data.page.push({\n                id: parseInt(page[i].getAttribute('id'), 10) || 0,\n                file: page[i].getAttribute('file'),\n            });\n        }\n        for (var i = 0; i < char.length; i++) {\n            var letter = char[i];\n            data.char.push({\n                id: parseInt(letter.getAttribute('id'), 10),\n                page: parseInt(letter.getAttribute('page'), 10) || 0,\n                x: parseInt(letter.getAttribute('x'), 10),\n                y: parseInt(letter.getAttribute('y'), 10),\n                width: parseInt(letter.getAttribute('width'), 10),\n                height: parseInt(letter.getAttribute('height'), 10),\n                xoffset: parseInt(letter.getAttribute('xoffset'), 10),\n                yoffset: parseInt(letter.getAttribute('yoffset'), 10),\n                xadvance: parseInt(letter.getAttribute('xadvance'), 10),\n            });\n        }\n        for (var i = 0; i < kerning.length; i++) {\n            data.kerning.push({\n                first: parseInt(kerning[i].getAttribute('first'), 10),\n                second: parseInt(kerning[i].getAttribute('second'), 10),\n                amount: parseInt(kerning[i].getAttribute('amount'), 10),\n            });\n        }\n        return data;\n    };\n    return XMLFormat;\n}());\n\n/**\n * BitmapFont format that's XML-based.\n *\n * @class\n * @private\n */\nvar XMLStringFormat = /** @class */ (function () {\n    function XMLStringFormat() {\n    }\n    /**\n     * Check if resource refers to text xml font data.\n     *\n     * @static\n     * @private\n     * @param {any} data\n     * @return {boolean} True if resource could be treated as font data, false otherwise.\n     */\n    XMLStringFormat.test = function (data) {\n        if (typeof data === 'string' && data.indexOf('<font>') > -1) {\n            var xml = new self.DOMParser().parseFromString(data, 'text/xml');\n            return XMLFormat.test(xml);\n        }\n        return false;\n    };\n    /**\n     * Convert the text XML into BitmapFontData that we can use.\n     *\n     * @static\n     * @private\n     * @param {string} xmlTxt\n     * @return {BitmapFontData} Data to use for BitmapFont\n     */\n    XMLStringFormat.parse = function (xmlTxt) {\n        var xml = new self.DOMParser().parseFromString(xmlTxt, 'text/xml');\n        return XMLFormat.parse(xml);\n    };\n    return XMLStringFormat;\n}());\n\n// Registered formats, maybe make this extensible in the future?\nvar formats = [\n    TextFormat,\n    XMLFormat,\n    XMLStringFormat ];\n/**\n * Auto-detect BitmapFont parsing format based on data.\n * @private\n * @param {any} data - Data to detect format\n * @return {any} Format or null\n */\nfunction autoDetectFormat(data) {\n    for (var i = 0; i < formats.length; i++) {\n        if (formats[i].test(data)) {\n            return formats[i];\n        }\n    }\n    return null;\n}\n\n// TODO: Prevent code duplication b/w generateFillStyle & Text#generateFillStyle\n/**\n * Generates the fill style. Can automatically generate a gradient based on the fill style being an array\n *\n * @private\n * @param {object} style - The style.\n * @param {string[]} lines - The lines of text.\n * @return {string|number|CanvasGradient} The fill style\n */\nfunction generateFillStyle(canvas, context, style, resolution, lines, metrics) {\n    // TODO: Can't have different types for getter and setter. The getter shouldn't have the number type as\n    //       the setter converts to string. See this thread for more details:\n    //       https://github.com/microsoft/TypeScript/issues/2521\n    var fillStyle = style.fill;\n    if (!Array.isArray(fillStyle)) {\n        return fillStyle;\n    }\n    else if (fillStyle.length === 1) {\n        return fillStyle[0];\n    }\n    // the gradient will be evenly spaced out according to how large the array is.\n    // ['#FF0000', '#00FF00', '#0000FF'] would created stops at 0.25, 0.5 and 0.75\n    var gradient;\n    // a dropshadow will enlarge the canvas and result in the gradient being\n    // generated with the incorrect dimensions\n    var dropShadowCorrection = (style.dropShadow) ? style.dropShadowDistance : 0;\n    // should also take padding into account, padding can offset the gradient\n    var padding = style.padding || 0;\n    var width = Math.ceil(canvas.width / resolution) - dropShadowCorrection - (padding * 2);\n    var height = Math.ceil(canvas.height / resolution) - dropShadowCorrection - (padding * 2);\n    // make a copy of the style settings, so we can manipulate them later\n    var fill = fillStyle.slice();\n    var fillGradientStops = style.fillGradientStops.slice();\n    // wanting to evenly distribute the fills. So an array of 4 colours should give fills of 0.25, 0.5 and 0.75\n    if (!fillGradientStops.length) {\n        var lengthPlus1 = fill.length + 1;\n        for (var i = 1; i < lengthPlus1; ++i) {\n            fillGradientStops.push(i / lengthPlus1);\n        }\n    }\n    // stop the bleeding of the last gradient on the line above to the top gradient of the this line\n    // by hard defining the first gradient colour at point 0, and last gradient colour at point 1\n    fill.unshift(fillStyle[0]);\n    fillGradientStops.unshift(0);\n    fill.push(fillStyle[fillStyle.length - 1]);\n    fillGradientStops.push(1);\n    if (style.fillGradientType === text.TEXT_GRADIENT.LINEAR_VERTICAL) {\n        // start the gradient at the top center of the canvas, and end at the bottom middle of the canvas\n        gradient = context.createLinearGradient(width / 2, padding, width / 2, height + padding);\n        // we need to repeat the gradient so that each individual line of text has the same vertical gradient effect\n        // ['#FF0000', '#00FF00', '#0000FF'] over 2 lines would create stops at 0.125, 0.25, 0.375, 0.625, 0.75, 0.875\n        // There's potential for floating point precision issues at the seams between gradient repeats.\n        // The loop below generates the stops in order, so track the last generated one to prevent\n        // floating point precision from making us go the teeniest bit backwards, resulting in\n        // the first and last colors getting swapped.\n        var lastIterationStop = 0;\n        // Actual height of the text itself, not counting spacing for lineHeight/leading/dropShadow etc\n        var textHeight = metrics.fontProperties.fontSize + style.strokeThickness;\n        // textHeight, but as a 0-1 size in global gradient stop space\n        var gradStopLineHeight = textHeight / height;\n        for (var i = 0; i < lines.length; i++) {\n            var thisLineTop = metrics.lineHeight * i;\n            for (var j = 0; j < fill.length; j++) {\n                // 0-1 stop point for the current line, multiplied to global space afterwards\n                var lineStop = 0;\n                if (typeof fillGradientStops[j] === 'number') {\n                    lineStop = fillGradientStops[j];\n                }\n                else {\n                    lineStop = j / fill.length;\n                }\n                var globalStop = (thisLineTop / height) + (lineStop * gradStopLineHeight);\n                // Prevent color stop generation going backwards from floating point imprecision\n                var clampedStop = Math.max(lastIterationStop, globalStop);\n                clampedStop = Math.min(clampedStop, 1); // Cap at 1 as well for safety's sake to avoid a possible throw.\n                gradient.addColorStop(clampedStop, fill[j]);\n                lastIterationStop = clampedStop;\n            }\n        }\n    }\n    else {\n        // start the gradient at the center left of the canvas, and end at the center right of the canvas\n        gradient = context.createLinearGradient(padding, height / 2, width + padding, height / 2);\n        // can just evenly space out the gradients in this case, as multiple lines makes no difference\n        // to an even left to right gradient\n        var totalIterations = fill.length + 1;\n        var currentIteration = 1;\n        for (var i = 0; i < fill.length; i++) {\n            var stop = void 0;\n            if (typeof fillGradientStops[i] === 'number') {\n                stop = fillGradientStops[i];\n            }\n            else {\n                stop = currentIteration / totalIterations;\n            }\n            gradient.addColorStop(stop, fill[i]);\n            currentIteration++;\n        }\n    }\n    return gradient;\n}\n\n// TODO: Prevent code duplication b/w drawGlyph & Text#updateText\n/**\n * Draws the glyph `metrics.text` on the given canvas.\n *\n * Ignored because not directly exposed.\n *\n * @ignore\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} context\n * @param {TextMetrics} metrics\n * @param {number} x\n * @param {number} y\n * @param {number} resolution\n * @param {TextStyle} style\n */\nfunction drawGlyph(canvas, context, metrics, x, y, resolution, style) {\n    var char = metrics.text;\n    var fontProperties = metrics.fontProperties;\n    context.translate(x, y);\n    context.scale(resolution, resolution);\n    var tx = style.strokeThickness / 2;\n    var ty = -(style.strokeThickness / 2);\n    context.font = style.toFontString();\n    context.lineWidth = style.strokeThickness;\n    context.textBaseline = style.textBaseline;\n    context.lineJoin = style.lineJoin;\n    context.miterLimit = style.miterLimit;\n    // set canvas text styles\n    context.fillStyle = generateFillStyle(canvas, context, style, resolution, [char], metrics);\n    context.strokeStyle = style.stroke;\n    context.font = style.toFontString();\n    context.lineWidth = style.strokeThickness;\n    context.textBaseline = style.textBaseline;\n    context.lineJoin = style.lineJoin;\n    context.miterLimit = style.miterLimit;\n    // set canvas text styles\n    context.fillStyle = generateFillStyle(canvas, context, style, resolution, [char], metrics);\n    context.strokeStyle = style.stroke;\n    var dropShadowColor = style.dropShadowColor;\n    var rgb = utils.hex2rgb(typeof dropShadowColor === 'number' ? dropShadowColor : utils.string2hex(dropShadowColor));\n    if (style.dropShadow) {\n        context.shadowColor = \"rgba(\" + rgb[0] * 255 + \",\" + rgb[1] * 255 + \",\" + rgb[2] * 255 + \",\" + style.dropShadowAlpha + \")\";\n        context.shadowBlur = style.dropShadowBlur;\n        context.shadowOffsetX = Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n        context.shadowOffsetY = Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n    }\n    else {\n        context.shadowColor = 'black';\n        context.shadowBlur = 0;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n    }\n    if (style.stroke && style.strokeThickness) {\n        context.strokeText(char, tx, ty + metrics.lineHeight - fontProperties.descent);\n    }\n    if (style.fill) {\n        context.fillText(char, tx, ty + metrics.lineHeight - fontProperties.descent);\n    }\n    context.setTransform(1, 0, 0, 1, 0, 0); // defaults needed for older browsers (e.g. Opera 29)\n    context.fillStyle = 'rgba(0, 0, 0, 0)';\n}\n\n/**\n * Processes the passed character set data and returns a flattened array of all the characters.\n *\n * Ignored because not directly exposed.\n *\n * @ignore\n * @param {string | string[] | string[][] } chars\n * @returns {string[]}\n */\nfunction resolveCharacters(chars) {\n    // Split the chars string into individual characters\n    if (typeof chars === 'string') {\n        chars = [chars];\n    }\n    // Handle an array of characters+ranges\n    var result = [];\n    for (var i = 0, j = chars.length; i < j; i++) {\n        var item = chars[i];\n        // Handle range delimited by start/end chars\n        if (Array.isArray(item)) {\n            if (item.length !== 2) {\n                throw new Error(\"[BitmapFont]: Invalid character range length, expecting 2 got \" + item.length + \".\");\n            }\n            var startCode = item[0].charCodeAt(0);\n            var endCode = item[1].charCodeAt(0);\n            if (endCode < startCode) {\n                throw new Error('[BitmapFont]: Invalid character range.');\n            }\n            for (var i_1 = startCode, j_1 = endCode; i_1 <= j_1; i_1++) {\n                result.push(String.fromCharCode(i_1));\n            }\n        }\n        // Handle a character set string\n        else {\n            result.push.apply(result, item.split(''));\n        }\n    }\n    if (result.length === 0) {\n        throw new Error('[BitmapFont]: Empty set when resolving characters.');\n    }\n    return result;\n}\n\n/**\n * BitmapFont represents a typeface available for use with the BitmapText class. Use the `install`\n * method for adding a font to be used.\n *\n * @class\n * @memberof PIXI\n */\nvar BitmapFont = /** @class */ (function () {\n    /**\n     * @param {PIXI.BitmapFontData} data\n     * @param {PIXI.Texture[]|Object.<string, PIXI.Texture>} textures\n     * @param {boolean} ownsTextures - Setting to `true` will destroy page textures\n     *        when the font is uninstalled.\n     */\n    function BitmapFont(data, textures, ownsTextures) {\n        var info = data.info[0];\n        var common = data.common[0];\n        var page = data.page[0];\n        var res = utils.getResolutionOfUrl(page.file);\n        var pageTextures = {};\n        this._ownsTextures = ownsTextures;\n        /**\n         * The name of the font face.\n         *\n         * @member {string}\n         * @readonly\n         */\n        this.font = info.face;\n        /**\n         * The size of the font face in pixels.\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.size = info.size;\n        /**\n         * The line-height of the font face in pixels.\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.lineHeight = common.lineHeight / res;\n        /**\n         * The map of characters by character code.\n         *\n         * @member {object}\n         * @readonly\n         */\n        this.chars = {};\n        /**\n         * The map of base page textures (i.e., sheets of glyphs).\n         *\n         * @member {object}\n         * @readonly\n         * @private\n         */\n        this.pageTextures = pageTextures;\n        // Convert the input Texture, Textures or object\n        // into a page Texture lookup by \"id\"\n        for (var i = 0; i < data.page.length; i++) {\n            var _a = data.page[i], id = _a.id, file = _a.file;\n            pageTextures[id] = textures instanceof Array\n                ? textures[i] : textures[file];\n        }\n        // parse letters\n        for (var i = 0; i < data.char.length; i++) {\n            var _b = data.char[i], id = _b.id, page_1 = _b.page;\n            var _c = data.char[i], x = _c.x, y = _c.y, width = _c.width, height = _c.height, xoffset = _c.xoffset, yoffset = _c.yoffset, xadvance = _c.xadvance;\n            x /= res;\n            y /= res;\n            width /= res;\n            height /= res;\n            xoffset /= res;\n            yoffset /= res;\n            xadvance /= res;\n            var rect = new math.Rectangle(x + (pageTextures[page_1].frame.x / res), y + (pageTextures[page_1].frame.y / res), width, height);\n            this.chars[id] = {\n                xOffset: xoffset,\n                yOffset: yoffset,\n                xAdvance: xadvance,\n                kerning: {},\n                texture: new core.Texture(pageTextures[page_1].baseTexture, rect),\n                page: page_1,\n            };\n        }\n        // parse kernings\n        for (var i = 0; i < data.kerning.length; i++) {\n            var _d = data.kerning[i], first = _d.first, second = _d.second, amount = _d.amount;\n            first /= res;\n            second /= res;\n            amount /= res;\n            if (this.chars[second]) {\n                this.chars[second].kerning[first] = amount;\n            }\n        }\n    }\n    /**\n     * Remove references to created glyph textures.\n     */\n    BitmapFont.prototype.destroy = function () {\n        for (var id in this.chars) {\n            this.chars[id].texture.destroy();\n            this.chars[id].texture = null;\n        }\n        for (var id in this.pageTextures) {\n            if (this._ownsTextures) {\n                this.pageTextures[id].destroy(true);\n            }\n            this.pageTextures[id] = null;\n        }\n        // Set readonly null.\n        this.chars = null;\n        this.pageTextures = null;\n    };\n    /**\n     * Register a new bitmap font.\n     *\n     * @static\n     * @param {XMLDocument|string|PIXI.BitmapFontData} data - The\n     *        characters map that could be provided as xml or raw string.\n     * @param {Object.<string, PIXI.Texture>|PIXI.Texture|PIXI.Texture[]}\n     *        textures - List of textures for each page.\n     * @param managedTexture - Set to `true` to destroy page textures\n     *        when the font is uninstalled. By default fonts created with\n     *        `BitmapFont.from` or from the `BitmapFontLoader` are `true`.\n     * @return {PIXI.BitmapFont} Result font object with font, size, lineHeight\n     *         and char fields.\n     */\n    BitmapFont.install = function (data, textures, ownsTextures) {\n        var fontData;\n        if (data instanceof BitmapFontData) {\n            fontData = data;\n        }\n        else {\n            var format = autoDetectFormat(data);\n            if (!format) {\n                throw new Error('Unrecognized data format for font.');\n            }\n            fontData = format.parse(data);\n        }\n        // Single texture, convert to list\n        if (textures instanceof core.Texture) {\n            textures = [textures];\n        }\n        var font = new BitmapFont(fontData, textures, ownsTextures);\n        BitmapFont.available[font.font] = font;\n        return font;\n    };\n    /**\n     * Remove bitmap font by name.\n     *\n     * @static\n     * @param name - Name of the font to uninstall.\n     */\n    BitmapFont.uninstall = function (name) {\n        var font = BitmapFont.available[name];\n        if (!font) {\n            throw new Error(\"No font found named '\" + name + \"'\");\n        }\n        font.destroy();\n        delete BitmapFont.available[name];\n    };\n    /**\n     * Generates a bitmap-font for the given style and character set. This does not support\n     * kernings yet. With `style` properties, only the following non-layout properties are used:\n     *\n     * - {@link PIXI.TextStyle#dropShadow|dropShadow}\n     * - {@link PIXI.TextStyle#dropShadowDistance|dropShadowDistance}\n     * - {@link PIXI.TextStyle#dropShadowColor|dropShadowColor}\n     * - {@link PIXI.TextStyle#dropShadowBlur|dropShadowBlur}\n     * - {@link PIXI.TextStyle#dropShadowAngle|dropShadowAngle}\n     * - {@link PIXI.TextStyle#fill|fill}\n     * - {@link PIXI.TextStyle#fillGradientStops|fillGradientStops}\n     * - {@link PIXI.TextStyle#fillGradientType|fillGradientType}\n     * - {@link PIXI.TextStyle#fontFamily|fontFamily}\n     * - {@link PIXI.TextStyle#fontSize|fontSize}\n     * - {@link PIXI.TextStyle#fontVariant|fontVariant}\n     * - {@link PIXI.TextStyle#fontWeight|fontWeight}\n     * - {@link PIXI.TextStyle#lineJoin|lineJoin}\n     * - {@link PIXI.TextStyle#miterLimit|miterLimit}\n     * - {@link PIXI.TextStyle#stroke|stroke}\n     * - {@link PIXI.TextStyle#strokeThickness|strokeThickness}\n     * - {@link PIXI.TextStyle#textBaseline|textBaseline}\n     *\n     * @param {string} name - The name of the custom font to use with BitmapText.\n     * @param {object|PIXI.TextStyle} [style] - Style options to render with BitmapFont.\n     * @param {PIXI.IBitmapFontOptions} [options] - Setup options for font or name of the font.\n     * @param {string|string[]|string[][]} [options.chars=PIXI.BitmapFont.ALPHANUMERIC] - characters included\n     *      in the font set. You can also use ranges. For example, `[['a', 'z'], ['A', 'Z'], \"!@#$%^&*()~{}[] \"]`.\n     *      Don't forget to include spaces ' ' in your character set!\n     * @param {number} [options.resolution=1] - Render resolution for glyphs.\n     * @param {number} [options.textureWidth=512] - Optional width of atlas, smaller values to reduce memory.\n     * @param {number} [options.textureHeight=512] - Optional height of atlas, smaller values to reduce memory.\n     * @param {number} [options.padding=4] - Padding between glyphs on texture atlas.\n     * @return {PIXI.BitmapFont} Font generated by style options.\n     * @static\n     * @example\n     * PIXI.BitmapFont.from(\"TitleFont\", {\n     *     fontFamily: \"Arial\",\n     *     fontSize: 12,\n     *     strokeThickness: 2,\n     *     fill: \"purple\"\n     * });\n     *\n     * const title = new PIXI.BitmapText(\"This is the title\", { fontName: \"TitleFont\" });\n     */\n    BitmapFont.from = function (name, textStyle, options) {\n        if (!name) {\n            throw new Error('[BitmapFont] Property `name` is required.');\n        }\n        var _a = Object.assign({}, BitmapFont.defaultOptions, options), chars = _a.chars, padding = _a.padding, resolution = _a.resolution, textureWidth = _a.textureWidth, textureHeight = _a.textureHeight;\n        var charsList = resolveCharacters(chars);\n        var style = textStyle instanceof text.TextStyle ? textStyle : new text.TextStyle(textStyle);\n        var lineWidth = textureWidth;\n        var fontData = new BitmapFontData();\n        fontData.info[0] = {\n            face: style.fontFamily,\n            size: style.fontSize,\n        };\n        fontData.common[0] = {\n            lineHeight: style.fontSize,\n        };\n        var positionX = 0;\n        var positionY = 0;\n        var canvas;\n        var context;\n        var baseTexture;\n        var maxCharHeight = 0;\n        var textures = [];\n        for (var i = 0; i < charsList.length; i++) {\n            if (!canvas) {\n                canvas = document.createElement('canvas');\n                canvas.width = textureWidth;\n                canvas.height = textureHeight;\n                context = canvas.getContext('2d');\n                baseTexture = new core.BaseTexture(canvas, { resolution: resolution });\n                textures.push(new core.Texture(baseTexture));\n                fontData.page.push({\n                    id: textures.length - 1,\n                    file: '',\n                });\n            }\n            // Measure glyph dimensions\n            var metrics = text.TextMetrics.measureText(charsList[i], style, false, canvas);\n            var width = metrics.width;\n            var height = Math.ceil(metrics.height);\n            // This is ugly - but italics are given more space so they don't overlap\n            var textureGlyphWidth = Math.ceil((style.fontStyle === 'italic' ? 2 : 1) * width);\n            // Can't fit char anymore: next canvas please!\n            if (positionY >= textureHeight - (height * resolution)) {\n                if (positionY === 0) {\n                    // We don't want user debugging an infinite loop (or do we? :)\n                    throw new Error(\"[BitmapFont] textureHeight \" + textureHeight + \"px is \"\n                        + (\"too small for \" + style.fontSize + \"px fonts\"));\n                }\n                --i;\n                // Create new atlas once current has filled up\n                canvas = null;\n                context = null;\n                baseTexture = null;\n                positionY = 0;\n                positionX = 0;\n                maxCharHeight = 0;\n                continue;\n            }\n            maxCharHeight = Math.max(height + metrics.fontProperties.descent, maxCharHeight);\n            // Wrap line once full row has been rendered\n            if ((textureGlyphWidth * resolution) + positionX >= lineWidth) {\n                --i;\n                positionY += maxCharHeight * resolution;\n                positionY = Math.ceil(positionY);\n                positionX = 0;\n                maxCharHeight = 0;\n                continue;\n            }\n            drawGlyph(canvas, context, metrics, positionX, positionY, resolution, style);\n            // Unique (numeric) ID mapping to this glyph\n            var id = metrics.text.charCodeAt(0);\n            // Create a texture holding just the glyph\n            fontData.char.push({\n                id: id,\n                page: textures.length - 1,\n                x: positionX / resolution,\n                y: positionY / resolution,\n                width: textureGlyphWidth,\n                height: height,\n                xoffset: 0,\n                yoffset: 0,\n                xadvance: Math.ceil(width\n                    - (style.dropShadow ? style.dropShadowDistance : 0)\n                    - (style.stroke ? style.strokeThickness : 0)),\n            });\n            positionX += (textureGlyphWidth + (2 * padding)) * resolution;\n            positionX = Math.ceil(positionX);\n        }\n        // Brute-force kerning info, this can be expensive b/c it's an O(n\u00b2),\n        // but we're using measureText which is native and fast.\n        for (var i = 0, len = charsList.length; i < len; i++) {\n            var first = charsList[i];\n            for (var j = 0; j < len; j++) {\n                var second = charsList[j];\n                var c1 = context.measureText(first).width;\n                var c2 = context.measureText(second).width;\n                var total = context.measureText(first + second).width;\n                var amount = total - (c1 + c2);\n                if (amount) {\n                    fontData.kerning.push({\n                        first: first.charCodeAt(0),\n                        second: second.charCodeAt(0),\n                        amount: amount,\n                    });\n                }\n            }\n        }\n        var font = new BitmapFont(fontData, textures, true);\n        // Make it easier to replace a font\n        if (BitmapFont.available[name] !== undefined) {\n            BitmapFont.uninstall(name);\n        }\n        BitmapFont.available[name] = font;\n        return font;\n    };\n    /**\n     * This character set includes all the letters in the alphabet (both lower- and upper- case).\n     * @readonly\n     * @static\n     * @member {string[][]}\n     * @example\n     * BitmapFont.from(\"ExampleFont\", style, { chars: BitmapFont.ALPHA })\n     */\n    BitmapFont.ALPHA = [['a', 'z'], ['A', 'Z'], ' '];\n    /**\n     * This character set includes all decimal digits (from 0 to 9).\n     * @readonly\n     * @static\n     * @member {string[][]}\n     * @example\n     * BitmapFont.from(\"ExampleFont\", style, { chars: BitmapFont.NUMERIC })\n     */\n    BitmapFont.NUMERIC = [['0', '9']];\n    /**\n     * This character set is the union of `BitmapFont.ALPHA` and `BitmapFont.NUMERIC`.\n     * @readonly\n     * @static\n     * @member {string[][]}\n     */\n    BitmapFont.ALPHANUMERIC = [['a', 'z'], ['A', 'Z'], ['0', '9'], ' '];\n    /**\n     * This character set consists of all the ASCII table.\n     * @readonly\n     * @static\n     * @member {string[][]}\n     * @see http://www.asciitable.com/\n     */\n    BitmapFont.ASCII = [[' ', '~']];\n    /**\n     * Collection of default options when using `BitmapFont.from`.\n     *\n     * @readonly\n     * @static\n     * @member {PIXI.IBitmapFontOptions}\n     * @property {number} resolution=1\n     * @property {number} textureWidth=512\n     * @property {number} textureHeight=512\n     * @property {number} padding=4\n     * @property {string|string[]|string[][]} chars = PIXI.BitmapFont.ALPHANUMERIC\n     */\n    BitmapFont.defaultOptions = {\n        resolution: 1,\n        textureWidth: 512,\n        textureHeight: 512,\n        padding: 4,\n        chars: BitmapFont.ALPHANUMERIC,\n    };\n    /**\n     * Collection of available/installed fonts.\n     *\n     * @readonly\n     * @static\n     * @member {Object.<string, PIXI.BitmapFont>}\n     */\n    BitmapFont.available = {};\n    return BitmapFont;\n}());\n/**\n * @memberof PIXI\n * @interface IBitmapFontOptions\n * @property {string | string[] | string[][]} [chars=PIXI.BitmapFont.ALPHANUMERIC] - the character set to generate\n * @property {number} [resolution=1] - the resolution for rendering\n * @property {number} [padding=4] - the padding between glyphs in the atlas\n * @property {number} [textureWidth=512] - the width of the texture atlas\n * @property {number} [textureHeight=512] - the height of the texture atlas\n */\n\nvar pageMeshDataPool = [];\nvar charRenderDataPool = [];\n/**\n * A BitmapText object will create a line or multiple lines of text using bitmap font.\n *\n * The primary advantage of this class over Text is that all of your textures are pre-generated and loading,\n * meaning that rendering is fast, and changing text has no performance implications.\n *\n * Supporting character sets other than latin, such as CJK languages, may be impractical due to the number of characters.\n *\n * To split a line you can use '\\n', '\\r' or '\\r\\n' in your string.\n *\n * PixiJS can auto-generate fonts on-the-fly using BitmapFont or use fnt files provided by:\n * http://www.angelcode.com/products/bmfont/ for Windows or\n * http://www.bmglyph.com/ for Mac.\n *\n * A BitmapText can only be created when the font is loaded.\n *\n * ```js\n * // in this case the font is in a file called 'desyrel.fnt'\n * let bitmapText = new PIXI.BitmapText(\"text using a fancy font!\", {\n *   fontName: \"Desyrel\",\n *   fontSize: 35,\n *   align: \"right\"\n * });\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nvar BitmapText = /** @class */ (function (_super) {\n    __extends(BitmapText, _super);\n    /**\n     * @param {string} text - A string that you would like the text to display.\n     * @param {object} style - The style parameters.\n     * @param {string} style.fontName - The installed BitmapFont name.\n     * @param {number} [style.fontSize] - The size of the font in pixels, e.g. 24. If undefined,\n     *.     this will default to the BitmapFont size.\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center', 'right' or 'justify'),\n     *      does not affect single line text.\n     * @param {number} [style.tint=0xFFFFFF] - The tint color.\n     * @param {number} [style.letterSpacing=0] - The amount of spacing between letters.\n     * @param {number} [style.maxWidth=0] - The max width of the text before line wrapping.\n     */\n    function BitmapText(text, style) {\n        if (style === void 0) { style = {}; }\n        var _this = _super.call(this) || this;\n        _this._tint = 0xFFFFFF;\n        // Apply the defaults\n        var _a = Object.assign({}, BitmapText.styleDefaults, style), align = _a.align, tint = _a.tint, maxWidth = _a.maxWidth, letterSpacing = _a.letterSpacing, fontName = _a.fontName, fontSize = _a.fontSize;\n        if (!BitmapFont.available[fontName]) {\n            throw new Error(\"Missing BitmapFont \\\"\" + fontName + \"\\\"\");\n        }\n        /**\n         * Collection of page mesh data.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._activePagesMeshData = [];\n        /**\n         * Private tracker for the width of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        _this._textWidth = 0;\n        /**\n         * Private tracker for the height of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        _this._textHeight = 0;\n        /**\n         * Private tracker for the current text align.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._align = align;\n        /**\n         * Private tracker for the current tint.\n         *\n         * @member {number}\n         * @private\n         */\n        _this._tint = tint;\n        /**\n         * Private tracker for the current font name.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._fontName = fontName;\n        /**\n         * Private tracker for the current font size.\n         *\n         * @member {number}\n         * @private\n         */\n        _this._fontSize = fontSize || BitmapFont.available[fontName].size;\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._text = text;\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting value to 0\n         *\n         * @member {number}\n         * @private\n         */\n        _this._maxWidth = maxWidth;\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * ie: when trying to vertically align. (Internally used)\n         *\n         * @member {number}\n         * @private\n         */\n        _this._maxLineHeight = 0;\n        /**\n         * Letter spacing. This is useful for setting the space between characters.\n         * @member {number}\n         * @private\n         */\n        _this._letterSpacing = letterSpacing;\n        /**\n         * Text anchor. read-only\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        _this._anchor = new math.ObservablePoint(function () { _this.dirty = true; }, _this, 0, 0);\n        /**\n         * If true PixiJS will Math.floor() x/y values when rendering\n         *\n         * @member {boolean}\n         * @default PIXI.settings.ROUND_PIXELS\n         */\n        _this._roundPixels = settings.settings.ROUND_PIXELS;\n        /**\n         * Set to `true` if the BitmapText needs to be redrawn.\n         *\n         * @member {boolean}\n         */\n        _this.dirty = true;\n        /**\n         * Cached char texture is destroyed when BitmapText is destroyed\n         * @member {Record<number, Texture>}\n         * @private\n         */\n        _this._textureCache = {};\n        return _this;\n    }\n    /**\n     * Renders text and updates it when needed. This should only be called\n     * if the BitmapFont is regenerated.\n     */\n    BitmapText.prototype.updateText = function () {\n        var _a;\n        var data = BitmapFont.available[this._fontName];\n        var scale = this._fontSize / data.size;\n        var pos = new math.Point();\n        var chars = [];\n        var lineWidths = [];\n        var lineSpaces = [];\n        var text = this._text.replace(/(?:\\r\\n|\\r)/g, '\\n') || ' ';\n        var textLength = text.length;\n        var maxWidth = this._maxWidth * data.size / this._fontSize;\n        var prevCharCode = null;\n        var lastLineWidth = 0;\n        var maxLineWidth = 0;\n        var line = 0;\n        var lastBreakPos = -1;\n        var lastBreakWidth = 0;\n        var spacesRemoved = 0;\n        var maxLineHeight = 0;\n        var spaceCount = 0;\n        for (var i = 0; i < textLength; i++) {\n            var charCode = text.charCodeAt(i);\n            var char = text.charAt(i);\n            if ((/(?:\\s)/).test(char)) {\n                lastBreakPos = i;\n                lastBreakWidth = lastLineWidth;\n                spaceCount++;\n            }\n            if (char === '\\r' || char === '\\n') {\n                lineWidths.push(lastLineWidth);\n                lineSpaces.push(-1);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                ++line;\n                ++spacesRemoved;\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                spaceCount = 0;\n                continue;\n            }\n            var charData = data.chars[charCode];\n            if (!charData) {\n                continue;\n            }\n            if (prevCharCode && charData.kerning[prevCharCode]) {\n                pos.x += charData.kerning[prevCharCode];\n            }\n            var charRenderData = charRenderDataPool.pop() || {\n                texture: core.Texture.EMPTY,\n                line: 0,\n                charCode: 0,\n                prevSpaces: 0,\n                position: new math.Point(),\n            };\n            charRenderData.texture = charData.texture;\n            charRenderData.line = line;\n            charRenderData.charCode = charCode;\n            charRenderData.position.x = pos.x + charData.xOffset + (this._letterSpacing / 2);\n            charRenderData.position.y = pos.y + charData.yOffset;\n            charRenderData.prevSpaces = spaceCount;\n            chars.push(charRenderData);\n            pos.x += charData.xAdvance + this._letterSpacing;\n            lastLineWidth = pos.x;\n            maxLineHeight = Math.max(maxLineHeight, (charData.yOffset + charData.texture.height));\n            prevCharCode = charCode;\n            if (lastBreakPos !== -1 && maxWidth > 0 && pos.x > maxWidth) {\n                ++spacesRemoved;\n                utils.removeItems(chars, 1 + lastBreakPos - spacesRemoved, 1 + i - lastBreakPos);\n                i = lastBreakPos;\n                lastBreakPos = -1;\n                lineWidths.push(lastBreakWidth);\n                lineSpaces.push(chars.length > 0 ? chars[chars.length - 1].prevSpaces : 0);\n                maxLineWidth = Math.max(maxLineWidth, lastBreakWidth);\n                line++;\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                spaceCount = 0;\n            }\n        }\n        var lastChar = text.charAt(text.length - 1);\n        if (lastChar !== '\\r' && lastChar !== '\\n') {\n            if ((/(?:\\s)/).test(lastChar)) {\n                lastLineWidth = lastBreakWidth;\n            }\n            lineWidths.push(lastLineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n            lineSpaces.push(-1);\n        }\n        var lineAlignOffsets = [];\n        for (var i = 0; i <= line; i++) {\n            var alignOffset = 0;\n            if (this._align === 'right') {\n                alignOffset = maxLineWidth - lineWidths[i];\n            }\n            else if (this._align === 'center') {\n                alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n            }\n            else if (this._align === 'justify') {\n                alignOffset = lineSpaces[i] < 0 ? 0 : (maxLineWidth - lineWidths[i]) / lineSpaces[i];\n            }\n            lineAlignOffsets.push(alignOffset);\n        }\n        var lenChars = chars.length;\n        var pagesMeshData = {};\n        var newPagesMeshData = [];\n        var activePagesMeshData = this._activePagesMeshData;\n        for (var i = 0; i < activePagesMeshData.length; i++) {\n            pageMeshDataPool.push(activePagesMeshData[i]);\n        }\n        for (var i = 0; i < lenChars; i++) {\n            var texture = chars[i].texture;\n            var baseTextureUid = texture.baseTexture.uid;\n            if (!pagesMeshData[baseTextureUid]) {\n                var pageMeshData = pageMeshDataPool.pop();\n                if (!pageMeshData) {\n                    var geometry = new mesh.MeshGeometry();\n                    var material = new mesh.MeshMaterial(core.Texture.EMPTY);\n                    var mesh$1 = new mesh.Mesh(geometry, material);\n                    pageMeshData = {\n                        index: 0,\n                        indexCount: 0,\n                        vertexCount: 0,\n                        uvsCount: 0,\n                        total: 0,\n                        mesh: mesh$1,\n                        vertices: null,\n                        uvs: null,\n                        indices: null,\n                    };\n                }\n                // reset data..\n                pageMeshData.index = 0;\n                pageMeshData.indexCount = 0;\n                pageMeshData.vertexCount = 0;\n                pageMeshData.uvsCount = 0;\n                pageMeshData.total = 0;\n                // TODO need to get page texture here somehow..\n                var _textureCache = this._textureCache;\n                _textureCache[baseTextureUid] = _textureCache[baseTextureUid] || new core.Texture(texture.baseTexture);\n                pageMeshData.mesh.texture = _textureCache[baseTextureUid];\n                pageMeshData.mesh.tint = this._tint;\n                newPagesMeshData.push(pageMeshData);\n                pagesMeshData[baseTextureUid] = pageMeshData;\n            }\n            pagesMeshData[baseTextureUid].total++;\n        }\n        // lets find any previously active pageMeshDatas that are no longer required for\n        // the updated text (if any), removed and return them to the pool.\n        for (var i = 0; i < activePagesMeshData.length; i++) {\n            if (newPagesMeshData.indexOf(activePagesMeshData[i]) === -1) {\n                this.removeChild(activePagesMeshData[i].mesh);\n            }\n        }\n        // next lets add any new meshes, that have not yet been added to this BitmapText\n        // we only add if its not already a child of this BitmapObject\n        for (var i = 0; i < newPagesMeshData.length; i++) {\n            if (newPagesMeshData[i].mesh.parent !== this) {\n                this.addChild(newPagesMeshData[i].mesh);\n            }\n        }\n        // active page mesh datas are set to be the new pages added.\n        this._activePagesMeshData = newPagesMeshData;\n        for (var i in pagesMeshData) {\n            var pageMeshData = pagesMeshData[i];\n            var total = pageMeshData.total;\n            // lets only allocate new buffers if we can fit the new text in the current ones..\n            // unless that is, we will be batching. Currently batching dose not respect the size property of mesh\n            if (!(((_a = pageMeshData.indices) === null || _a === void 0 ? void 0 : _a.length) > 6 * total) || pageMeshData.vertices.length < mesh.Mesh.BATCHABLE_SIZE * 2) {\n                pageMeshData.vertices = new Float32Array(4 * 2 * total);\n                pageMeshData.uvs = new Float32Array(4 * 2 * total);\n                pageMeshData.indices = new Uint16Array(6 * total);\n            }\n            else {\n                var total_1 = pageMeshData.total;\n                var vertices = pageMeshData.vertices;\n                // Clear the garbage at the end of the vertices buffer. This will prevent the bounds miscalculation.\n                for (var i_1 = total_1 * 4 * 2; i_1 < vertices.length; i_1++) {\n                    vertices[i_1] = 0;\n                }\n            }\n            // as a buffer maybe bigger than the current word, we set the size of the meshMaterial\n            // to match the number of letters needed\n            pageMeshData.mesh.size = 6 * total;\n        }\n        for (var i = 0; i < lenChars; i++) {\n            var char = chars[i];\n            var offset = char.position.x + (lineAlignOffsets[char.line] * (this._align === 'justify' ? char.prevSpaces : 1));\n            if (this._roundPixels) {\n                offset = Math.round(offset);\n            }\n            var xPos = offset * scale;\n            var yPos = char.position.y * scale;\n            var texture = char.texture;\n            var pageMesh = pagesMeshData[texture.baseTexture.uid];\n            var textureFrame = texture.frame;\n            var textureUvs = texture._uvs;\n            var index = pageMesh.index++;\n            pageMesh.indices[(index * 6) + 0] = 0 + (index * 4);\n            pageMesh.indices[(index * 6) + 1] = 1 + (index * 4);\n            pageMesh.indices[(index * 6) + 2] = 2 + (index * 4);\n            pageMesh.indices[(index * 6) + 3] = 0 + (index * 4);\n            pageMesh.indices[(index * 6) + 4] = 2 + (index * 4);\n            pageMesh.indices[(index * 6) + 5] = 3 + (index * 4);\n            pageMesh.vertices[(index * 8) + 0] = xPos;\n            pageMesh.vertices[(index * 8) + 1] = yPos;\n            pageMesh.vertices[(index * 8) + 2] = xPos + (textureFrame.width * scale);\n            pageMesh.vertices[(index * 8) + 3] = yPos;\n            pageMesh.vertices[(index * 8) + 4] = xPos + (textureFrame.width * scale);\n            pageMesh.vertices[(index * 8) + 5] = yPos + (textureFrame.height * scale);\n            pageMesh.vertices[(index * 8) + 6] = xPos;\n            pageMesh.vertices[(index * 8) + 7] = yPos + (textureFrame.height * scale);\n            pageMesh.uvs[(index * 8) + 0] = textureUvs.x0;\n            pageMesh.uvs[(index * 8) + 1] = textureUvs.y0;\n            pageMesh.uvs[(index * 8) + 2] = textureUvs.x1;\n            pageMesh.uvs[(index * 8) + 3] = textureUvs.y1;\n            pageMesh.uvs[(index * 8) + 4] = textureUvs.x2;\n            pageMesh.uvs[(index * 8) + 5] = textureUvs.y2;\n            pageMesh.uvs[(index * 8) + 6] = textureUvs.x3;\n            pageMesh.uvs[(index * 8) + 7] = textureUvs.y3;\n        }\n        this._textWidth = maxLineWidth * scale;\n        this._textHeight = (pos.y + data.lineHeight) * scale;\n        for (var i in pagesMeshData) {\n            var pageMeshData = pagesMeshData[i];\n            // apply anchor\n            if (this.anchor.x !== 0 || this.anchor.y !== 0) {\n                var vertexCount = 0;\n                var anchorOffsetX = this._textWidth * this.anchor.x;\n                var anchorOffsetY = this._textHeight * this.anchor.y;\n                for (var i_2 = 0; i_2 < pageMeshData.total; i_2++) {\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                }\n            }\n            this._maxLineHeight = maxLineHeight * scale;\n            var vertexBuffer = pageMeshData.mesh.geometry.getBuffer('aVertexPosition');\n            var textureBuffer = pageMeshData.mesh.geometry.getBuffer('aTextureCoord');\n            var indexBuffer = pageMeshData.mesh.geometry.getIndex();\n            vertexBuffer.data = pageMeshData.vertices;\n            textureBuffer.data = pageMeshData.uvs;\n            indexBuffer.data = pageMeshData.indices;\n            vertexBuffer.update();\n            textureBuffer.update();\n            indexBuffer.update();\n        }\n        for (var i = 0; i < chars.length; i++) {\n            charRenderDataPool.push(chars[i]);\n        }\n    };\n    /**\n     * Updates the transform of this object\n     *\n     * @private\n     */\n    BitmapText.prototype.updateTransform = function () {\n        this.validate();\n        this.containerUpdateTransform();\n    };\n    /**\n     * Validates text before calling parent's getLocalBounds\n     *\n     * @return {PIXI.Rectangle} The rectangular bounding area\n     */\n    BitmapText.prototype.getLocalBounds = function () {\n        this.validate();\n        return _super.prototype.getLocalBounds.call(this);\n    };\n    /**\n     * Updates text when needed\n     *\n     * @private\n     */\n    BitmapText.prototype.validate = function () {\n        if (this.dirty) {\n            this.updateText();\n            this.dirty = false;\n        }\n    };\n    Object.defineProperty(BitmapText.prototype, \"tint\", {\n        /**\n         * The tint of the BitmapText object.\n         *\n         * @member {number}\n         * @default 0xffffff\n         */\n        get: function () {\n            return this._tint;\n        },\n        set: function (value) {\n            if (this._tint === value)\n                { return; }\n            this._tint = value;\n            for (var i = 0; i < this._activePagesMeshData.length; i++) {\n                this._activePagesMeshData[i].mesh.tint = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"align\", {\n        /**\n         * The alignment of the BitmapText object.\n         *\n         * @member {string}\n         * @default 'left'\n         */\n        get: function () {\n            return this._align;\n        },\n        set: function (value) {\n            if (this._align !== value) {\n                this._align = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"fontName\", {\n        /**\n         * The name of the BitmapFont.\n         *\n         * @member {string}\n         */\n        get: function () {\n            return this._fontName;\n        },\n        set: function (value) {\n            if (!BitmapFont.available[value]) {\n                throw new Error(\"Missing BitmapFont \\\"\" + value + \"\\\"\");\n            }\n            if (this._fontName !== value) {\n                this._fontName = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"fontSize\", {\n        /**\n         * The size of the font to display.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._fontSize;\n        },\n        set: function (value) {\n            if (this._fontSize !== value) {\n                this._fontSize = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"anchor\", {\n        /**\n         * The anchor sets the origin point of the text.\n         *\n         * The default is `(0,0)`, this means the text's origin is the top left.\n         *\n         * Setting the anchor to `(0.5,0.5)` means the text's origin is centered.\n         *\n         * Setting the anchor to `(1,1)` would mean the text's origin point will be the bottom right corner.\n         *\n         * @member {PIXI.Point | number}\n         */\n        get: function () {\n            return this._anchor;\n        },\n        set: function (value) {\n            if (typeof value === 'number') {\n                this._anchor.set(value);\n            }\n            else {\n                this._anchor.copyFrom(value);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"text\", {\n        /**\n         * The text of the BitmapText object.\n         *\n         * @member {string}\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (text) {\n            text = String(text === null || text === undefined ? '' : text);\n            if (this._text === text) {\n                return;\n            }\n            this._text = text;\n            this.dirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"maxWidth\", {\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting the value to 0.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._maxWidth;\n        },\n        set: function (value) {\n            if (this._maxWidth === value) {\n                return;\n            }\n            this._maxWidth = value;\n            this.dirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"maxLineHeight\", {\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * i.e. when trying to vertically align.\n         *\n         * @member {number}\n         * @readonly\n         */\n        get: function () {\n            this.validate();\n            return this._maxLineHeight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"textWidth\", {\n        /**\n         * The width of the overall text, different from fontSize,\n         * which is defined in the style object.\n         *\n         * @member {number}\n         * @readonly\n         */\n        get: function () {\n            this.validate();\n            return this._textWidth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"letterSpacing\", {\n        /**\n         * Additional space between characters.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._letterSpacing;\n        },\n        set: function (value) {\n            if (this._letterSpacing !== value) {\n                this._letterSpacing = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"roundPixels\", {\n        /**\n         * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n         * The main disadvantage is movement of objects may appear less smooth.\n         * To set the global default, change {@link PIXI.settings.ROUND_PIXELS}\n         *\n         * @member {boolean}\n         * @default PIXI.settings.ROUND_PIXELS\n         */\n        get: function () {\n            return this._roundPixels;\n        },\n        set: function (value) {\n            if (value !== this._roundPixels) {\n                this._roundPixels = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"textHeight\", {\n        /**\n         * The height of the overall text, different from fontSize,\n         * which is defined in the style object.\n         *\n         * @member {number}\n         * @readonly\n         */\n        get: function () {\n            this.validate();\n            return this._textHeight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BitmapText.prototype.destroy = function (options) {\n        var _textureCache = this._textureCache;\n        for (var id in _textureCache) {\n            var texture = _textureCache[id];\n            texture.destroy();\n            delete _textureCache[id];\n        }\n        this._textureCache = null;\n        _super.prototype.destroy.call(this, options);\n    };\n    BitmapText.styleDefaults = {\n        align: 'left',\n        tint: 0xFFFFFF,\n        maxWidth: 0,\n        letterSpacing: 0,\n    };\n    return BitmapText;\n}(display.Container));\n\n/**\n * {@link PIXI.Loader Loader} middleware for loading\n * bitmap-based fonts suitable for using with {@link PIXI.BitmapText}.\n * @class\n * @memberof PIXI\n * @implements PIXI.ILoaderPlugin\n */\nvar BitmapFontLoader = /** @class */ (function () {\n    function BitmapFontLoader() {\n    }\n    /**\n     * Called when the plugin is installed.\n     *\n     * @see PIXI.Loader.registerPlugin\n     */\n    BitmapFontLoader.add = function () {\n        loaders.LoaderResource.setExtensionXhrType('fnt', loaders.LoaderResource.XHR_RESPONSE_TYPE.TEXT);\n    };\n    /**\n     * Called after a resource is loaded.\n     * @see PIXI.Loader.loaderMiddleware\n     * @param {PIXI.LoaderResource} resource\n     * @param {function} next\n     */\n    BitmapFontLoader.use = function (resource, next) {\n        var format = autoDetectFormat(resource.data);\n        // Resource was not recognised as any of the expected font data format\n        if (!format) {\n            next();\n            return;\n        }\n        var baseUrl = BitmapFontLoader.getBaseUrl(this, resource);\n        var data = format.parse(resource.data);\n        var textures = {};\n        // Handle completed, when the number of textures\n        // load is the same number as references in the fnt file\n        var completed = function (page) {\n            textures[page.metadata.pageFile] = page.texture;\n            if (Object.keys(textures).length === data.page.length) {\n                resource.bitmapFont = BitmapFont.install(data, textures, true);\n                next();\n            }\n        };\n        for (var i = 0; i < data.page.length; ++i) {\n            var pageFile = data.page[i].file;\n            var url = baseUrl + pageFile;\n            var exists = false;\n            // incase the image is loaded outside\n            // using the same loader, resource will be available\n            for (var name in this.resources) {\n                var bitmapResource = this.resources[name];\n                if (bitmapResource.url === url) {\n                    bitmapResource.metadata.pageFile = pageFile;\n                    if (bitmapResource.texture) {\n                        completed(bitmapResource);\n                    }\n                    else {\n                        bitmapResource.onAfterMiddleware.add(completed);\n                    }\n                    exists = true;\n                    break;\n                }\n            }\n            // texture is not loaded, we'll attempt to add\n            // it to the load and add the texture to the list\n            if (!exists) {\n                // Standard loading options for images\n                var options = {\n                    crossOrigin: resource.crossOrigin,\n                    loadType: loaders.LoaderResource.LOAD_TYPE.IMAGE,\n                    metadata: Object.assign({ pageFile: pageFile }, resource.metadata.imageMetadata),\n                    parentResource: resource,\n                };\n                this.add(url, options, completed);\n            }\n        }\n    };\n    /**\n     * Get folder path from a resource\n     * @private\n     * @param {PIXI.Loader} loader\n     * @param {PIXI.LoaderResource} resource\n     * @return {string}\n     */\n    BitmapFontLoader.getBaseUrl = function (loader, resource) {\n        var resUrl = !resource.isDataUrl ? BitmapFontLoader.dirname(resource.url) : '';\n        if (resource.isDataUrl) {\n            if (resUrl === '.') {\n                resUrl = '';\n            }\n            if (loader.baseUrl && resUrl) {\n                // if baseurl has a trailing slash then add one to resUrl so the replace works below\n                if (loader.baseUrl.charAt(loader.baseUrl.length - 1) === '/') {\n                    resUrl += '/';\n                }\n            }\n        }\n        // remove baseUrl from resUrl\n        resUrl = resUrl.replace(loader.baseUrl, '');\n        // if there is an resUrl now, it needs a trailing slash. Ensure that it does if the string isn't empty.\n        if (resUrl && resUrl.charAt(resUrl.length - 1) !== '/') {\n            resUrl += '/';\n        }\n        return resUrl;\n    };\n    /**\n     * Replacement for NodeJS's path.dirname\n     * @private\n     * @param {string} url - Path to get directory for\n     */\n    BitmapFontLoader.dirname = function (url) {\n        var dir = url\n            .replace(/\\\\/g, '/') // convert windows notation to UNIX notation, URL-safe because it's a forbidden character\n            .replace(/\\/$/, '') // replace trailing slash\n            .replace(/\\/[^\\/]*$/, ''); // remove everything after the last\n        // File request is relative, use current directory\n        if (dir === url) {\n            return '.';\n        }\n        // Started with a slash\n        else if (dir === '') {\n            return '/';\n        }\n        return dir;\n    };\n    return BitmapFontLoader;\n}());\n\nexports.BitmapFont = BitmapFont;\nexports.BitmapFontData = BitmapFontData;\nexports.BitmapFontLoader = BitmapFontLoader;\nexports.BitmapText = BitmapText;\n//# sourceMappingURL=text-bitmap.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","autoDetectFormat","data","i","formats","length","test","generateFillStyle","canvas","context","style","resolution","lines","metrics","fillStyle","fill","Array","isArray","dropShadowCorrection","dropShadow","dropShadowDistance","padding","width","Math","ceil","height","slice","fillGradientStops","lengthPlus1","push","unshift","fillGradientType","text","TEXT_GRADIENT","LINEAR_VERTICAL","gradient","createLinearGradient","lastIterationStop","gradStopLineHeight","fontProperties","fontSize","strokeThickness","thisLineTop","j","lineHeight","clampedStop","max","lineStop","min","addColorStop","totalIterations","currentIteration","stop","defineProperty","value","math","settings","mesh","utils","core","display","loaders","setPrototypeOf","__proto__","p","hasOwnProperty","BitmapFontData","info","common","page","char","kerning","TextFormat","TextFormat.test","indexOf","parse","TextFormat.parse","txt","items","match","rawData","chars","kernings","name","attributeList","itemData","i_1","split","key","strValue","replace","floatValue","parseFloat","isNaN","font","forEach","face","size","parseInt","id","file","x","y","xoffset","yoffset","xadvance","first","second","amount","XMLFormat","XMLFormat.test","XMLDocument","getElementsByTagName","getAttribute","XMLFormat.parse","xml","letter","XMLStringFormat","XMLStringFormat.test","self","DOMParser","parseFromString","XMLStringFormat.parse","xmlTxt","BitmapFont","textures","ownsTextures","res","getResolutionOfUrl","pageTextures","_ownsTextures","_a","_b","page_1","_c","rect","Rectangle","frame","xOffset","yOffset","xAdvance","texture","Texture","baseTexture","_d","destroy","BitmapFont.prototype.destroy","install","BitmapFont.install","format","Error","fontData","available","uninstall","BitmapFont.uninstall","from","BitmapFont.from","textStyle","options","assign","defaultOptions","textureWidth","textureHeight","result","item","startCode","charCodeAt","endCode","j_1","String","fromCharCode","apply","TextStyle","fontFamily","positionY","positionX","maxCharHeight","document","createElement","getContext","BaseTexture","TextMetrics","measureText","textureGlyphWidth","fontStyle","descent","translate","scale","tx","ty","toFontString","lineWidth","textBaseline","lineJoin","miterLimit","strokeStyle","stroke","dropShadowColor","rgb","hex2rgb","string2hex","shadowColor","dropShadowAlpha","shadowBlur","dropShadowBlur","shadowOffsetX","cos","dropShadowAngle","shadowOffsetY","sin","strokeText","fillText","setTransform","len","c1","c2","undefined","ALPHA","NUMERIC","ALPHANUMERIC","ASCII","pageMeshDataPool","charRenderDataPool","BitmapText","_super","_this","call","_tint","styleDefaults","align","tint","maxWidth","letterSpacing","fontName","_activePagesMeshData","_textWidth","_textHeight","_align","_fontName","_fontSize","_text","_maxWidth","_maxLineHeight","_letterSpacing","_anchor","ObservablePoint","dirty","_roundPixels","ROUND_PIXELS","_textureCache","updateText","BitmapText.prototype.updateText","pos","Point","lineWidths","lineSpaces","textLength","prevCharCode","lastLineWidth","maxLineWidth","line","lastBreakPos","lastBreakWidth","spacesRemoved","maxLineHeight","spaceCount","charCode","charAt","charData","charRenderData","pop","EMPTY","prevSpaces","position","removeItems","lastChar","lineAlignOffsets","alignOffset","lenChars","pagesMeshData","newPagesMeshData","activePagesMeshData","baseTextureUid","uid","pageMeshData","geometry","MeshGeometry","material","MeshMaterial","index","indexCount","vertexCount","uvsCount","total","mesh$1","Mesh","vertices","uvs","indices","removeChild","parent","addChild","BATCHABLE_SIZE","Float32Array","Uint16Array","offset","round","yPos","pageMesh","textureFrame","textureUvs","_uvs","xPos","x0","y0","x1","y1","x2","y2","x3","y3","anchor","i_2","anchorOffsetX","anchorOffsetY","vertexBuffer","getBuffer","textureBuffer","indexBuffer","getIndex","update","updateTransform","BitmapText.prototype.updateTransform","validate","containerUpdateTransform","getLocalBounds","BitmapText.prototype.getLocalBounds","BitmapText.prototype.validate","get","set","enumerable","configurable","copyFrom","BitmapText.prototype.destroy","Container","BitmapFontLoader","add","BitmapFontLoader.add","LoaderResource","setExtensionXhrType","XHR_RESPONSE_TYPE","TEXT","use","BitmapFontLoader.use","resource","next","baseUrl","getBaseUrl","completed","metadata","pageFile","keys","bitmapFont","url","exists","resources","bitmapResource","onAfterMiddleware","crossOrigin","loadType","LOAD_TYPE","IMAGE","imageMetadata","parentResource","BitmapFontLoader.getBaseUrl","loader","resUrl","isDataUrl","dirname","BitmapFontLoader.dirname","dir"]
}
