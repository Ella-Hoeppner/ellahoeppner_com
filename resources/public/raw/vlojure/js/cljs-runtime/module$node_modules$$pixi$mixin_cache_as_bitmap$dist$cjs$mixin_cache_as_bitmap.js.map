{
"version":3,
"file":"module$node_modules$$pixi$mixin_cache_as_bitmap$dist$cjs$mixin_cache_as_bitmap.js",
"lineCount":32,
"mappings":"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",
"sources":["node_modules/@pixi/mixin-cache-as-bitmap/dist/cjs/mixin-cache-as-bitmap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$mixin_cache_as_bitmap$dist$cjs$mixin_cache_as_bitmap\"] = function(global,require,module,exports) {\n/*!\n * @pixi/mixin-cache-as-bitmap - v6.1.1\n * Compiled Fri, 06 Aug 2021 03:30:25 UTC\n *\n * @pixi/mixin-cache-as-bitmap is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar core = require('@pixi/core');\nvar sprite = require('@pixi/sprite');\nvar display = require('@pixi/display');\nvar math = require('@pixi/math');\nvar utils = require('@pixi/utils');\nvar settings = require('@pixi/settings');\n\n/*!\n * @pixi/constants - v6.1.1\n * Compiled Fri, 06 Aug 2021 03:30:25 UTC\n *\n * @pixi/constants is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n/**\n * Different types of environments for WebGL.\n *\n * @static\n * @memberof PIXI\n * @name ENV\n * @enum {number}\n * @property {number} WEBGL_LEGACY - Used for older v1 WebGL devices. PixiJS will aim to ensure compatibility\n *  with older / less advanced devices. If you experience unexplained flickering prefer this environment.\n * @property {number} WEBGL - Version 1 of WebGL\n * @property {number} WEBGL2 - Version 2 of WebGL\n */\nvar ENV;\n(function (ENV) {\n    ENV[ENV[\"WEBGL_LEGACY\"] = 0] = \"WEBGL_LEGACY\";\n    ENV[ENV[\"WEBGL\"] = 1] = \"WEBGL\";\n    ENV[ENV[\"WEBGL2\"] = 2] = \"WEBGL2\";\n})(ENV || (ENV = {}));\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @memberof PIXI\n * @name RENDERER_TYPE\n * @enum {number}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nvar RENDERER_TYPE;\n(function (RENDERER_TYPE) {\n    RENDERER_TYPE[RENDERER_TYPE[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    RENDERER_TYPE[RENDERER_TYPE[\"WEBGL\"] = 1] = \"WEBGL\";\n    RENDERER_TYPE[RENDERER_TYPE[\"CANVAS\"] = 2] = \"CANVAS\";\n})(RENDERER_TYPE || (RENDERER_TYPE = {}));\n/**\n * Bitwise OR of masks that indicate the buffers to be cleared.\n *\n * @static\n * @memberof PIXI\n * @name BUFFER_BITS\n * @enum {number}\n * @property {number} COLOR - Indicates the buffers currently enabled for color writing.\n * @property {number} DEPTH - Indicates the depth buffer.\n * @property {number} STENCIL - Indicates the stencil buffer.\n */\nvar BUFFER_BITS;\n(function (BUFFER_BITS) {\n    BUFFER_BITS[BUFFER_BITS[\"COLOR\"] = 16384] = \"COLOR\";\n    BUFFER_BITS[BUFFER_BITS[\"DEPTH\"] = 256] = \"DEPTH\";\n    BUFFER_BITS[BUFFER_BITS[\"STENCIL\"] = 1024] = \"STENCIL\";\n})(BUFFER_BITS || (BUFFER_BITS = {}));\n/**\n * Various blend modes supported by PIXI.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @memberof PIXI\n * @name BLEND_MODES\n * @enum {number}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n * @property {number} NORMAL_NPM\n * @property {number} ADD_NPM\n * @property {number} SCREEN_NPM\n * @property {number} NONE\n * @property {number} SRC_IN\n * @property {number} SRC_OUT\n * @property {number} SRC_ATOP\n * @property {number} DST_OVER\n * @property {number} DST_IN\n * @property {number} DST_OUT\n * @property {number} DST_ATOP\n * @property {number} SUBTRACT\n * @property {number} SRC_OVER\n * @property {number} ERASE\n * @property {number} XOR\n */\nvar BLEND_MODES;\n(function (BLEND_MODES) {\n    BLEND_MODES[BLEND_MODES[\"NORMAL\"] = 0] = \"NORMAL\";\n    BLEND_MODES[BLEND_MODES[\"ADD\"] = 1] = \"ADD\";\n    BLEND_MODES[BLEND_MODES[\"MULTIPLY\"] = 2] = \"MULTIPLY\";\n    BLEND_MODES[BLEND_MODES[\"SCREEN\"] = 3] = \"SCREEN\";\n    BLEND_MODES[BLEND_MODES[\"OVERLAY\"] = 4] = \"OVERLAY\";\n    BLEND_MODES[BLEND_MODES[\"DARKEN\"] = 5] = \"DARKEN\";\n    BLEND_MODES[BLEND_MODES[\"LIGHTEN\"] = 6] = \"LIGHTEN\";\n    BLEND_MODES[BLEND_MODES[\"COLOR_DODGE\"] = 7] = \"COLOR_DODGE\";\n    BLEND_MODES[BLEND_MODES[\"COLOR_BURN\"] = 8] = \"COLOR_BURN\";\n    BLEND_MODES[BLEND_MODES[\"HARD_LIGHT\"] = 9] = \"HARD_LIGHT\";\n    BLEND_MODES[BLEND_MODES[\"SOFT_LIGHT\"] = 10] = \"SOFT_LIGHT\";\n    BLEND_MODES[BLEND_MODES[\"DIFFERENCE\"] = 11] = \"DIFFERENCE\";\n    BLEND_MODES[BLEND_MODES[\"EXCLUSION\"] = 12] = \"EXCLUSION\";\n    BLEND_MODES[BLEND_MODES[\"HUE\"] = 13] = \"HUE\";\n    BLEND_MODES[BLEND_MODES[\"SATURATION\"] = 14] = \"SATURATION\";\n    BLEND_MODES[BLEND_MODES[\"COLOR\"] = 15] = \"COLOR\";\n    BLEND_MODES[BLEND_MODES[\"LUMINOSITY\"] = 16] = \"LUMINOSITY\";\n    BLEND_MODES[BLEND_MODES[\"NORMAL_NPM\"] = 17] = \"NORMAL_NPM\";\n    BLEND_MODES[BLEND_MODES[\"ADD_NPM\"] = 18] = \"ADD_NPM\";\n    BLEND_MODES[BLEND_MODES[\"SCREEN_NPM\"] = 19] = \"SCREEN_NPM\";\n    BLEND_MODES[BLEND_MODES[\"NONE\"] = 20] = \"NONE\";\n    BLEND_MODES[BLEND_MODES[\"SRC_OVER\"] = 0] = \"SRC_OVER\";\n    BLEND_MODES[BLEND_MODES[\"SRC_IN\"] = 21] = \"SRC_IN\";\n    BLEND_MODES[BLEND_MODES[\"SRC_OUT\"] = 22] = \"SRC_OUT\";\n    BLEND_MODES[BLEND_MODES[\"SRC_ATOP\"] = 23] = \"SRC_ATOP\";\n    BLEND_MODES[BLEND_MODES[\"DST_OVER\"] = 24] = \"DST_OVER\";\n    BLEND_MODES[BLEND_MODES[\"DST_IN\"] = 25] = \"DST_IN\";\n    BLEND_MODES[BLEND_MODES[\"DST_OUT\"] = 26] = \"DST_OUT\";\n    BLEND_MODES[BLEND_MODES[\"DST_ATOP\"] = 27] = \"DST_ATOP\";\n    BLEND_MODES[BLEND_MODES[\"ERASE\"] = 26] = \"ERASE\";\n    BLEND_MODES[BLEND_MODES[\"SUBTRACT\"] = 28] = \"SUBTRACT\";\n    BLEND_MODES[BLEND_MODES[\"XOR\"] = 29] = \"XOR\";\n})(BLEND_MODES || (BLEND_MODES = {}));\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @memberof PIXI\n * @static\n * @name DRAW_MODES\n * @enum {number}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nvar DRAW_MODES;\n(function (DRAW_MODES) {\n    DRAW_MODES[DRAW_MODES[\"POINTS\"] = 0] = \"POINTS\";\n    DRAW_MODES[DRAW_MODES[\"LINES\"] = 1] = \"LINES\";\n    DRAW_MODES[DRAW_MODES[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    DRAW_MODES[DRAW_MODES[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(DRAW_MODES || (DRAW_MODES = {}));\n/**\n * Various GL texture/resources formats.\n *\n * @memberof PIXI\n * @static\n * @name FORMATS\n * @enum {number}\n * @property {number} RGBA=6408\n * @property {number} RGB=6407\n * @property {number} RG=33319\n * @property {number} RED=6403\n * @property {number} RGBA_INTEGER=36249\n * @property {number} RGB_INTEGER=36248\n * @property {number} RG_INTEGER=33320\n * @property {number} RED_INTEGER=36244\n * @property {number} ALPHA=6406\n * @property {number} LUMINANCE=6409\n * @property {number} LUMINANCE_ALPHA=6410\n * @property {number} DEPTH_COMPONENT=6402\n * @property {number} DEPTH_STENCIL=34041\n */\nvar FORMATS;\n(function (FORMATS) {\n    FORMATS[FORMATS[\"RGBA\"] = 6408] = \"RGBA\";\n    FORMATS[FORMATS[\"RGB\"] = 6407] = \"RGB\";\n    FORMATS[FORMATS[\"RG\"] = 33319] = \"RG\";\n    FORMATS[FORMATS[\"RED\"] = 6403] = \"RED\";\n    FORMATS[FORMATS[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n    FORMATS[FORMATS[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n    FORMATS[FORMATS[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n    FORMATS[FORMATS[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n    FORMATS[FORMATS[\"ALPHA\"] = 6406] = \"ALPHA\";\n    FORMATS[FORMATS[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n    FORMATS[FORMATS[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n    FORMATS[FORMATS[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n    FORMATS[FORMATS[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n})(FORMATS || (FORMATS = {}));\n/**\n * Various GL target types.\n *\n * @memberof PIXI\n * @static\n * @name TARGETS\n * @enum {number}\n * @property {number} TEXTURE_2D=3553\n * @property {number} TEXTURE_CUBE_MAP=34067\n * @property {number} TEXTURE_2D_ARRAY=35866\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_X=34069\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_X=34070\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Y=34071\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Y=34072\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Z=34073\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Z=34074\n */\nvar TARGETS;\n(function (TARGETS) {\n    TARGETS[TARGETS[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n    TARGETS[TARGETS[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n})(TARGETS || (TARGETS = {}));\n/**\n * Various GL data format types.\n *\n * @memberof PIXI\n * @static\n * @name TYPES\n * @enum {number}\n * @property {number} UNSIGNED_BYTE=5121\n * @property {number} UNSIGNED_SHORT=5123\n * @property {number} UNSIGNED_SHORT_5_6_5=33635\n * @property {number} UNSIGNED_SHORT_4_4_4_4=32819\n * @property {number} UNSIGNED_SHORT_5_5_5_1=32820\n * @property {number} UNSIGNED_INT=5125\n * @property {number} UNSIGNED_INT_10F_11F_11F_REV=35899\n * @property {number} UNSIGNED_INT_2_10_10_10_REV=33640\n * @property {number} UNSIGNED_INT_24_8=34042\n * @property {number} UNSIGNED_INT_5_9_9_9_REV=35902\n * @property {number} BYTE=5120\n * @property {number} SHORT=5122\n * @property {number} INT=5124\n * @property {number} FLOAT=5126\n * @property {number} FLOAT_32_UNSIGNED_INT_24_8_REV=36269\n * @property {number} HALF_FLOAT=36193\n */\nvar TYPES;\n(function (TYPES) {\n    TYPES[TYPES[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    TYPES[TYPES[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n    TYPES[TYPES[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    TYPES[TYPES[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n    TYPES[TYPES[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n    TYPES[TYPES[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n    TYPES[TYPES[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n    TYPES[TYPES[\"BYTE\"] = 5120] = \"BYTE\";\n    TYPES[TYPES[\"SHORT\"] = 5122] = \"SHORT\";\n    TYPES[TYPES[\"INT\"] = 5124] = \"INT\";\n    TYPES[TYPES[\"FLOAT\"] = 5126] = \"FLOAT\";\n    TYPES[TYPES[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n    TYPES[TYPES[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n})(TYPES || (TYPES = {}));\n/**\n * Various sampler types. Correspond to `sampler`, `isampler`, `usampler` GLSL types respectively.\n * WebGL1 works only with FLOAT.\n *\n * @memberof PIXI\n * @static\n * @name SAMPLER_TYPES\n * @enum {number}\n * @property {number} FLOAT=0\n * @property {number} INT=1\n * @property {number} UINT=2\n */\nvar SAMPLER_TYPES;\n(function (SAMPLER_TYPES) {\n    SAMPLER_TYPES[SAMPLER_TYPES[\"FLOAT\"] = 0] = \"FLOAT\";\n    SAMPLER_TYPES[SAMPLER_TYPES[\"INT\"] = 1] = \"INT\";\n    SAMPLER_TYPES[SAMPLER_TYPES[\"UINT\"] = 2] = \"UINT\";\n})(SAMPLER_TYPES || (SAMPLER_TYPES = {}));\n/**\n * The scale modes that are supported by pixi.\n *\n * The {@link PIXI.settings.SCALE_MODE} scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @memberof PIXI\n * @static\n * @name SCALE_MODES\n * @enum {number}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nvar SCALE_MODES;\n(function (SCALE_MODES) {\n    SCALE_MODES[SCALE_MODES[\"NEAREST\"] = 0] = \"NEAREST\";\n    SCALE_MODES[SCALE_MODES[\"LINEAR\"] = 1] = \"LINEAR\";\n})(SCALE_MODES || (SCALE_MODES = {}));\n/**\n * The wrap modes that are supported by pixi.\n *\n * The {@link PIXI.settings.WRAP_MODE} wrap mode affects the default wrapping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as WebGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @name WRAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nvar WRAP_MODES;\n(function (WRAP_MODES) {\n    WRAP_MODES[WRAP_MODES[\"CLAMP\"] = 33071] = \"CLAMP\";\n    WRAP_MODES[WRAP_MODES[\"REPEAT\"] = 10497] = \"REPEAT\";\n    WRAP_MODES[WRAP_MODES[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n})(WRAP_MODES || (WRAP_MODES = {}));\n/**\n * Mipmap filtering modes that are supported by pixi.\n *\n * The {@link PIXI.settings.MIPMAP_TEXTURES} affects default texture filtering.\n * Mipmaps are generated for a baseTexture if its `mipmap` field is `ON`,\n * or its `POW2` and texture dimensions are powers of 2.\n * Due to platform restriction, `ON` option will work like `POW2` for webgl-1.\n *\n * This property only affects WebGL.\n *\n * @name MIPMAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} OFF - No mipmaps\n * @property {number} POW2 - Generate mipmaps if texture dimensions are pow2\n * @property {number} ON - Always generate mipmaps\n * @property {number} ON_MANUAL - Use mipmaps, but do not auto-generate them; this is used with a resource\n *   that supports buffering each level-of-detail.\n */\nvar MIPMAP_MODES;\n(function (MIPMAP_MODES) {\n    MIPMAP_MODES[MIPMAP_MODES[\"OFF\"] = 0] = \"OFF\";\n    MIPMAP_MODES[MIPMAP_MODES[\"POW2\"] = 1] = \"POW2\";\n    MIPMAP_MODES[MIPMAP_MODES[\"ON\"] = 2] = \"ON\";\n    MIPMAP_MODES[MIPMAP_MODES[\"ON_MANUAL\"] = 3] = \"ON_MANUAL\";\n})(MIPMAP_MODES || (MIPMAP_MODES = {}));\n/**\n * How to treat textures with premultiplied alpha\n *\n * @name ALPHA_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NO_PREMULTIPLIED_ALPHA - Source is not premultiplied, leave it like that.\n *  Option for compressed and data textures that are created from typed arrays.\n * @property {number} PREMULTIPLY_ON_UPLOAD - Source is not premultiplied, premultiply on upload.\n *  Default option, used for all loaded images.\n * @property {number} PREMULTIPLIED_ALPHA - Source is already premultiplied\n *  Example: spine atlases with `_pma` suffix.\n * @property {number} NPM - Alias for NO_PREMULTIPLIED_ALPHA.\n * @property {number} UNPACK - Default option, alias for PREMULTIPLY_ON_UPLOAD.\n * @property {number} PMA - Alias for PREMULTIPLIED_ALPHA.\n */\nvar ALPHA_MODES;\n(function (ALPHA_MODES) {\n    ALPHA_MODES[ALPHA_MODES[\"NPM\"] = 0] = \"NPM\";\n    ALPHA_MODES[ALPHA_MODES[\"UNPACK\"] = 1] = \"UNPACK\";\n    ALPHA_MODES[ALPHA_MODES[\"PMA\"] = 2] = \"PMA\";\n    ALPHA_MODES[ALPHA_MODES[\"NO_PREMULTIPLIED_ALPHA\"] = 0] = \"NO_PREMULTIPLIED_ALPHA\";\n    ALPHA_MODES[ALPHA_MODES[\"PREMULTIPLY_ON_UPLOAD\"] = 1] = \"PREMULTIPLY_ON_UPLOAD\";\n    ALPHA_MODES[ALPHA_MODES[\"PREMULTIPLY_ALPHA\"] = 2] = \"PREMULTIPLY_ALPHA\";\n})(ALPHA_MODES || (ALPHA_MODES = {}));\n/**\n * Configure whether filter textures are cleared after binding.\n *\n * Filter textures need not be cleared if the filter does not use pixel blending. {@link CLEAR_MODES.BLIT} will detect\n * this and skip clearing as an optimization.\n *\n * @name CLEAR_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} BLEND - Do not clear the filter texture. The filter's output will blend on top of the output texture.\n * @property {number} CLEAR - Always clear the filter texture.\n * @property {number} BLIT - Clear only if {@link FilterSystem.forceClear} is set or if the filter uses pixel blending.\n * @property {number} NO - Alias for BLEND, same as `false` in earlier versions\n * @property {number} YES - Alias for CLEAR, same as `true` in earlier versions\n * @property {number} AUTO - Alias for BLIT\n */\nvar CLEAR_MODES;\n(function (CLEAR_MODES) {\n    CLEAR_MODES[CLEAR_MODES[\"NO\"] = 0] = \"NO\";\n    CLEAR_MODES[CLEAR_MODES[\"YES\"] = 1] = \"YES\";\n    CLEAR_MODES[CLEAR_MODES[\"AUTO\"] = 2] = \"AUTO\";\n    CLEAR_MODES[CLEAR_MODES[\"BLEND\"] = 0] = \"BLEND\";\n    CLEAR_MODES[CLEAR_MODES[\"CLEAR\"] = 1] = \"CLEAR\";\n    CLEAR_MODES[CLEAR_MODES[\"BLIT\"] = 2] = \"BLIT\";\n})(CLEAR_MODES || (CLEAR_MODES = {}));\n/**\n * The gc modes that are supported by pixi.\n *\n * The {@link PIXI.settings.GC_MODE} Garbage Collection mode for PixiJS textures is AUTO\n * If set to GC_MODE, the renderer will occasionally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @name GC_MODES\n * @enum {number}\n * @static\n * @memberof PIXI\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nvar GC_MODES;\n(function (GC_MODES) {\n    GC_MODES[GC_MODES[\"AUTO\"] = 0] = \"AUTO\";\n    GC_MODES[GC_MODES[\"MANUAL\"] = 1] = \"MANUAL\";\n})(GC_MODES || (GC_MODES = {}));\n/**\n * Constants that specify float precision in shaders.\n *\n * @name PRECISION\n * @memberof PIXI\n * @constant\n * @static\n * @enum {string}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nvar PRECISION;\n(function (PRECISION) {\n    PRECISION[\"LOW\"] = \"lowp\";\n    PRECISION[\"MEDIUM\"] = \"mediump\";\n    PRECISION[\"HIGH\"] = \"highp\";\n})(PRECISION || (PRECISION = {}));\n/**\n * Constants for mask implementations.\n * We use `type` suffix because it leads to very different behaviours\n *\n * @name MASK_TYPES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - Mask is ignored\n * @property {number} SCISSOR - Scissor mask, rectangle on screen, cheap\n * @property {number} STENCIL - Stencil mask, 1-bit, medium, works only if renderer supports stencil\n * @property {number} SPRITE - Mask that uses SpriteMaskFilter, uses temporary RenderTexture\n */\nvar MASK_TYPES;\n(function (MASK_TYPES) {\n    MASK_TYPES[MASK_TYPES[\"NONE\"] = 0] = \"NONE\";\n    MASK_TYPES[MASK_TYPES[\"SCISSOR\"] = 1] = \"SCISSOR\";\n    MASK_TYPES[MASK_TYPES[\"STENCIL\"] = 2] = \"STENCIL\";\n    MASK_TYPES[MASK_TYPES[\"SPRITE\"] = 3] = \"SPRITE\";\n})(MASK_TYPES || (MASK_TYPES = {}));\n/**\n * Constants for multi-sampling antialiasing.\n *\n * @see PIXI.Framebuffer#multisample\n *\n * @name MSAA_QUALITY\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - No multisampling for this renderTexture\n * @property {number} LOW - Try 2 samples\n * @property {number} MEDIUM - Try 4 samples\n * @property {number} HIGH - Try 8 samples\n */\nvar MSAA_QUALITY;\n(function (MSAA_QUALITY) {\n    MSAA_QUALITY[MSAA_QUALITY[\"NONE\"] = 0] = \"NONE\";\n    MSAA_QUALITY[MSAA_QUALITY[\"LOW\"] = 2] = \"LOW\";\n    MSAA_QUALITY[MSAA_QUALITY[\"MEDIUM\"] = 4] = \"MEDIUM\";\n    MSAA_QUALITY[MSAA_QUALITY[\"HIGH\"] = 8] = \"HIGH\";\n})(MSAA_QUALITY || (MSAA_QUALITY = {}));\n/**\n * Constants for various buffer types in Pixi\n *\n * @see PIXI.BUFFER_TYPE\n *\n * @name BUFFER_TYPE\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} ELEMENT_ARRAY_BUFFER - buffer type for using as an index buffer\n * @property {number} ARRAY_BUFFER - buffer type for using attribute data\n * @property {number} UNIFORM_BUFFER - the buffer type is for uniform buffer objects\n */\nvar BUFFER_TYPE;\n(function (BUFFER_TYPE) {\n    BUFFER_TYPE[BUFFER_TYPE[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n    BUFFER_TYPE[BUFFER_TYPE[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n    // NOT YET SUPPORTED\n    BUFFER_TYPE[BUFFER_TYPE[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n})(BUFFER_TYPE || (BUFFER_TYPE = {}));\n\nvar _tempMatrix = new math.Matrix();\ndisplay.DisplayObject.prototype._cacheAsBitmap = false;\ndisplay.DisplayObject.prototype._cacheData = null;\ndisplay.DisplayObject.prototype._cacheAsBitmapResolution = null;\ndisplay.DisplayObject.prototype._cacheAsBitmapMultisample = MSAA_QUALITY.NONE;\n// figured there's no point adding ALL the extra variables to prototype.\n// this model can hold the information needed. This can also be generated on demand as\n// most objects are not cached as bitmaps.\n/**\n * @class\n * @ignore\n * @private\n */\nvar CacheData = /** @class */ (function () {\n    function CacheData() {\n        this.textureCacheId = null;\n        this.originalRender = null;\n        this.originalRenderCanvas = null;\n        this.originalCalculateBounds = null;\n        this.originalGetLocalBounds = null;\n        this.originalUpdateTransform = null;\n        this.originalDestroy = null;\n        this.originalMask = null;\n        this.originalFilterArea = null;\n        this.originalContainsPoint = null;\n        this.sprite = null;\n    }\n    return CacheData;\n}());\nObject.defineProperties(display.DisplayObject.prototype, {\n    /**\n     * The resolution to use for cacheAsBitmap. By default this will use the renderer's resolution\n     * but can be overriden for performance. Lower values will reduce memory usage at the expense\n     * of render quality. A falsey value of `null` or `0` will default to the renderer's resolution.\n     * If `cacheAsBitmap` is set to `true`, this will re-render with the new resolution.\n     *\n     * @member {number} cacheAsBitmapResolution\n     * @memberof PIXI.DisplayObject#\n     * @default null\n     */\n    cacheAsBitmapResolution: {\n        get: function () {\n            return this._cacheAsBitmapResolution;\n        },\n        set: function (resolution) {\n            if (resolution === this._cacheAsBitmapResolution) {\n                return;\n            }\n            this._cacheAsBitmapResolution = resolution;\n            if (this.cacheAsBitmap) {\n                // Toggle to re-render at the new resolution\n                this.cacheAsBitmap = false;\n                this.cacheAsBitmap = true;\n            }\n        },\n    },\n    /**\n     * The number of samples to use for cacheAsBitmap. If set to `null`, the renderer's\n     * sample count is used.\n     * If `cacheAsBitmap` is set to `true`, this will re-render with the new number of samples.\n     *\n     * @member {number} cacheAsBitmapMultisample\n     * @memberof PIXI.DisplayObject#\n     * @default PIXI.MSAA_QUALITY.NONE\n     */\n    cacheAsBitmapMultisample: {\n        get: function () {\n            return this._cacheAsBitmapMultisample;\n        },\n        set: function (multisample) {\n            if (multisample === this._cacheAsBitmapMultisample) {\n                return;\n            }\n            this._cacheAsBitmapMultisample = multisample;\n            if (this.cacheAsBitmap) {\n                // Toggle to re-render with new multisample\n                this.cacheAsBitmap = false;\n                this.cacheAsBitmap = true;\n            }\n        },\n    },\n    /**\n     * Set this to true if you want this display object to be cached as a bitmap.\n     * This basically takes a snap shot of the display object as it is at that moment. It can\n     * provide a performance benefit for complex static displayObjects.\n     * To remove simply set this property to `false`\n     *\n     * IMPORTANT GOTCHA - Make sure that all your textures are preloaded BEFORE setting this property to true\n     * as it will take a snapshot of what is currently there. If the textures have not loaded then they will not appear.\n     *\n     * @member {boolean}\n     * @memberof PIXI.DisplayObject#\n     */\n    cacheAsBitmap: {\n        get: function () {\n            return this._cacheAsBitmap;\n        },\n        set: function (value) {\n            if (this._cacheAsBitmap === value) {\n                return;\n            }\n            this._cacheAsBitmap = value;\n            var data;\n            if (value) {\n                if (!this._cacheData) {\n                    this._cacheData = new CacheData();\n                }\n                data = this._cacheData;\n                data.originalRender = this.render;\n                data.originalRenderCanvas = this.renderCanvas;\n                data.originalUpdateTransform = this.updateTransform;\n                data.originalCalculateBounds = this.calculateBounds;\n                data.originalGetLocalBounds = this.getLocalBounds;\n                data.originalDestroy = this.destroy;\n                data.originalContainsPoint = this.containsPoint;\n                data.originalMask = this._mask;\n                data.originalFilterArea = this.filterArea;\n                this.render = this._renderCached;\n                this.renderCanvas = this._renderCachedCanvas;\n                this.destroy = this._cacheAsBitmapDestroy;\n            }\n            else {\n                data = this._cacheData;\n                if (data.sprite) {\n                    this._destroyCachedDisplayObject();\n                }\n                this.render = data.originalRender;\n                this.renderCanvas = data.originalRenderCanvas;\n                this.calculateBounds = data.originalCalculateBounds;\n                this.getLocalBounds = data.originalGetLocalBounds;\n                this.destroy = data.originalDestroy;\n                this.updateTransform = data.originalUpdateTransform;\n                this.containsPoint = data.originalContainsPoint;\n                this._mask = data.originalMask;\n                this.filterArea = data.originalFilterArea;\n            }\n        },\n    },\n});\n/**\n * Renders a cached version of the sprite with WebGL\n *\n * @private\n * @method _renderCached\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Renderer} renderer - the WebGL renderer\n */\ndisplay.DisplayObject.prototype._renderCached = function _renderCached(renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n    }\n    this._initCachedDisplayObject(renderer);\n    this._cacheData.sprite.transform._worldID = this.transform._worldID;\n    this._cacheData.sprite.worldAlpha = this.worldAlpha;\n    this._cacheData.sprite._render(renderer);\n};\n/**\n * Prepares the WebGL renderer to cache the sprite\n *\n * @private\n * @method _initCachedDisplayObject\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Renderer} renderer - the WebGL renderer\n */\ndisplay.DisplayObject.prototype._initCachedDisplayObject = function _initCachedDisplayObject(renderer) {\n    var _a;\n    if (this._cacheData && this._cacheData.sprite) {\n        return;\n    }\n    // make sure alpha is set to 1 otherwise it will get rendered as invisible!\n    var cacheAlpha = this.alpha;\n    this.alpha = 1;\n    // first we flush anything left in the renderer (otherwise it would get rendered to the cached texture)\n    renderer.batch.flush();\n    // this.filters= [];\n    // next we find the dimensions of the untransformed object\n    // this function also calls updatetransform on all its children as part of the measuring.\n    // This means we don't need to update the transform again in this function\n    // TODO pass an object to clone too? saves having to create a new one each time!\n    var bounds = this.getLocalBounds(null, true).clone();\n    // add some padding!\n    if (this.filters) {\n        var padding = this.filters[0].padding;\n        bounds.pad(padding);\n    }\n    bounds.ceil(settings.settings.RESOLUTION);\n    // for now we cache the current renderTarget that the WebGL renderer is currently using.\n    // this could be more elegant..\n    var cachedRenderTexture = renderer.renderTexture.current;\n    var cachedSourceFrame = renderer.renderTexture.sourceFrame.clone();\n    var cachedDestinationFrame = renderer.renderTexture.destinationFrame.clone();\n    var cachedProjectionTransform = renderer.projection.transform;\n    // We also store the filter stack - I will definitely look to change how this works a little later down the line.\n    // const stack = renderer.filterManager.filterStack;\n    // this renderTexture will be used to store the cached DisplayObject\n    var renderTexture = core.RenderTexture.create({\n        width: bounds.width,\n        height: bounds.height,\n        resolution: this.cacheAsBitmapResolution || renderer.resolution,\n        multisample: (_a = this.cacheAsBitmapMultisample) !== null && _a !== void 0 ? _a : renderer.multisample,\n    });\n    var textureCacheId = \"cacheAsBitmap_\" + utils.uid();\n    this._cacheData.textureCacheId = textureCacheId;\n    core.BaseTexture.addToCache(renderTexture.baseTexture, textureCacheId);\n    core.Texture.addToCache(renderTexture, textureCacheId);\n    // need to set //\n    var m = this.transform.localTransform.copyTo(_tempMatrix).invert().translate(-bounds.x, -bounds.y);\n    // set all properties to there original so we can render to a texture\n    this.render = this._cacheData.originalRender;\n    renderer.render(this, { renderTexture: renderTexture, clear: true, transform: m, skipUpdateTransform: false });\n    renderer.framebuffer.blit();\n    // now restore the state be setting the new properties\n    renderer.projection.transform = cachedProjectionTransform;\n    renderer.renderTexture.bind(cachedRenderTexture, cachedSourceFrame, cachedDestinationFrame);\n    // renderer.filterManager.filterStack = stack;\n    this.render = this._renderCached;\n    // the rest is the same as for Canvas\n    this.updateTransform = this.displayObjectUpdateTransform;\n    this.calculateBounds = this._calculateCachedBounds;\n    this.getLocalBounds = this._getCachedLocalBounds;\n    this._mask = null;\n    this.filterArea = null;\n    this.alpha = cacheAlpha;\n    // create our cached sprite\n    var cachedSprite = new sprite.Sprite(renderTexture);\n    cachedSprite.transform.worldTransform = this.transform.worldTransform;\n    cachedSprite.anchor.x = -(bounds.x / bounds.width);\n    cachedSprite.anchor.y = -(bounds.y / bounds.height);\n    cachedSprite.alpha = cacheAlpha;\n    cachedSprite._bounds = this._bounds;\n    this._cacheData.sprite = cachedSprite;\n    this.transform._parentID = -1;\n    // restore the transform of the cached sprite to avoid the nasty flicker..\n    if (!this.parent) {\n        this.enableTempParent();\n        this.updateTransform();\n        this.disableTempParent(null);\n    }\n    else {\n        this.updateTransform();\n    }\n    // map the hit test..\n    this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\n/**\n * Renders a cached version of the sprite with canvas\n *\n * @private\n * @method _renderCachedCanvas\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer\n */\ndisplay.DisplayObject.prototype._renderCachedCanvas = function _renderCachedCanvas(renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n    }\n    this._initCachedDisplayObjectCanvas(renderer);\n    this._cacheData.sprite.worldAlpha = this.worldAlpha;\n    this._cacheData.sprite._renderCanvas(renderer);\n};\n// TODO this can be the same as the WebGL version.. will need to do a little tweaking first though..\n/**\n * Prepares the Canvas renderer to cache the sprite\n *\n * @private\n * @method _initCachedDisplayObjectCanvas\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer\n */\ndisplay.DisplayObject.prototype._initCachedDisplayObjectCanvas = function _initCachedDisplayObjectCanvas(renderer) {\n    if (this._cacheData && this._cacheData.sprite) {\n        return;\n    }\n    // get bounds actually transforms the object for us already!\n    var bounds = this.getLocalBounds(null, true);\n    var cacheAlpha = this.alpha;\n    this.alpha = 1;\n    var cachedRenderTarget = renderer.context;\n    var cachedProjectionTransform = renderer._projTransform;\n    bounds.ceil(settings.settings.RESOLUTION);\n    var renderTexture = core.RenderTexture.create({ width: bounds.width, height: bounds.height });\n    var textureCacheId = \"cacheAsBitmap_\" + utils.uid();\n    this._cacheData.textureCacheId = textureCacheId;\n    core.BaseTexture.addToCache(renderTexture.baseTexture, textureCacheId);\n    core.Texture.addToCache(renderTexture, textureCacheId);\n    // need to set //\n    var m = _tempMatrix;\n    this.transform.localTransform.copyTo(m);\n    m.invert();\n    m.tx -= bounds.x;\n    m.ty -= bounds.y;\n    // m.append(this.transform.worldTransform.)\n    // set all properties to there original so we can render to a texture\n    this.renderCanvas = this._cacheData.originalRenderCanvas;\n    renderer.render(this, { renderTexture: renderTexture, clear: true, transform: m, skipUpdateTransform: false });\n    // now restore the state be setting the new properties\n    renderer.context = cachedRenderTarget;\n    renderer._projTransform = cachedProjectionTransform;\n    this.renderCanvas = this._renderCachedCanvas;\n    // the rest is the same as for WebGL\n    this.updateTransform = this.displayObjectUpdateTransform;\n    this.calculateBounds = this._calculateCachedBounds;\n    this.getLocalBounds = this._getCachedLocalBounds;\n    this._mask = null;\n    this.filterArea = null;\n    this.alpha = cacheAlpha;\n    // create our cached sprite\n    var cachedSprite = new sprite.Sprite(renderTexture);\n    cachedSprite.transform.worldTransform = this.transform.worldTransform;\n    cachedSprite.anchor.x = -(bounds.x / bounds.width);\n    cachedSprite.anchor.y = -(bounds.y / bounds.height);\n    cachedSprite.alpha = cacheAlpha;\n    cachedSprite._bounds = this._bounds;\n    this._cacheData.sprite = cachedSprite;\n    this.transform._parentID = -1;\n    // restore the transform of the cached sprite to avoid the nasty flicker..\n    if (!this.parent) {\n        this.parent = renderer._tempDisplayObjectParent;\n        this.updateTransform();\n        this.parent = null;\n    }\n    else {\n        this.updateTransform();\n    }\n    // map the hit test..\n    this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\n/**\n * Calculates the bounds of the cached sprite\n *\n * @private\n * @method\n */\ndisplay.DisplayObject.prototype._calculateCachedBounds = function _calculateCachedBounds() {\n    this._bounds.clear();\n    this._cacheData.sprite.transform._worldID = this.transform._worldID;\n    this._cacheData.sprite._calculateBounds();\n    this._bounds.updateID = this._boundsID;\n};\n/**\n * Gets the bounds of the cached sprite.\n *\n * @private\n * @method\n * @return {Rectangle} The local bounds.\n */\ndisplay.DisplayObject.prototype._getCachedLocalBounds = function _getCachedLocalBounds() {\n    return this._cacheData.sprite.getLocalBounds(null);\n};\n/**\n * Destroys the cached sprite.\n *\n * @private\n * @method\n */\ndisplay.DisplayObject.prototype._destroyCachedDisplayObject = function _destroyCachedDisplayObject() {\n    this._cacheData.sprite._texture.destroy(true);\n    this._cacheData.sprite = null;\n    core.BaseTexture.removeFromCache(this._cacheData.textureCacheId);\n    core.Texture.removeFromCache(this._cacheData.textureCacheId);\n    this._cacheData.textureCacheId = null;\n};\n/**\n * Destroys the cached object.\n *\n * @private\n * @method\n * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n *  have been set to that value.\n *  Used when destroying containers, see the Container.destroy method.\n */\ndisplay.DisplayObject.prototype._cacheAsBitmapDestroy = function _cacheAsBitmapDestroy(options) {\n    this.cacheAsBitmap = false;\n    this.destroy(options);\n};\n\nexports.CacheData = CacheData;\n//# sourceMappingURL=mixin-cache-as-bitmap.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","core","sprite","display","math","utils","settings","ENV","RENDERER_TYPE","BUFFER_BITS","BLEND_MODES","DRAW_MODES","FORMATS","TARGETS","TYPES","SAMPLER_TYPES","SCALE_MODES","WRAP_MODES","MIPMAP_MODES","ALPHA_MODES","CLEAR_MODES","GC_MODES","PRECISION","MASK_TYPES","MSAA_QUALITY","BUFFER_TYPE","_tempMatrix","Matrix","DisplayObject","prototype","_cacheAsBitmap","_cacheData","_cacheAsBitmapResolution","_cacheAsBitmapMultisample","NONE","CacheData","originalContainsPoint","originalFilterArea","originalMask","originalDestroy","originalUpdateTransform","originalGetLocalBounds","originalCalculateBounds","originalRenderCanvas","originalRender","textureCacheId","defineProperties","cacheAsBitmapResolution","get","set","resolution","cacheAsBitmap","cacheAsBitmapMultisample","multisample","data","render","renderCanvas","updateTransform","calculateBounds","getLocalBounds","destroy","containsPoint","_mask","filterArea","_renderCached","_renderCachedCanvas","_cacheAsBitmapDestroy","_destroyCachedDisplayObject","display.DisplayObject.prototype._renderCached","renderer","visible","worldAlpha","renderable","_initCachedDisplayObject","transform","_worldID","_render","display.DisplayObject.prototype._initCachedDisplayObject","_a","cacheAlpha","alpha","batch","flush","bounds","clone","filters","pad","padding","ceil","RESOLUTION","cachedRenderTexture","renderTexture","current","cachedSourceFrame","sourceFrame","cachedDestinationFrame","destinationFrame","cachedProjectionTransform","projection","RenderTexture","create","width","height","uid","BaseTexture","addToCache","baseTexture","Texture","m","localTransform","copyTo","invert","translate","x","y","clear","skipUpdateTransform","framebuffer","blit","bind","displayObjectUpdateTransform","_calculateCachedBounds","_getCachedLocalBounds","cachedSprite","Sprite","worldTransform","anchor","_bounds","_parentID","parent","enableTempParent","disableTempParent","display.DisplayObject.prototype._renderCachedCanvas","_initCachedDisplayObjectCanvas","_renderCanvas","display.DisplayObject.prototype._initCachedDisplayObjectCanvas","cachedRenderTarget","context","_projTransform","tx","ty","_tempDisplayObjectParent","display.DisplayObject.prototype._calculateCachedBounds","_calculateBounds","updateID","_boundsID","display.DisplayObject.prototype._getCachedLocalBounds","display.DisplayObject.prototype._destroyCachedDisplayObject","_texture","removeFromCache","display.DisplayObject.prototype._cacheAsBitmapDestroy","options"]
}
